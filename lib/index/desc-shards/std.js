const stdDescShards = new Map(JSON.parse(`[["alloc",{"0":["The Rust core allocation and collections library","Memory allocation APIs","A module for working with borrowed data.","The Box&lt;T&gt; type for heap allocation.","Collection types.","Utilities related to FFI bindings.","Utilities for formatting and printing Strings.","Creates a String using interpolation of runtime …","Single-threaded reference-counting pointers. ‘Rc’ …","Utilities for the slice primitive type.","Utilities for the str primitive type.","A UTF-8–encoded growable string.","Thread-safe reference-counting pointers.","Types and Traits for working with asynchronous tasks.","A contiguous growable array type with heap-allocated …","Creates a Vec containing the arguments.","The AllocError error indicates an allocation failure that …","An implementation of Allocator can allocate grow shrink …","The global memory allocator.","A memory allocator that can be registered as the standard …","Layout of a block of memory.","The parameters given to Layout::from_size_align or some …","The minimum byte alignment for a memory block of this …","Creates a layout describing the record that can hold a …","Allocate memory with the global allocator.","Allocate memory as described by the given layout.","Allocate zero-initialized memory with the global allocator.","Behaves like alloc but also ensures that the contents are …","Attempts to allocate a block of memory.","Behaves like allocate but also ensures that the returned …","Creates a layout describing the record for a [T; n].","Creates a “by reference” adapter for this instance of …","Creates a NonNull that is dangling but well-aligned for …","Deallocate memory with the global allocator.","Deallocate the block of memory at the given ptr pointer …","Deallocates the memory referenced by ptr.","Creates a layout describing the record for self followed by","Creates a layout describing the record for self followed by","Produces layout describing a record that could be used to …","Produces layout describing a record that could be used to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a Layout from a given size and align or …","Creates a layout bypassing all checks.","Attempts to extend the memory block.","Behaves like grow but also ensures that the new contents …","Signal a memory allocation error.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Constructs a Layout suitable for holding a value of type T.","Creates a layout by rounding the size of this layout up to …","Returns the amount of padding we must insert after self to …","Reallocate memory with the global allocator.","Shrink or grow a block of memory to the given new_size in …","Creates a layout describing the record for n instances of …","Creates a layout describing the record for n instances of …","Attempts to shrink the memory block.","The minimum size in bytes for a memory block of this …","A trait for borrowing data.","A trait for mutably borrowing data.","Borrowed data.","A clone-on-write smart pointer.","Owned data.","The resulting type after obtaining ownership.","A generalization of Clone to borrowed data.","Immutably borrows from an owned value.","Mutably borrows from an owned value.","Uses borrowed data to replace owned data usually by …","Creates an owned Cow&lt;’a B&gt; with the default value for …","Creates a Borrowed variant of Cow from a slice.","Creates a Borrowed variant of Cow from a reference to Vec.","Converts a String into an Owned variant. No heap …","Creates a Borrowed variant of Cow from a reference to an …","Returns the argument unchanged.","Converts a string slice into a Borrowed variant. No heap …","Converts a CStr into a borrowed Cow without copying or …","Converts a String reference into a Borrowed variant. No …","Converts a CString into an owned Cow without copying or …","Creates an Owned variant of Cow from an owned instance of …","Converts a &amp;CString into a borrowed Cow without copying or …","Calls U::from(self).","Extracts the owned data.","Returns true if the data is borrowed i.e. if to_mut would …","Returns true if the data is owned i.e. if to_mut would be …","Acquires a mutable reference to the owned form of the data.","Creates owned data from borrowed data usually by cloning.","A pointer type that uniquely owns a heap allocation of …","ThinBox.","Returns a reference to the underlying allocator.","Converts to Box&lt;T A&gt;.","Converts to Box&lt;[T] A&gt;.","Returns a new box with a clone() of this box’s contents.","Copies source’s contents into self without creating a …","Copies source’s contents into self without creating a …","Creates a Box&lt;T&gt; with the Default value for T.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","Returns the argument unchanged.","Converts a &amp;str into a Box&lt;str&gt;","Converts a String into a box of dyn Error + Send + Sync.","Converts a &amp;[T] into a Box&lt;[T]&gt;","Converts a String into a box of dyn Error.","Converts a [T; N] into a Box&lt;[T]&gt;","Converts a type of Error + Send + Sync into a box of dyn …","Converts a Cow&lt;&#39;a CStr&gt; into a Box&lt;CStr&gt; by copying the …","Converts a Cow into a box of dyn Error.","Converts a T into a Box&lt;T&gt;","Converts the given String to a boxed str slice that is …","Converts a Cow&lt;&#39;_ [T]&gt; into a Box&lt;[T]&gt;","Converts a str into a box of dyn Error.","Converts a Cow into a box of dyn Error + Send + Sync.","Returns the argument unchanged.","Converts a &amp;CStr into a Box&lt;CStr&gt; by copying the contents …","Converts a str into a box of dyn Error + Send + Sync.","Converts a Box&lt;str&gt; into a Box&lt;[u8]&gt;","Converts a CString into a Box&lt;CStr&gt; without copying or …","Convert a vector into a boxed slice.","Converts a Cow&lt;&#39;_ str&gt; into a Box&lt;str&gt;","Converts a type of Error into a box of dyn Error.","Constructs a box from a raw pointer.","Constructs a box from a raw pointer in the given allocator.","Calls U::from(self).","Calls U::from(self).","Converts a Box&lt;T&gt; into a Box&lt;[T]&gt;","Consumes the Box returning the wrapped value.","Converts a Box&lt;T&gt; into a Pin&lt;Box&lt;T&gt;&gt;. If T does not …","Consumes the Box returning a wrapped raw pointer.","Consumes the Box returning a wrapped raw pointer and the …","Consumes and leaks the Box returning a mutable reference …","Moves a type to the heap with its Metadata stored in the …","Allocates memory on the heap and then places x into it.","Allocates memory in the given allocator then places x into …","Constructs a new box with uninitialized contents.","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents.","Constructs a new boxed slice with uninitialized contents …","Moves a type to the heap with its Metadata stored in the …","Constructs a new Box with uninitialized contents with the …","Constructs a new Box with uninitialized contents with the …","Constructs a new boxed slice with uninitialized contents …","Constructs a new boxed slice with uninitialized contents …","Constructs a new Pin&lt;Box&lt;T&gt;&gt;. If T does not implement Unpin…","Constructs a new Pin&lt;Box&lt;T A&gt;&gt;. If T does not implement …","Attempts to convert a Box&lt;[T]&gt; into a Box&lt;[T; N]&gt;.","Attempts to convert a Vec&lt;T&gt; into a Box&lt;[T; N]&gt;.","Moves a type to the heap with its Metadata stored in the …","Allocates memory on the heap then places x into it …","Allocates memory in the given allocator then places x into …","Constructs a new box with uninitialized contents on the …","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents. …","Constructs a new Box with uninitialized contents with the …","Constructs a new Box with uninitialized contents with the …","Constructs a new boxed slice with uninitialized contents …","Writes the value and converts to Box&lt;T A&gt;.","The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","The error type for try_reserve methods.","Details of the allocation that caused a TryReserveError","A priority queue implemented with a binary heap.","An ordered map based on a B-Tree.","An ordered set based on a B-Tree.","Returns the argument unchanged.","Returns the argument unchanged.","Always evaluates to TryReserveErrorKind::CapacityOverflow.","Calls U::from(self).","Calls U::from(self).","Details about the allocation that caused the error","A doubly-linked list with owned nodes.","A double-ended queue (deque) implemented with a growable …","The layout of allocation request that failed","A priority queue implemented with a binary heap.","A draining iterator over the elements of a BinaryHeap.","A draining iterator over the elements of a BinaryHeap.","An owning iterator over the elements of a BinaryHeap.","An iterator over the elements of a BinaryHeap.","Structure wrapping a mutable reference to the greatest …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Moves all the elements of other into self leaving other …","Returns a slice of all values in the underlying vector in …","Returns the number of elements the binary heap can hold …","Drops all items from the binary heap.","Overwrites the contents of self with a clone of the …","Creates an empty BinaryHeap&lt;T&gt;.","Creates an empty binary_heap::IntoIter.","Clears the binary heap returning an iterator over the …","Clears the binary heap returning an iterator over the …","Removes heap elements in heap order.","Returns the argument unchanged.","Converts a Vec&lt;T&gt; into a BinaryHeap&lt;T&gt;.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Creates a consuming iterator that is one that moves each …","Returns an iterator which retrieves elements in heap order.","Consumes the BinaryHeap and returns a vector in sorted …","Consumes the BinaryHeap and returns the underlying vector …","Checks if the binary heap is empty.","Returns an iterator visiting all values in the underlying …","Returns the length of the binary heap.","Creates an empty BinaryHeap as a max-heap.","Creates an empty BinaryHeap as a max-heap using A as …","Returns the greatest item in the binary heap or None if …","Returns a mutable reference to the greatest item in the …","Removes the greatest item from the binary heap and returns …","Removes the peeked value from the heap and returns it.","Pushes an item onto the binary heap.","Reserves capacity for at least additional elements more …","Reserves the minimum capacity for at least additional …","Retains only the elements specified by the predicate.","Discards capacity with a lower bound.","Discards as much additional capacity as possible.","Tries to reserve capacity for at least additional elements …","Tries to reserve the minimum capacity for at least …","Creates an empty BinaryHeap with at least the specified …","Creates an empty BinaryHeap with at least the specified …","An ordered map based on a B-Tree.","A cursor over a BTreeMap.","A cursor over a BTreeMap with editing operations.","A cursor over a BTreeMap with editing operations and …","A view into a single entry in a map which may either be …","An iterator produced by calling extract_if on BTreeMap.","An owning iterator over the entries of a BTreeMap sorted …","An owning iterator over the keys of a BTreeMap.","An owning iterator over the values of a BTreeMap.","An iterator over the entries of a BTreeMap.","A mutable iterator over the entries of a BTreeMap.","An iterator over the keys of a BTreeMap.","An occupied entry.","A view into an occupied entry in a BTreeMap. It is part of …","The error returned by try_insert when the key already …","An iterator over a sub-range of entries in a BTreeMap.","A mutable iterator over a sub-range of entries in a …","Error type returned by CursorMut::insert_before and …","A vacant entry.","A view into a vacant entry in a BTreeMap. It is part of …","An iterator over the values of a BTreeMap.","A mutable iterator over the values of a BTreeMap.","Provides in-place mutable access to an occupied entry …","Moves all elements from other into self leaving other …","Returns a read-only cursor pointing to the same location …","Returns a read-only cursor pointing to the same location …","Clears the map removing all elements.","Returns true if the map contains a value for the specified …","Creates an empty BTreeMap.","Creates an empty btree_map::Iter.","Creates an empty btree_map::IterMut.","Creates an empty btree_map::IntoIter.","Creates an empty btree_map::Keys.","Creates an empty btree_map::Values.","Creates an empty btree_map::IntoKeys.","Creates an empty btree_map::IntoValues.","Creates an empty btree_map::Range.","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","Creates an iterator that visits all elements (key-value …","Returns the first entry in the map for in-place …","Returns the first key-value pair in the map. The key in …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a [(K V); N] into a BTreeMap&lt;(K V)&gt;.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the value in the entry.","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied …","Gets a mutable reference to the value in the entry.","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the …","Sets the value of the entry with the VacantEntry’s key …","Sets the value of the entry with the OccupiedEntry’s key","Inserts a key-value pair into the map.","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Gets an owning iterator over the entries of the map …","Take ownership of the key.","Creates a consuming iterator visiting all the keys in …","Converts the entry into a mutable reference to its value.","Creates a consuming iterator visiting all the values in …","Returns true if the map contains no elements.","Gets an iterator over the entries of the map sorted by …","Gets a mutable iterator over the entries of the map …","Returns a reference to this entry’s key.","Gets a reference to the key that would be used when …","Gets a reference to the key in the entry.","Gets an iterator over the keys of the map in sorted order.","Returns the last entry in the map for in-place …","Returns the last key-value pair in the map. The key in …","Returns the number of elements in the map.","Returns a Cursor pointing at the gap before the smallest …","Returns a CursorMut pointing at the gap before the …","Makes a new empty BTreeMap.","Makes a new empty BTreeMap with a reasonable choice for B.","Advances the cursor to the next gap returning the key and …","Advances the cursor to the next gap returning the key and …","Advances the cursor to the next gap returning the key and …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting if empty …","Returns a reference to the key and value of the next …","Returns a reference to the key and value of the next …","Returns a reference to the key and value of the next …","Returns a reference to the key and value of the previous …","Returns a reference to the key and value of the previous …","Returns a reference to the key and value of the previous …","Removes and returns the first element in the map. The key …","Removes and returns the last element in the map. The key …","Advances the cursor to the previous gap returning the key …","Advances the cursor to the previous gap returning the key …","Advances the cursor to the previous gap returning the key …","Constructs a double-ended iterator over a sub-range of …","Constructs a mutable double-ended iterator over a …","Takes the value of the entry out of the map and returns …","Removes a key from the map returning the value at the key …","Take ownership of the key and value from the map.","Removes a key from the map returning the stored key and …","Removes the next element from the BTreeMap.","Removes the next element from the BTreeMap.","Removes the precending element from the BTreeMap.","Removes the precending element from the BTreeMap.","Retains only the elements specified by the predicate.","Splits the collection into two at the given key. Returns …","Tries to insert a key-value pair into the map and returns …","Returns a Cursor pointing at the gap after the greatest key","Returns a CursorMut pointing at the gap after the greatest …","The value which was not inserted because the entry was …","Gets an iterator over the values of the map in order by …","Gets a mutable iterator over the values of the map in …","Converts the cursor into a CursorMutKey which allows …","An ordered set based on a B-Tree.","A lazy iterator producing elements in the difference of …","An iterator produced by calling extract_if on BTreeSet.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a BTreeSet in …","An iterator over the items of a BTreeSet.","An iterator over a sub-range of items in a BTreeSet.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of BTreeSet…","Moves all elements from other into self leaving other …","Returns the intersection of self and rhs as a new …","Returns the union of self and rhs as a new BTreeSet&lt;T&gt;.","Returns the symmetric difference of self and rhs as a new …","Clears the set removing all elements.","Returns true if the set contains an element equal to the …","Creates an empty BTreeSet.","Creates an empty btree_set::Iter.","Creates an empty btree_set::IntoIter.","Creates an empty btree_set::Range.","Visits the elements representing the difference i.e. the …","Creates an iterator that visits all elements in ascending …","Returns a reference to the first element in the set if …","Returns the argument unchanged.","Converts a [T; N] into a BTreeSet&lt;T&gt;.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the element in the set if any …","Adds a value to the set.","Visits the elements representing the intersection i.e. …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Gets an iterator for moving out the BTreeSet’s contents …","Returns true if self has no elements in common with other. …","Returns true if the set contains no elements.","Returns true if the set is a subset of another i.e. other…","Returns true if the set is a superset of another i.e. …","Gets an iterator that visits the elements in the BTreeSet …","Returns a reference to the last element in the set if any.","Returns the number of elements in the set.","Makes a new empty BTreeSet.","Makes a new BTreeSet with a reasonable choice of B.","Removes the first element from the set and returns it if …","Removes the last element from the set and returns it if …","Constructs a double-ended iterator over a sub-range of …","If the set contains an element equal to the value removes …","Adds a value to the set replacing the existing element …","Retains only the elements specified by the predicate.","Splits the collection into two at the value. Returns a new …","Returns the difference of self and rhs as a new BTreeSet&lt;T&gt;…","Visits the elements representing the symmetric difference …","Removes and returns the element in the set if any that …","Visits the elements representing the union i.e. all the …","A cursor over a LinkedList.","A cursor over a LinkedList with editing operations.","An iterator produced by calling extract_if on LinkedList.","An owning iterator over the elements of a LinkedList.","An iterator over the elements of a LinkedList.","A mutable iterator over the elements of a LinkedList.","A doubly-linked list with owned nodes.","Moves all elements from other to the end of the list.","Returns a read-only cursor pointing to the current element.","Provides a reference to the cursor’s parent list.","Provides a read-only reference to the cursor’s parent …","Provides a reference to the back element or None if the …","Provides a reference to the back element of the cursor’s …","Provides a reference to the back element of the cursor’s …","Provides a mutable reference to the back element or None …","Provides a mutable reference to back element of the cursor…","Removes all elements from the LinkedList.","Overwrites the contents of self with a clone of the …","Returns true if the LinkedList contains an element equal …","Returns a reference to the element that the cursor is …","Returns a reference to the element that the cursor is …","Provides a cursor at the back element.","Provides a cursor with editing operations at the back …","Provides a cursor at the front element.","Provides a cursor with editing operations at the front …","Creates an empty LinkedList&lt;T&gt;.","Creates an empty linked_list::Iter.","Creates an empty linked_list::IntoIter.","Creates an iterator which uses a closure to determine if …","Converts a [T; N] into a LinkedList&lt;T&gt;.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Provides a reference to the front element or None if the …","Provides a reference to the front element of the cursor’…","Provides a reference to the front element of the cursor’…","Provides a mutable reference to the front element or None …","Provides a mutable reference to the front element of the …","Returns the cursor position index within the LinkedList.","Returns the cursor position index within the LinkedList.","Inserts a new element into the LinkedList after the …","Inserts a new element into the LinkedList before the …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Consumes the list into an iterator yielding elements by …","Returns true if the LinkedList is empty.","Provides a forward iterator.","Provides a forward iterator with mutable references.","Returns the length of the LinkedList.","Moves the cursor to the next element of the LinkedList.","Moves the cursor to the next element of the LinkedList.","Moves the cursor to the previous element of the LinkedList.","Moves the cursor to the previous element of the LinkedList.","Creates an empty LinkedList.","Constructs an empty LinkedList&lt;T A&gt;.","Returns a reference to the next element.","Returns a reference to the next element.","Returns a reference to the previous element.","Returns a reference to the previous element.","Removes the last element from a list and returns it or …","Removes the last element from the cursor’s parent list …","Removes the first element and returns it or None if the …","Removes the first element from the cursor’s parent list …","Appends an element to the back of a list.","Appends an element to the back of the cursor’s parent …","Adds an element first in the list.","Appends an element to the front of the cursor’s parent …","Removes the element at the given index and returns it.","Removes the current element from the LinkedList.","Removes the current element from the LinkedList without …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Inserts the elements from the given LinkedList after the …","Inserts the elements from the given LinkedList before the …","Splits the list into two after the current element. This …","Splits the list into two before the current element. This …","Splits the list into two at the given index. Returns …","A draining iterator over the elements of a VecDeque.","An owning iterator over the elements of a VecDeque.","An iterator over the elements of a VecDeque.","A mutable iterator over the elements of a VecDeque.","A double-ended queue implemented with a growable ring …","Returns a reference to the underlying allocator.","Moves all the elements of other into self leaving other …","Returns a pair of slices which contain in order the …","Returns a pair of slices which contain in order the …","Provides a reference to the back element or None if the …","Provides a mutable reference to the back element or None …","Binary searches this VecDeque for a given element. If the …","Binary searches this VecDeque with a comparator function.","Binary searches this VecDeque with a key extraction …","Returns the number of elements the deque can hold without …","Clears the deque removing all values.","Overwrites the contents of self with a clone of the …","Returns true if the deque contains an element equal to the …","Creates an empty deque.","Removes the specified range from the deque in bulk …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a [T; N] into a VecDeque&lt;T&gt;.","Returns the argument unchanged.","Turn a Vec&lt;T&gt; into a VecDeque&lt;T&gt;.","Returns the argument unchanged.","Provides a reference to the front element or None if the …","Provides a mutable reference to the front element or None …","Provides a reference to the element at the given index.","Provides a mutable reference to the element at the given …","Inserts an element at index within the deque shifting all …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Consumes the deque into a front-to-back iterator yielding …","Returns true if the deque is empty.","Returns a front-to-back iterator.","Returns a front-to-back iterator that returns mutable …","Returns the number of elements in the deque.","Rearranges the internal storage of this deque so it is one …","Creates an empty deque.","Creates an empty deque.","Returns the index of the partition point according to the …","Removes the last element from the deque and returns it or …","Removes the first element and returns it or None if the …","Appends an element to the back of the deque.","Prepends an element to the deque.","Creates an iterator that covers the specified range in the …","Creates an iterator that covers the specified mutable …","Removes and returns the element at index from the deque. …","Reserves capacity for at least additional more elements to …","Reserves the minimum capacity for at least additional more …","Modifies the deque in-place so that len() is equal to …","Modifies the deque in-place so that len() is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Rotates the double-ended queue n places to the left.","Rotates the double-ended queue n places to the right.","Shrinks the capacity of the deque with a lower bound.","Shrinks the capacity of the deque as much as possible.","Splits the deque into two at the given index.","Swaps elements at indices i and j.","Removes an element from anywhere in the deque and returns …","Removes an element from anywhere in the deque and returns …","Shortens the deque keeping the first len elements and …","Tries to reserve capacity for at least additional more …","Tries to reserve the minimum capacity for at least …","Creates an empty deque with space for at least capacity …","Creates an empty deque with space for at least capacity …","Creates an empty deque with space for at least capacity …","A type representing an owned C-compatible nul-terminated …","CString and its related types.","Creates an empty CString.","Returns the argument unchanged.","Converts a Vec&lt;NonZero&lt;u8&gt;&gt; into a CString without copying …","Converts a Box&lt;CStr&gt; into a CString without copying or …","Converts a Cow&lt;&#39;a CStr&gt; into a CString by copying the …","Converts a &amp;CStr into a CString by copying the contents …","Calls U::from(self).","A type representing an owned C-compatible nul-terminated …","An error indicating that a nul byte was not in the …","An error indicating invalid UTF-8 when converting a CString…","An error indicating that an interior nul byte was found.","Returns the contents of this CString as a slice of bytes.","Returns a slice of u8s bytes that were attempted to …","Equivalent to CString::as_bytes() except that the returned …","Extracts a CStr slice containing the entire string.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retakes ownership of a CString that was transferred to C …","Creates a C-compatible string by consuming a byte vector …","Attempts to converts a Vec&lt;u8&gt; to a CString.","Converts a Vec&lt;u8&gt; to a CString without checking the …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Converts this CString into a boxed CStr.","Consumes the CString and returns the underlying byte …","Returns the bytes that were attempted to convert to a …","Equivalent to CString::into_bytes() except that the …","Consumes this error returning original CString which …","Consumes the CString and transfers ownership of the string …","Converts the CString into a String if it contains valid …","Consumes this error returning the underlying vector of …","Creates a new C-compatible string from a container of …","Returns the position of the nul byte in the slice that …","Access the underlying UTF-8 error that was the cause of …","Possible alignments returned by Formatter::align","This structure represents a safely precompiled version of …","b formatting.","Indication that contents should be center-aligned.","? formatting.","Derive macro generating an impl of the trait Debug.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","Format trait for an empty format {}.","Contains the error value","The error type which is returned from formatting a message …","Configuration for formatting.","Implements fmt::Debug and fmt::Display using a function.","Indication that contents should be left-aligned.","e formatting.","x formatting.","o formatting.","Contains the success value","p formatting.","The type returned by formatter methods.","Indication that contents should be right-aligned.","E formatting.","X formatting.","A trait for writing or formatting into Unicode-accepting …","Flag indicating what form of alignment was requested.","Determines if the # flag was specified.","Get the formatted string if it has no arguments to be …","Creates a DebugList builder designed to assist with …","Creates a DebugMap builder designed to assist with …","Creates a DebugSet builder designed to assist with …","Creates a DebugStruct builder designed to assist with …","Creates a DebugTuple builder designed to assist with …","Adds the contents of an iterator of entries to the set …","Adds the contents of an iterator of entries to the list …","Adds the contents of an iterator of entries to the map …","Adds a new entry to the set output.","Adds a new entry to the list output.","Adds a new entry to the map output.","Adds a new entry to the set output.","Adds a new entry to the list output.","Adds a new field to the generated struct output.","Adds a new field to the generated tuple struct output.","Adds a new field to the generated struct output.","Adds a new field to the generated tuple struct output.","Character used as ‘fill’ whenever there is alignment.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Marks the struct as non-exhaustive indicating to the …","Flags for formatting","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","The format function takes an Arguments struct and returns …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Adds the key part of a new entry to the map output.","Adds the key part of a new entry to the map output.","This function takes a string slice and emits it to the …","Performs the correct padding for an integer which has …","Optionally specified precision for numeric types. …","Determines if the 0 flag was specified.","Determines if the - flag was specified.","Determines if the + flag was specified.","Adds the value part of a new entry to the map output.","Adds the value part of a new entry to the map output.","Optionally specified integer width that the output should …","The write function takes an output stream and an Arguments…","Writes a char into this writer returning whether the …","Glue for usage of the write! macro with implementors of …","Writes some formatted information into this instance.","Writes a string slice into this writer returning whether …","Writes some data to the underlying buffer contained within …","A single-threaded reference-counting pointer. ‘Rc’ …","A uniquely owned Rc.","Weak is a version of Rc that holds a non-owning reference …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Provides a raw pointer to the data.","Returns a raw pointer to the object T pointed to by this …","Converts to Rc&lt;[T]&gt;.","Converts to Rc&lt;T&gt;.","Makes a clone of the Rc pointer.","Makes a clone of the Weak pointer that points to the same …","Comparison for two Rcs.","Decrements the strong reference count on the Rc&lt;T&gt; …","Decrements the strong reference count on the Rc&lt;T&gt; …","Creates an empty str inside an Rc","Creates an empty [T] inside an Rc","Creates an empty CStr inside an Rc","Creates a new Rc&lt;T&gt; with the Default value for T.","Constructs a new Weak&lt;T&gt; without allocating any memory. …","Attempt to downcast the Rc&lt;dyn Any&gt; to a concrete type.","Downcasts the Rc&lt;dyn Any&gt; to a concrete type.","Creates a new Weak pointer to this allocation.","Creates a new weak reference to the UniqueRc.","Drops the Rc.","Drops the Weak pointer.","Equality for two Rcs.","Create a reference-counted pointer from a clone-on-write …","Converts a &amp;CStr into a Rc&lt;CStr&gt; by copying the contents …","Allocate a reference-counted slice and move v’s items …","Allocate a reference-counted string slice and copy v into …","Allocate a reference-counted slice and fill it by cloning v…","Returns the argument unchanged.","Converts a CString into an Rc&lt;CStr&gt; by moving the CString …","Move a boxed object to a new reference counted …","Converts a [T; N] into an Rc&lt;[T]&gt;.","Converts a generic type T into an Rc&lt;T&gt;","Converts a reference-counted string slice into a byte …","Allocate a reference-counted string slice and copy v into …","Returns the argument unchanged.","Returns the argument unchanged.","Takes each element in the Iterator and collects it into an …","Constructs an Rc&lt;T&gt; from a raw pointer.","Converts a raw pointer previously created by into_raw back …","Constructs an Rc&lt;T A&gt; from a raw pointer in the provided …","Converts a raw pointer previously created by into_raw back …","‘Greater than or equal to’ comparison for two Rcs.","Returns a mutable reference into the given Rc if there are","Returns a mutable reference into the given Rc without any …","Greater-than comparison for two Rcs.","Increments the strong reference count on the Rc&lt;T&gt; …","Increments the strong reference count on the Rc&lt;T&gt; …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the inner value if the Rc has exactly one strong …","Consumes the Rc returning the wrapped pointer.","Consumes the Weak&lt;T&gt; and turns it into a raw pointer.","Consumes the Rc returning the wrapped pointer and …","Consumes the Weak&lt;T&gt; returning the wrapped pointer and …","Converts the UniqueRc into a regular Rc.","‘Less than or equal to’ comparison for two Rcs.","Less-than comparison for two Rcs.","Makes a mutable reference into the given Rc.","Inequality for two Rcs.","Constructs a new Rc&lt;T&gt;.","Constructs a new Weak&lt;T&gt; without allocating any memory. …","Creates a new UniqueRc.","Constructs a new Rc&lt;T&gt; while giving you a Weak&lt;T&gt; to the …","Constructs a new Rc in the provided allocator.","Constructs a new Weak&lt;T&gt; without allocating any memory …","Creates a new UniqueRc in the provided allocator.","Constructs a new Rc with uninitialized contents.","Constructs a new Rc with uninitialized contents in the …","Constructs a new reference-counted slice with …","Constructs a new reference-counted slice with …","Constructs a new Rc with uninitialized contents with the …","Constructs a new Rc with uninitialized contents with the …","Constructs a new reference-counted slice with …","Constructs a new reference-counted slice with …","Partial comparison for two Rcs.","Constructs a new Pin&lt;Rc&lt;T&gt;&gt;. If T does not implement Unpin…","Constructs a new Pin&lt;Rc&lt;T&gt;&gt; in the provided allocator. If T…","Returns true if the two Rcs point to the same allocation …","Returns true if the two Weaks point to the same allocation …","Gets the number of strong (Rc) pointers to this allocation.","Gets the number of strong (Rc) pointers pointing to this …","Constructs a new Rc&lt;T&gt; returning an error if the …","Constructs a new Rc&lt;T&gt; in the provided allocator …","Constructs a new Rc with uninitialized contents returning …","Constructs a new Rc with uninitialized contents in the …","Constructs a new Rc with uninitialized contents with the …","Constructs a new Rc with uninitialized contents with the …","Returns the inner value if the Rc has exactly one strong …","If we have the only reference to T then unwrap it. …","Attempts to upgrade the Weak pointer to an Rc delaying …","Gets the number of Weak pointers to this allocation.","Gets the number of Weak pointers pointing to this …","An iterator over a slice in (non-overlapping) chunks (N …","An iterator over a slice in (non-overlapping) mutable …","A windowed iterator over a slice in overlapping chunks (N …","An iterator over slice in (non-overlapping) chunks …","An iterator over slice in (non-overlapping) mutable chunks …","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) mutable …","An iterator over a slice in (non-overlapping) mutable …","Helper trait for [T]::concat.","An iterator over the escaped version of a byte slice.","Immutable slice iterator","Mutable slice iterator.","Helper trait for [T]::join","The resulting type after concatenation","The resulting type after concatenation","The output type returned by methods.","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) mutable …","An iterator over a slice in (non-overlapping) mutable …","An iterator over subslices separated by elements that …","An iterator over the subslices of the vector which are …","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","A helper trait used for indexing operations.","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","An iterator over the mutable subslices of the vector which …","An iterator over the mutable subslices of the vector which …","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","An iterator over overlapping subslices of length size.","Views the underlying data as a mutable subslice of the …","Views the underlying data as a subslice of the original …","Views the underlying data as a subslice of the original …","Returns a slice which contains items not yet handled by …","Implementation of [T]::concat","Creates an empty slice iterator.","Creates an empty slice iterator.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a reference to T into a slice of length 1 …","Forms a mutable slice from a pointer range.","Forms a slice from a pointer range.","Forms a slice from a pointer and a length.","Performs the same functionality as from_raw_parts except …","Converts a reference to T into a slice of length 1 …","Returns a shared reference to the output at this location …","Returns a mutable reference to the output at this …","Returns a pointer to the output at this location without …","Returns a mutable pointer to the output at this location …","Returns a shared reference to the output at this location …","Returns a mutable reference to the output at this …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Views the underlying data as a subslice of the original …","Implementation of [T]::join","Performs bounds-checking of a range.","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Performs bounds-checking of a range without panicking.","An iterator over the bytes of a string slice.","An iterator over the chars of a string slice and their …","An iterator over the chars of a string slice.","An iterator of u16 over the string encoded as UTF-16.","The associated error which can be returned from parsing.","The return type of str::escape_debug.","The return type of str::escape_default.","The return type of str::escape_unicode.","Parse a value from a string","An iterator over the lines of a string as string slices.","Created with the method lines_any.","Created with the method match_indices.","Created with the method matches.","An error returned when parsing a bool using from_str fails","Created with the method rmatch_indices.","Created with the method rmatches.","Created with the method rsplit.","Created with the method rsplitn.","Created with the method rsplit_terminator.","Created with the method split.","An iterator over the non-ASCII-whitespace substrings of a …","An iterator over the substrings of a string terminated by …","Created with the method splitn.","Created with the method split_terminator.","An iterator over the non-whitespace substrings of a string","An item returned by the Utf8Chunks iterator.","An iterator used to decode a slice of mostly UTF-8 bytes …","Errors which can occur when attempting to interpret a …","Views the underlying data as a subslice of the original …","Views the underlying data as a subslice of the original …","Provides more information about the failure:","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a boxed slice of bytes to a boxed string slice …","Creates an &amp;str from a pointer and a length.","Creates an &amp;mut str from a pointer and a length.","Parses a string s to return a value of this type.","Converts a slice of bytes to a string slice.","Converts a mutable slice of bytes to a mutable string …","Converts a slice of bytes to a string slice without …","Converts a slice of bytes to a string slice without …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the invalid sequence that caused a failure.","Returns the byte position of the next character or the …","The string Pattern API.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns the remaining lines of the split string.","Returns remainder of the split string","Returns remainder of the split string.","Returns the next validated UTF-8 substring.","Returns the index in the given string up to which valid …","Associated type for &lt;&amp;[char; N] as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;[char; N] as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;F as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;char as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;&amp;[char] as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Expresses that every byte of the haystack has been …","A marker trait to express that a ReverseSearcher can be …","Expresses that a match of the pattern has been found at …","A string pattern.","Expresses that haystack[a..b] has been rejected as a …","A reverse searcher for a string pattern.","Result of calling Searcher::next() or …","A searcher for a string pattern.","Associated searcher for this pattern","Associated type for &lt;&amp;str as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Getter for the underlying string to be searched in","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Constructs the associated searcher from self and the …","Checks whether the pattern matches anywhere in the haystack","Checks whether the pattern matches at the front of the …","Checks whether the pattern matches at the back of the …","Performs the next search step starting from the front.","Performs the next search step starting from the back.","Finds the next Match result. See next().","Finds the next Match result. See next_back().","Finds the next Reject result. See next() and next_match().","Finds the next Reject result. See next_back().","Removes the pattern from the front of haystack if it …","Removes the pattern from the back of haystack if it …","A draining iterator for String.","A possible error value when converting a String from a …","A possible error value when converting a String from a …","A type alias for Infallible.","A UTF-8–encoded growable string.","A trait for converting a value to a String.","Returns a byte slice of this String’s contents.","Returns a slice of u8s bytes that were attempted to …","Converts a String into a mutable string slice.","Returns a mutable reference to the contents of this String.","Returns the remaining (sub)string of this iterator as a …","Extracts a string slice containing the entire String.","Returns this String’s capacity in bytes.","Truncates this String removing all contents.","Clones the contents of source into self.","Creates an empty String.","Removes the specified range from the string in bulk …","Copies elements from src range to the end of the string.","Returns the argument unchanged.","Converts a &amp;String into a String.","Converts a clone-on-write string to an owned instance of …","Allocates an owned String from a single character.","Converts a &amp;mut str into a String.","Converts the given boxed str slice to a String. It is …","Returns the argument unchanged.","Converts a &amp;str into a String.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new String from a pointer a length and a …","Decode a UTF-16–encoded vector v into a String …","Decode a UTF-16–encoded slice v into a String replacing …","Decode a UTF-16BE–encoded vector v into a String …","Decode a UTF-16BE–encoded slice v into a String …","Decode a UTF-16LE–encoded vector v into a String …","Decode a UTF-16LE–encoded slice v into a String …","Converts a vector of bytes to a String.","Converts a slice of bytes to a string including invalid …","Converts a vector of bytes to a String without checking …","Inserts a character into this String at a byte position.","Inserts a string slice into this String at a byte position.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Converts this String into a Box&lt;str&gt;.","Converts a String into a byte vector.","Returns the bytes that were attempted to convert to a …","Decomposes a String into its raw components: …","Returns true if this String has a length of zero and false…","Consumes and leaks the String returning a mutable …","Returns the length of this String in bytes not chars or …","Creates a new empty String.","Removes the last character from the string buffer and …","Appends the given char to the end of this String.","Appends a given string slice onto the end of this String.","Removes a char from this String at a byte position and …","Remove all matches of pattern pat in the String.","Removes the specified range in the string and replaces it …","Reserves capacity for at least additional bytes more than …","Reserves the minimum capacity for at least additional …","Retains only the characters specified by the predicate.","Shrinks the capacity of this String with a lower bound.","Shrinks the capacity of this String to match its length.","Splits the string into two at the given byte index.","Converts the given value to a String.","Shortens this String to the specified length.","Tries to reserve capacity for at least additional bytes …","Tries to reserve the minimum capacity for at least …","Creates a new empty String with at least the specified …","Fetch a Utf8Error to get more details about the conversion …","Creates a new empty String with at least the specified …","A thread-safe reference-counting pointer. ‘Arc’ stands …","Weak is a version of Arc that holds a non-owning reference …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Provides a raw pointer to the data.","Returns a raw pointer to the object T pointed to by this …","Converts to Arc&lt;T&gt;.","Converts to Arc&lt;[T]&gt;.","Makes a clone of the Arc pointer.","Makes a clone of the Weak pointer that points to the same …","Comparison for two Arcs.","Decrements the strong reference count on the Arc&lt;T&gt; …","Decrements the strong reference count on the Arc&lt;T&gt; …","Creates an empty CStr inside an Arc","Creates a new Arc&lt;T&gt; with the Default value for T.","Creates an empty str inside an Arc","Creates an empty [T] inside an Arc","Constructs a new Weak&lt;T&gt; without allocating memory. …","Attempt to downcast the Arc&lt;dyn Any + Send + Sync&gt; to a …","Downcasts the Arc&lt;dyn Any + Send + Sync&gt; to a concrete …","Creates a new Weak pointer to this allocation.","Drops the Arc.","Drops the Weak pointer.","Equality for two Arcs.","Converts a T into an Arc&lt;T&gt;","Converts a CString into an Arc&lt;CStr&gt; by moving the CString …","Converts an atomically reference-counted string slice into …","Converts a &amp;CStr into a Arc&lt;CStr&gt; by copying the contents …","Allocate a reference-counted str and copy v into it.","Returns the argument unchanged.","Allocate a reference-counted slice and move v’s items …","Move a boxed object to a new reference-counted allocation.","Allocate a reference-counted str and copy v into it.","Converts a [T; N] into an Arc&lt;[T]&gt;.","Create an atomically reference-counted pointer from a …","Allocate a reference-counted slice and fill it by cloning v…","Returns the argument unchanged.","Takes each element in the Iterator and collects it into an …","Constructs an Arc&lt;T&gt; from a raw pointer.","Converts a raw pointer previously created by into_raw back …","Constructs an Arc&lt;T A&gt; from a raw pointer.","Converts a raw pointer previously created by into_raw back …","‘Greater than or equal to’ comparison for two Arcs.","Returns a mutable reference into the given Arc if there …","Returns a mutable reference into the given Arc without …","Greater-than comparison for two Arcs.","Increments the strong reference count on the Arc&lt;T&gt; …","Increments the strong reference count on the Arc&lt;T&gt; …","Calls U::from(self).","Calls U::from(self).","Returns the inner value if the Arc has exactly one strong …","Consumes the Arc returning the wrapped pointer.","Consumes the Weak&lt;T&gt; and turns it into a raw pointer.","Consumes the Arc returning the wrapped pointer and …","Consumes the Weak&lt;T&gt; returning the wrapped pointer and …","‘Less than or equal to’ comparison for two Arcs.","Less-than comparison for two Arcs.","Makes a mutable reference into the given Arc.","Inequality for two Arcs.","Constructs a new Arc&lt;T&gt;.","Constructs a new Weak&lt;T&gt; without allocating any memory. …","Constructs a new Arc&lt;T&gt; while giving you a Weak&lt;T&gt; to the …","Constructs a new Arc&lt;T&gt; in the provided allocator.","Constructs a new Weak&lt;T A&gt; without allocating any …","Constructs a new Arc with uninitialized contents.","Constructs a new Arc with uninitialized contents in the …","Constructs a new atomically reference-counted slice with …","Constructs a new atomically reference-counted slice with …","Constructs a new Arc with uninitialized contents with the …","Constructs a new Arc with uninitialized contents with the …","Constructs a new atomically reference-counted slice with …","Constructs a new atomically reference-counted slice with …","Partial comparison for two Arcs.","Constructs a new Pin&lt;Arc&lt;T&gt;&gt;. If T does not implement Unpin…","Constructs a new Pin&lt;Arc&lt;T A&gt;&gt; in the provided allocator. …","Returns true if the two Arcs point to the same allocation …","Returns true if the two Weaks point to the same allocation …","Gets the number of strong (Arc) pointers to this …","Gets the number of strong (Arc) pointers pointing to this …","Constructs a new Arc&lt;T&gt; returning an error if allocation …","Constructs a new Arc&lt;T A&gt; in the provided allocator …","Constructs a new Arc with uninitialized contents …","Constructs a new Arc with uninitialized contents in the …","Constructs a new Arc with uninitialized contents with the …","Constructs a new Arc with uninitialized contents with the …","Constructs a new Pin&lt;Arc&lt;T&gt;&gt; return an error if …","Constructs a new Pin&lt;Arc&lt;T A&gt;&gt; in the provided allocator …","Returns the inner value if the Arc has exactly one strong …","If we have the only reference to T then unwrap it. …","Attempts to upgrade the Weak pointer to an Arc delaying …","Gets the number of Weak pointers to this allocation.","Gets an approximation of the number of Weak pointers …","An analogous trait to Wake but used to construct a …","The implementation of waking a task on an executor.","Wake this task.","Wake this task.","Wake this task without consuming the waker.","Wake this task without consuming the local waker.","A draining iterator for Vec&lt;T&gt;.","An iterator which uses a closure to determine if an …","An iterator that moves out of a vector.","A splicing iterator for Vec.","A contiguous growable array type written as Vec&lt;T&gt; short …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Moves all the elements of other into self leaving other …","Returns an unsafe mutable pointer to the vector’s …","Returns the remaining items of this iterator as a mutable …","Extracts a mutable slice of the entire vector.","Returns a raw pointer to the vector’s buffer or a …","Returns the remaining items of this iterator as a slice.","Returns the remaining items of this iterator as a slice.","Extracts a slice containing the entire vector.","Returns the total number of elements the vector can hold …","Clears the vector removing all values.","Overwrites the contents of self with a clone of the …","Removes consecutive repeated elements in the vector …","Removes all but the first of consecutive elements in the …","Removes all but the first of consecutive elements in the …","Creates an empty vec::IntoIter.","Creates an empty Vec&lt;T&gt;.","Removes the specified range from the vector in bulk …","Clones and appends all elements in a slice to the Vec.","Copies elements from src range to the end of the vector.","Creates an iterator which uses a closure to determine if …","Returns the argument unchanged.","Returns the argument unchanged.","Turn a VecDeque&lt;T&gt; into a Vec&lt;T&gt;.","Converts the given String to a vector Vec that holds …","Allocate a Vec&lt;T&gt; and fill it by cloning s’s items.","Converts a BinaryHeap&lt;T&gt; into a Vec&lt;T&gt;.","Allocate a Vec&lt;T&gt; and fill it by cloning s’s items.","Returns the argument unchanged.","Converts a CString into a Vec&lt;u8&gt;.","Allocate a Vec&lt;T&gt; and move s’s items into it.","Allocate a Vec&lt;T&gt; and fill it by cloning s’s items.","Convert a boxed slice into a vector by transferring …","Allocate a Vec&lt;u8&gt; and fill it with a UTF-8 string.","Convert a clone-on-write slice into a vector.","Allocate a Vec&lt;T&gt; and fill it by cloning s’s items.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a Vec&lt;T&gt; directly from a pointer a length and a …","Creates a Vec&lt;T A&gt; directly from a pointer a length a …","Inserts an element at position index within the vector …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Converts the vector into Box&lt;[T]&gt;.","Takes a Vec&lt;[T; N]&gt; and flattens it into a Vec&lt;T&gt;.","Creates a consuming iterator that is one that moves each …","Decomposes a Vec&lt;T&gt; into its raw components: …","Decomposes a Vec&lt;T&gt; into its raw components: …","Returns true if the vector contains no elements.","Keep unyielded elements in the source Vec.","Consumes and leaks the Vec returning a mutable reference …","Returns the number of elements in the vector also …","Constructs a new empty Vec&lt;T&gt;.","Constructs a new empty Vec&lt;T A&gt;.","Removes the last element from a vector and returns it or …","Removes and returns the last element in a vector if the …","Appends an element to the back of a collection.","Appends an element if there is sufficient spare capacity …","Removes and returns the element at position index within …","Reserves capacity for at least additional more elements to …","Reserves the minimum capacity for at least additional more …","Resizes the Vec in-place so that len is equal to new_len.","Resizes the Vec in-place so that len is equal to new_len.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate …","Forces the length of the vector to new_len.","Shrinks the capacity of the vector with a lower bound.","Shrinks the capacity of the vector as much as possible.","Returns the remaining spare capacity of the vector as a …","Creates a splicing iterator that replaces the specified …","Returns vector content as a slice of T along with the …","Splits the collection into two at the given index.","Removes an element from the vector and returns it.","Shortens the vector keeping the first len elements and …","Tries to reserve capacity for at least additional more …","Tries to reserve the minimum capacity for at least …","Constructs a new empty Vec&lt;T&gt; with at least the specified …","Constructs a new empty Vec&lt;T A&gt; with at least the …","Constructs a new empty Vec&lt;T&gt; with at least the specified …","Constructs a new empty Vec&lt;T A&gt; with at least the …"]}],["core",{"0":["The Rust Core Library","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","Approximate number of significant digits in base 10.","Approximate number of significant digits in base 10.","Approximate number of significant digits in base 10.","Approximate number of significant digits in base 10.","Machine epsilon value for f16.","Machine epsilon value for f32.","Machine epsilon value for f64.","Machine epsilon value for f128.","Infinity (∞).","Infinity (∞).","Infinity (∞).","Infinity (∞).","Number of significant digits in base 2.","Number of significant digits in base 2.","Number of significant digits in base 2.","Number of significant digits in base 2.","The highest valid code point a char can have &#39;\\\\u{10FFFF}&#39;.","Largest finite f16 value.","Largest finite f32 value.","Largest finite f64 value.","Largest finite f128 value.","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","Maximum x for which 10x is normal.","Maximum x for which 10x is normal.","Maximum x for which 10x is normal.","Maximum x for which 10x is normal.","Maximum possible power of 2 exponent.","Maximum possible power of 2 exponent.","Maximum possible power of 2 exponent.","Maximum possible power of 2 exponent.","The lowest valid code point a char can have &#39;\\\\0&#39;.","Smallest finite f16 value.","Smallest finite f32 value.","Smallest finite f64 value.","Smallest finite f128 value.","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","Minimum x for which 10x is normal.","Minimum x for which 10x is normal.","Minimum x for which 10x is normal.","Minimum x for which 10x is normal.","One greater than the minimum possible normal power of 2 …","One greater than the minimum possible normal power of 2 …","One greater than the minimum possible normal power of 2 …","One greater than the minimum possible normal power of 2 …","Smallest positive normal f16 value.","Smallest positive normal f32 value.","Smallest positive normal f64 value.","Smallest positive normal f128 value.","Not a Number (NaN).","Not a Number (NaN).","Not a Number (NaN).","Not a Number (NaN).","Negative infinity (−∞).","Negative infinity (−∞).","Negative infinity (−∞).","Negative infinity (−∞).","The radix or base of the internal representation of f16.","The radix or base of the internal representation of f32.","The radix or base of the internal representation of f64.","The radix or base of the internal representation of f128.","U+FFFD REPLACEMENT CHARACTER (�) is used in Unicode to …","The version of Unicode that the Unicode parts of char and …","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Adds an offset to a pointer (convenience for …","Adds an offset to a pointer (convenience for …","Gets the “address” portion of the pointer.","Gets the “address” portion of the pointer.","Computes the offset that needs to be applied to the …","Computes the offset that needs to be applied to the …","Transmute the slice to a slice of another type ensuring …","Transmute the mutable slice to a mutable slice of another …","Memory allocation APIs","Utilities for dynamic typing or type reflection.","SIMD and vendor intrinsics module.","A fixed-size array denoted [T; N] for the element type T…","Utilities for the array primitive type.","Returns an iterator over N elements of the slice at a …","Returns an iterator over N elements of the slice at a …","Returns an iterator over overlapping windows of N elements …","Returns Some if the value is within the ASCII range or …","Converts this array of bytes into a array of ASCII …","If this slice is_ascii returns it as a slice of ASCII …","If this string slice is_ascii returns it as a slice of …","If the value of this byte is within the ASCII range …","Converts this array of bytes into a array of ASCII …","Converts this slice of bytes into a slice of ASCII …","Views this slice of ASCII characters as a slice of u8 …","Converts a string slice to a byte slice. To convert the …","Converts a mutable string slice to a mutable byte slice.","Splits the slice into a slice of N-element arrays …","Splits the slice into a slice of N-element arrays …","Splits the slice into a slice of N-element arrays …","Splits the slice into a slice of N-element arrays …","Takes a &amp;[[T; N]] and flattens it to a &amp;[T].","Takes a &amp;mut [[T; N]] and flattens it to a &amp;mut [T].","Returns None if the pointer is null or else returns a …","Returns a raw pointer to the array’s buffer.","Returns a raw pointer to the slice’s buffer.","Returns an unsafe mutable pointer to the slice’s buffer.","Converts a mutable string slice to a raw pointer.","Returns the two unsafe mutable pointers spanning the slice.","Returns a raw pointer to a mutable slice containing the …","Returns a mutable slice containing the entire array. …","Returns a unique reference to the value behind the pointer.","Returns a raw pointer to the array’s buffer.","Returns a raw pointer to the slice’s buffer.","Returns a raw pointer to the slice’s buffer.","Converts a string slice to a raw pointer.","Returns the two raw pointers spanning the slice.","Splits the slice into a slice of N-element arrays …","Splits the slice into a slice of N-element arrays …","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Returns a shared reference to the value behind the pointer.","Returns a shared reference to the value behind the pointer.","Split a slice into a prefix a middle of aligned SIMD …","Split a mutable slice into a mutable prefix a middle of …","Returns a raw pointer to a slice containing the entire …","Returns a slice containing the entire array. Equivalent to …","Views this slice of ASCII characters as a UTF-8 str.","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Operations on ASCII strings and characters.","Asserts that a boolean expression is true at runtime.","Asserts that two expressions are equal to each other …","Unstable module containing the unstable assert_matches …","Asserts that two expressions are not equal to each other …","Check that the preconditions of an unsafe function are …","Composable asynchronous iteration.","Binary searches this slice for a given element. If the …","Binary searches this slice with a comparator function.","Binary searches this slice with a key extraction function.","The boolean type.","Utilities for working with borrowed data.","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and returns a tuple …","Calculates self − rhs − borrow and returns a tuple …","Calculates self − rhs − borrow and returns a tuple …","Calculates self − rhs − borrow and returns a tuple …","Calculates self − rhs − borrow and returns a tuple …","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and returns a tuple …","Calculates the offset from a pointer in bytes (convenience …","Calculates the offset from a pointer in bytes (convenience …","Calculates the offset from a pointer in bytes.","Calculates the offset from a pointer in bytes.","Calculates the distance between two pointers. The returned …","Calculates the distance between two pointers. The returned …","Calculates the offset from a pointer in bytes (convenience …","Calculates the offset from a pointer in bytes (convenience …","An iterator over the bytes of a string slice.","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and returns a tuple …","Calculates self + rhs + carry and returns a tuple …","Calculates self + rhs + carry and returns a tuple …","Calculates self + rhs + carry and returns a tuple …","Calculates self + rhs + carry and returns a tuple …","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and returns a tuple …","Calculates the “full multiplication” self * rhs + carry","Calculates the “full multiplication” self * rhs + carry","Calculates the “full multiplication” self * rhs + carry","Calculates the “full multiplication” self * rhs + carry","Calculates the “full multiplication” self * rhs + carry","Casts to a pointer of another type.","Casts to a pointer of another type.","Changes constness without changing the type.","Changes constness without changing the type.","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as an …","Returns the bit pattern of self reinterpreted as an …","Returns the bit pattern of self reinterpreted as an …","Returns the bit pattern of self reinterpreted as an …","Returns the bit pattern of self reinterpreted as an …","Returns the bit pattern of self reinterpreted as an …","Finds the closest x not below index where …","Shareable mutable containers.","Evaluates boolean combinations of configuration flags at …","A macro for defining #[cfg] match-like statements.","A character type.","Utilities for the char primitive type.","Returns an iterator over the chars of a string slice and …","Returns an iterator over the chars of a string slice.","Checked absolute value. Computes self.abs() returning None…","Checked absolute value. Computes self.abs() returning None…","Checked absolute value. Computes self.abs() returning None…","Checked absolute value. Computes self.abs() returning None…","Checked absolute value. Computes self.abs() returning None…","Checked absolute value. Computes self.abs() returning None…","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked addition with a signed integer. Computes self + rhs…","Checked addition with a signed integer. Computes self + rhs…","Checked addition with a signed integer. Computes self + rhs…","Checked addition with a signed integer. Computes self + rhs…","Checked addition with a signed integer. Computes self + rhs…","Checked addition with a signed integer. Computes self + rhs…","Checked addition with an unsigned integer. Computes …","Checked addition with an unsigned integer. Computes …","Checked addition with an unsigned integer. Computes …","Checked addition with an unsigned integer. Computes …","Checked addition with an unsigned integer. Computes …","Checked addition with an unsigned integer. Computes …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None unless …","Checked negation. Computes -self returning None unless …","Checked negation. Computes -self returning None unless …","Checked negation. Computes -self returning None unless …","Checked negation. Computes -self returning None unless …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None unless …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","If rhs is positive calculates the smallest value greater …","Calculates the smallest value greater than or equal to self…","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs returning","Checked integer subtraction. Computes self - rhs returning","Checked integer subtraction. Computes self - rhs returning","Checked integer subtraction. Computes self - rhs returning","Checked integer subtraction. Computes self - rhs returning","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs returning","Checked subtraction with an unsigned integer. Computes …","Checked subtraction with an unsigned integer. Computes …","Checked subtraction with an unsigned integer. Computes …","Checked subtraction with an unsigned integer. Computes …","Checked subtraction with an unsigned integer. Computes …","Checked subtraction with an unsigned integer. Computes …","Returns an iterator over the slice producing …","Returns an iterator over the slice producing …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Restrict a value to a certain interval unless it is NaN.","Restrict a value to a certain interval unless it is NaN.","Restrict a value to a certain interval unless it is NaN.","Restrict a value to a certain interval unless it is NaN.","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","The Clone trait for types that cannot be ‘implicitly …","Copies the elements from src into self.","Utilities for comparing and ordering values.","Expands to the column number at which it was invoked.","Causes compilation to fail with the given error message …","Concatenates literals into a static string slice.","Concatenates literals into a byte slice.","Concatenates identifiers into one identifier.","Same as format_args but can be used in some const …","Returns true if the slice contains an element with the …","Returns true if the given pattern matches a sub-slice of …","Traits for conversions between types.","Copies count * size_of&lt;T&gt; bytes from src to self. The …","Copies count * size_of&lt;T&gt; bytes from src to self. The …","Copies all elements from src into self using a memcpy.","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Copies elements from one part of the slice to another part …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Asserts that a boolean expression is true at runtime.","Asserts that two expressions are equal to each other.","Asserts that two expressions are not equal to each other.","Creates an iterator over the UTF-16 encoded code points in …","The Default trait for types with a default value.","Returns the default value of false","Returns the default value of \\\\x00","Returns the default value of ()","Creates a mutable empty slice.","Creates an empty slice.","Creates an empty str","Creates an empty mutable str","Returns the default value of 0.0","Returns the default value of 0.0","Returns the default value of 0.0","Returns the default value of 0.0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of Euclidean division of self by …","Calculates the quotient of Euclidean division of self by …","Calculates the quotient of Euclidean division of self by …","Calculates the quotient of Euclidean division of self by …","Calculates the quotient of Euclidean division of self by …","Performs Euclidean division.","Performs Euclidean division.","Performs Euclidean division.","Performs Euclidean division.","Performs Euclidean division.","Calculates the quotient of Euclidean division of self by …","Performs Euclidean division.","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Executes the destructor (if any) of the pointed-to value.","Borrows each element mutably and returns an array of …","Borrows each element and returns an array of references …","Encodes this character as UTF-16 into the provided u16 …","Returns an iterator of u16 over the string encoded as …","Encodes this character as UTF-8 into the provided byte …","Returns true if needle is a suffix of the slice or equal …","Returns true if the given pattern matches a suffix of this …","Inspects an environment variable at compile time.","Checks that two values are an ASCII case-insensitive match.","Checks that two slices are an ASCII case-insensitive match.","Checks that two strings are an ASCII case-insensitive …","Checks that two values are an ASCII case-insensitive match.","Interfaces for working with Errors.","Returns an iterator that produces an escaped version of …","Returns an iterator that produces an escaped version of a …","Returns an iterator that yields the literal escape code of …","Return an iterator that escapes each char in self with …","Returns an iterator that yields the literal escape code of …","Return an iterator that escapes each char in self with …","Returns an iterator that yields the hexadecimal Unicode …","Return an iterator that escapes each char in self with …","Exposes the “provenance” part of the pointer for …","Exposes the “provenance” part of the pointer for …","Allows to extend a tuple of collections that also …","A 128-bit floating point type (specifically the “…","Constants for the f128 quadruple-precision floating point …","A 16-bit floating point type (specifically the “binary16…","Constants for the f16 half-precision floating point type.","A 32-bit floating point type (specifically the “binary32…","Constants for the f32 single-precision floating point type.","A 64-bit floating point type (specifically the “binary64…","Constants for the f64 double-precision floating point type.","Platform-specific types as defined by C.","Expands to the file name in which it was invoked.","Fills self with elements by cloning value.","Fills self with elements returned by calling a closure …","Returns the byte index of the first character of this …","Returns the first element of the slice or None if it is …","Return an array reference to the first N items in the …","Return a mutable array reference to the first N items in …","Returns a mutable pointer to the first element of the …","Finds the closest x not exceeding index where …","Utilities for formatting and printing strings.","Function pointers like fn(usize) -&gt; bool.","Constructs parameters for the other string-formatting …","Same as format_args but adds a newline in the end.","Returns the argument unchanged.","Converts a u8 into a char.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts u8 to f32 losslessly.","Converts i8 to f32 losslessly.","Converts a bool to f32 losslessly. The resulting value is …","Converts i16 to f32 losslessly.","Converts u16 to f32 losslessly.","Converts u8 to f64 losslessly.","Returns the argument unchanged.","Converts f32 to f64 losslessly.","Converts f16 to f64 losslessly.","Converts i32 to f64 losslessly.","Converts a bool to f64 losslessly. The resulting value is …","Converts i16 to f64 losslessly.","Converts i8 to f64 losslessly.","Converts u32 to f64 losslessly.","Converts u16 to f64 losslessly.","Converts f32 to f128 losslessly.","Converts f16 to f128 losslessly.","Converts f64 to f128 losslessly.","Returns the argument unchanged.","Converts a bool to i8 losslessly. The resulting value is 0 …","Returns the argument unchanged.","Converts a bool to i16 losslessly. The resulting value is 0…","Returns the argument unchanged.","Converts u8 to i16 losslessly.","Converts i8 to i16 losslessly.","Converts u8 to i32 losslessly.","Converts a bool to i32 losslessly. The resulting value is 0…","Converts u16 to i32 losslessly.","Returns the argument unchanged.","Converts i16 to i32 losslessly.","Converts i8 to i32 losslessly.","Converts i8 to i64 losslessly.","Returns the argument unchanged.","Converts a bool to i64 losslessly. The resulting value is 0…","Converts u32 to i64 losslessly.","Converts u8 to i64 losslessly.","Converts i32 to i64 losslessly.","Converts i16 to i64 losslessly.","Converts u16 to i64 losslessly.","Converts u64 to i128 losslessly.","Converts i32 to i128 losslessly.","Converts u32 to i128 losslessly.","Converts i8 to i128 losslessly.","Converts u8 to i128 losslessly.","Converts i64 to i128 losslessly.","Converts u16 to i128 losslessly.","Converts a bool to i128 losslessly. The resulting value is …","Returns the argument unchanged.","Converts i16 to i128 losslessly.","Converts a bool to u8 losslessly. The resulting value is 0 …","Returns the argument unchanged.","Converts u8 to u16 losslessly.","Converts a bool to u16 losslessly. The resulting value is 0…","Returns the argument unchanged.","Returns the argument unchanged.","Converts u8 to u32 losslessly.","Uses Ipv4Addr::to_bits to convert an IPv4 address to a …","Converts a char into a u32.","Converts a bool to u32 losslessly. The resulting value is 0…","Converts u16 to u32 losslessly.","Returns the argument unchanged.","Converts a char into a u64.","Converts u32 to u64 losslessly.","Converts u16 to u64 losslessly.","Converts a bool to u64 losslessly. The resulting value is 0…","Converts u8 to u64 losslessly.","Returns the argument unchanged.","Converts u8 to u128 losslessly.","Uses Ipv6Addr::to_bits to convert an IPv6 address to a …","Converts u64 to u128 losslessly.","Converts a char into a u128.","Converts a bool to u128 losslessly. The resulting value is …","Converts u32 to u128 losslessly.","Converts u16 to u128 losslessly.","Returns the argument unchanged.","Converts i8 to isize losslessly.","Converts u8 to isize losslessly.","Converts a bool to isize losslessly. The resulting value …","Converts i16 to isize losslessly.","Converts u16 to usize losslessly.","Converts a bool to usize losslessly. The resulting value …","Converts u8 to usize losslessly.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create an integer value from its representation as a byte …","Create a native endian integer value from its …","Raw transmutation from u16.","Raw transmutation from u32.","Raw transmutation from u64.","Raw transmutation from u128.","Converts a digit in the given radix to a char.","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create an integer value from its representation as a byte …","Create a native endian integer value from its …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create an integer value from its memory representation as …","Create an integer value from its memory representation as …","Create an integer value from its memory representation as …","Create an integer value from its memory representation as …","Create an integer value from its memory representation as …","Create a native endian integer value from its memory …","Create a native endian integer value from its memory …","Create a native endian integer value from its memory …","Create a native endian integer value from its memory …","Create a native endian integer value from its memory …","Create an integer value from its memory representation as …","Create a native endian integer value from its memory …","Parse a bool from a string.","Converts a string in base 10 to a float. Accepts an …","Converts a string in base 10 to a float. Accepts an …","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a u32 to a char.","Converts a u32 to a char ignoring validity.","Asynchronous basic functionality.","Returns a reference to an element or subslice depending on …","Returns a subslice of str.","Returns mutable references to many indices at once.","Returns mutable references to many indices at once …","Returns a mutable reference to an element or subslice …","Returns a mutable subslice of str.","Returns a raw pointer to an element or subslice without …","Returns a reference to an element or subslice without …","Returns an unchecked subslice of str.","Returns a raw pointer to an element or subslice without …","Returns a mutable reference to an element or subslice …","Returns a mutable unchecked subslice of str.","Returns whether two pointers are guaranteed to be equal.","Returns whether two pointers are guaranteed to be equal.","Returns whether two pointers are guaranteed to be inequal.","Returns whether two pointers are guaranteed to be inequal.","Generic hashing support.","Hints to compiler that affects how code should be emitted …","The 128-bit signed integer type.","Redundant constants module for the i128 primitive type.","The 16-bit signed integer type.","Redundant constants module for the i16 primitive type.","The 32-bit signed integer type.","Redundant constants module for the i32 primitive type.","The 64-bit signed integer type.","Redundant constants module for the i64 primitive type.","The 8-bit signed integer type.","Redundant constants module for the i8 primitive type.","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Parses a file as an expression or an item according to the …","Includes a file as a reference to a byte array.","Includes a UTF-8 encoded file as a string.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Creates a consuming iterator that is one that moves each …","Compiler intrinsics.","Traits helpers and type definitions for core I/O …","Returns whether the pointer is properly aligned for T.","Returns whether the pointer is properly aligned for T.","Returns whether the pointer is aligned to align.","Returns whether the pointer is aligned to align.","Returns true if this char has the Alphabetic property.","Returns true if this char satisfies either is_alphabetic() …","Checks if the value is within the ASCII range.","Checks if all bytes in this slice are within the ASCII …","Checks if all characters in this string are within the …","Checks if the value is within the ASCII range.","Checks if the value is an ASCII alphabetic character:","Checks if the value is an ASCII alphabetic character:","Checks if the value is an ASCII alphanumeric character:","Checks if the value is an ASCII alphanumeric character:","Checks if the value is an ASCII control character: U+0000 …","Checks if the value is an ASCII control character: U+0000 …","Checks if the value is an ASCII decimal digit: U+0030 ‘0…","Checks if the value is an ASCII decimal digit: U+0030 ‘0…","Checks if the value is an ASCII graphic character: U+0021 …","Checks if the value is an ASCII graphic character: U+0021 …","Checks if the value is an ASCII hexadecimal digit:","Checks if the value is an ASCII hexadecimal digit:","Checks if the value is an ASCII lowercase character: …","Checks if the value is an ASCII lowercase character: …","Checks if the value is an ASCII octal digit: U+0030 ‘0’…","Checks if the value is an ASCII octal digit: U+0030 ‘0’…","Checks if the value is an ASCII punctuation character:","Checks if the value is an ASCII punctuation character:","Checks if the value is an ASCII uppercase character: …","Checks if the value is an ASCII uppercase character: …","Checks if the value is an ASCII whitespace character: …","Checks if the value is an ASCII whitespace character: …","Checks that index-th byte is the first byte in a UTF-8 …","Checks whether the pattern matches anywhere in the haystack","Returns true if this char has the general category for …","Checks if a char is a digit in the given radix.","Returns true if the raw slice has a length of 0.","Returns true if the raw slice has a length of 0.","Returns true if the slice has a length of 0.","Returns true if self has a length of zero bytes.","Returns true if this number is neither infinite nor NaN.","Returns true if this number is neither infinite nor NaN.","Returns true if this number is neither infinite nor NaN.","Returns true if this number is neither infinite nor NaN.","Returns true if this value is positive infinity or …","Returns true if this value is positive infinity or …","Returns true if this value is positive infinity or …","Returns true if this value is positive infinity or …","Returns true if this char has the Lowercase property.","Returns true if this value is NaN.","Returns true if this value is NaN.","Returns true if this value is NaN.","Returns true if this value is NaN.","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if the number is neither zero infinite …","Returns true if the number is neither zero infinite …","Returns true if the number is neither zero infinite …","Returns true if the number is neither zero infinite …","Returns true if the pointer is null.","Returns true if the pointer is null.","Returns true if this char has one of the general …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Checks whether the pattern matches at the front of the …","Returns true if self has a negative sign including -0.0 …","Returns true if self has a negative sign including -0.0 …","Returns true if self has a negative sign including -0.0 …","Returns true if self has a negative sign including -0.0 …","Returns true if self has a positive sign including +0.0 …","Returns true if self has a positive sign including +0.0 …","Returns true if self has a positive sign including +0.0 …","Returns true if self has a positive sign including +0.0 …","Checks if the elements of this slice are sorted.","Checks if the elements of this slice are sorted using the …","Checks if the elements of this slice are sorted using the …","Returns true if the number is subnormal.","Returns true if the number is subnormal.","Returns true if the number is subnormal.","Returns true if the number is subnormal.","Checks whether the pattern matches at the back of the …","Returns true if this char has the Uppercase property.","Checks if the value is a Unicode surrogate code point …","Returns true if this char has the White_Space property.","The pointer-sized signed integer type.","Redundant constants module for the isize primitive type.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Composable external iteration.","Returns an iterator over the slice.","Returns an iterator that allows modifying each value.","Returns the last element of the slice or None if it is …","Return an array reference to the last N items in the slice.","Return a mutable array reference to the last N items in …","Returns a mutable reference to the last item in the slice …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the length of a raw slice.","Returns the length of a raw slice.","Returns the number of elements in the slice.","Returns the length of self.","Returns the number of 16-bit code units this char would …","Returns the number of bytes this char would need if …","Expands to the line number on which it was invoked.","An iterator over the lines of a string as string slices.","An iterator over the lines of a string.","Prints passed tokens into the standard output.","Converts this type to its ASCII lower case equivalent …","Converts this slice to its ASCII lower case equivalent …","Converts this string to its ASCII lower case equivalent …","Converts this value to its ASCII lower case equivalent …","Converts this type to its ASCII upper case equivalent …","Converts this slice to its ASCII upper case equivalent …","Converts this string to its ASCII upper case equivalent …","Converts this value to its ASCII upper case equivalent …","Returns an array of the same size as self with function f …","Creates a new pointer by mapping self’s address to a new …","Creates a new pointer by mapping self’s address to a new …","Primitive traits and types representing basic properties …","Masks out bits of the pointer according to a mask.","Masks out bits of the pointer according to a mask.","An iterator over the disjoint matches of a pattern within …","An iterator over the disjoint matches of a pattern within …","Returns whether the given expression matches the provided …","Returns the maximum of the two numbers ignoring NaN.","Returns the maximum of the two numbers ignoring NaN.","New code should prefer to use i8::MAX instead.","New code should prefer to use i16::MAX instead.","New code should prefer to use i32::MAX instead.","New code should prefer to use i64::MAX instead.","New code should prefer to use i128::MAX instead.","New code should prefer to use u8::MAX instead.","New code should prefer to use u16::MAX instead.","New code should prefer to use u32::MAX instead.","New code should prefer to use u64::MAX instead.","New code should prefer to use u128::MAX instead.","New code should prefer to use isize::MAX instead.","New code should prefer to use usize::MAX instead.","Returns the maximum of the two numbers propagating NaN.","Returns the maximum of the two numbers propagating NaN.","Basic functions for dealing with memory.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Returns the minimum of the two numbers ignoring NaN.","Returns the minimum of the two numbers ignoring NaN.","New code should prefer to use i8::MIN instead.","New code should prefer to use i16::MIN instead.","New code should prefer to use i32::MIN instead.","New code should prefer to use i64::MIN instead.","New code should prefer to use i128::MIN instead.","New code should prefer to use u8::MIN instead.","New code should prefer to use u16::MIN instead.","New code should prefer to use u32::MIN instead.","New code should prefer to use u64::MIN instead.","New code should prefer to use u128::MIN instead.","New code should prefer to use isize::MIN instead.","New code should prefer to use usize::MIN instead.","Returns the minimum of the two numbers propagating NaN.","Returns the minimum of the two numbers propagating NaN.","Expands to a string that represents the current module …","Networking primitives for IP communication.","The ! type also called “never”.","Returns the greatest number less than self.","Returns the greatest number less than self.","Returns the greatest number less than self.","Returns the greatest number less than self.","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","If rhs is positive calculates the smallest value greater …","Calculates the smallest value greater than or equal to self…","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the least number greater than self.","Returns the least number greater than self.","Returns the least number greater than self.","Returns the least number greater than self.","Numeric traits and functions for the built-in numeric …","Adds an offset to a pointer.","Adds an offset to a pointer.","Calculates the distance between two pointers. The returned …","Calculates the distance between two pointers. The returned …","Overloadable operators.","Optional values.","Optionally inspects an environment variable at compile …","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with an unsigned rhs","Calculates self + rhs with an unsigned rhs","Calculates self + rhs with an unsigned rhs","Calculates self + rhs with an unsigned rhs","Calculates self + rhs with an unsigned rhs","Calculates self + rhs with an unsigned rhs","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self in an overflowing fashion.","Negates self in an overflowing fashion.","Negates self in an overflowing fashion.","Negates self in an overflowing fashion.","Negates self in an overflowing fashion.","Negates self overflowing if this is equal to the minimum …","Negates self in an overflowing fashion.","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Overflowing Euclidean remainder. Calculates …","Overflowing Euclidean remainder. Calculates …","Overflowing Euclidean remainder. Calculates …","Overflowing Euclidean remainder. Calculates …","Overflowing Euclidean remainder. Calculates …","Calculates the remainder self.rem_euclid(rhs) as if by …","Calculates the remainder self.rem_euclid(rhs) as if by …","Calculates the remainder self.rem_euclid(rhs) as if by …","Calculates the remainder self.rem_euclid(rhs) as if by …","Calculates the remainder self.rem_euclid(rhs) as if by …","Overflowing Euclidean remainder. Calculates …","Calculates the remainder self.rem_euclid(rhs) as if by …","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs with an unsigned rhs","Calculates self - rhs with an unsigned rhs","Calculates self - rhs with an unsigned rhs","Calculates self - rhs with an unsigned rhs","Calculates self - rhs with an unsigned rhs","Calculates self - rhs with an unsigned rhs","Panic support in the standard library.","Panics the current thread.","Panic support for core","Parses this string slice into another type.","Moves all consecutive repeated elements to the end of the …","Moves all but the first of consecutive elements to the end …","Moves all but the first of consecutive elements to the end …","Returns the index of the partition point according to the …","Helper module for exporting the pattern_type macro","Creates a pattern type.","Types that pin data to a location in memory.","Raw unsafe pointers *const T and *mut T.","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","The core prelude","This module reexports the primitive types to allow usage …","Manually manage memory through raw pointers.","Experimental replacement range types","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Reads the value from self without moving it. This leaves …","Reads the value from self without moving it. This leaves …","Reads the value from self without moving it. This leaves …","Reads the value from self without moving it. This leaves …","Performs a volatile read of the value from self without …","Performs a volatile read of the value from self without …","Takes the reciprocal (inverse) of a number 1/x.","Takes the reciprocal (inverse) of a number 1/x.","Takes the reciprocal (inverse) of a number 1/x.","Takes the reciprocal (inverse) of a number 1/x.","References &amp;T and &amp;mut T.","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","Calculates the least remainder of self (mod rhs).","Calculates the least remainder of self (mod rhs).","Calculates the least remainder of self (mod rhs).","Calculates the least remainder of self (mod rhs).","Calculates the least remainder of self (mod rhs).","Calculates the least nonnegative remainder of …","Calculates the least remainder of self (mod rhs).","Replaces the value at self with src returning the old …","Error handling with the Result type.","Reverses the order of elements in the slice in place.","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Returns the byte index for the first character of the last …","An iterator over the disjoint matches of a pattern within …","An iterator over the disjoint matches of a pattern within …","Rotates the slice in-place such that the first mid …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Rotates the slice in-place such that the first …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Returns an iterator over subslices separated by elements …","An iterator over substrings of the given string slice …","Divides one mutable array reference into two at an index …","Divides one array reference into two at an index from the …","Returns an iterator over mutable subslices separated by …","Splits the slice on the last element that matches the …","Splits the string on the last occurrence of the specified …","An iterator over substrings of self separated by …","Returns an iterator over subslices separated by elements …","An iterator over substrings of this string slice …","Returns an iterator over subslices separated by elements …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating addition with a signed integer. Computes …","Saturating addition with a signed integer. Computes …","Saturating addition with a signed integer. Computes …","Saturating addition with a signed integer. Computes …","Saturating addition with a signed integer. Computes …","Saturating addition with a signed integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer negation. Computes -self returning MAX …","Saturating integer negation. Computes -self returning MAX …","Saturating integer negation. Computes -self returning MAX …","Saturating integer negation. Computes -self returning MAX …","Saturating integer negation. Computes -self returning MAX …","Saturating integer negation. Computes -self returning MAX …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating subtraction with an unsigned integer. Computes …","Saturating subtraction with an unsigned integer. Computes …","Saturating subtraction with an unsigned integer. Computes …","Saturating subtraction with an unsigned integer. Computes …","Saturating subtraction with an unsigned integer. Computes …","Saturating subtraction with an unsigned integer. Computes …","Reorder the slice such that the element at index after the …","Reorder the slice with a comparator function such that the …","Reorder the slice with a key extraction function such that …","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Portable SIMD module.","A dynamically-sized view into a contiguous sequence [T]. …","Slice management and manipulation.","Creates a string slice from another string slice …","Creates a string slice from another string slice …","Sorts the slice of floats.","Sorts the slice of floats.","Sorts the slice <strong>without</strong> preserving the initial order of …","Sorts the slice with a comparison function <strong>without</strong> …","Sorts the slice with a key extraction function <strong>without</strong> …","Returns an iterator over subslices separated by elements …","An iterator over substrings of this string slice …","Divides one mutable array reference into two at an index.","Divides one array reference into two at an index.","Splits a string slice by ASCII whitespace.","Divides one slice into two at an index.","Divide one string slice into two at an index.","Divides one slice into two at an index returning None if …","Divide one string slice into two at an index.","Divides one mutable raw slice into two at an index.","Divides one mutable slice into two at an index.","Divide one mutable string slice into two at an index.","Divides one mutable slice into two at an index returning …","Divide one mutable string slice into two at an index.","Divides one mutable raw slice into two at an index …","Divides one mutable slice into two at an index without …","Divides one slice into two at an index without doing …","Returns the first and all the rest of the elements of the …","Return an array reference to the first N items in the …","Return a mutable array reference to the first N items in …","Returns the first and all the rest of the elements of the …","Returns an iterator over subslices separated by elements …","An iterator over substrings of this string slice …","Returns an iterator over mutable subslices separated by …","Returns the last and all the rest of the elements of the …","Return an array reference to the last N items in the slice …","Return a mutable array reference to the last N items in …","Returns the last and all the rest of the elements of the …","Returns an iterator over mutable subslices separated by …","Splits the slice on the first element that matches the …","Splits the string on the first occurrence of the specified …","An iterator over substrings of the given string slice …","Splits a string slice by whitespace.","Returns an iterator over subslices separated by elements …","An iterator over substrings of the given string slice …","Returns an iterator over mutable subslices separated by …","Returns true if needle is a prefix of the slice or equal …","Returns true if the given pattern matches a prefix of this …","String slices.","String manipulation.","Strict absolute value. Computes self.abs() panicking if …","Strict absolute value. Computes self.abs() panicking if …","Strict absolute value. Computes self.abs() panicking if …","Strict absolute value. Computes self.abs() panicking if …","Strict absolute value. Computes self.abs() panicking if …","Strict absolute value. Computes self.abs() panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict addition with a signed integer. Computes self + rhs","Strict addition with a signed integer. Computes self + rhs","Strict addition with a signed integer. Computes self + rhs","Strict addition with a signed integer. Computes self + rhs","Strict addition with a signed integer. Computes self + rhs","Strict addition with a signed integer. Computes self + rhs","Strict addition with an unsigned integer. Computes …","Strict addition with an unsigned integer. Computes …","Strict addition with an unsigned integer. Computes …","Strict addition with an unsigned integer. Computes …","Strict addition with an unsigned integer. Computes …","Strict addition with an unsigned integer. Computes …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs. Strict …","Strict integer division. Computes self / rhs. Strict …","Strict integer division. Computes self / rhs. Strict …","Strict integer division. Computes self / rhs. Strict …","Strict integer division. Computes self / rhs. Strict …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs. Strict …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking unless self == 0…","Strict negation. Computes -self panicking unless self == 0…","Strict negation. Computes -self panicking unless self == 0…","Strict negation. Computes -self panicking unless self == 0…","Strict negation. Computes -self panicking unless self == 0…","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking unless self == 0…","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs. Strict …","Strict integer remainder. Computes self % rhs. Strict …","Strict integer remainder. Computes self % rhs. Strict …","Strict integer remainder. Computes self % rhs. Strict …","Strict integer remainder. Computes self % rhs. Strict …","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs. Strict …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict subtraction with an unsigned integer. Computes …","Strict subtraction with an unsigned integer. Computes …","Strict subtraction with an unsigned integer. Computes …","Strict subtraction with an unsigned integer. Computes …","Strict subtraction with an unsigned integer. Computes …","Strict subtraction with an unsigned integer. Computes …","Stringifies its arguments.","Returns a subslice with the prefix removed.","Returns a string slice with the prefix removed.","Removes the pattern from the front of haystack if it …","Returns a subslice with the suffix removed.","Returns a string slice with the suffix removed.","Removes the pattern from the back of haystack if it …","Subtracts an offset from a pointer (convenience for …","Subtracts an offset from a pointer (convenience for …","Calculates the distance between two pointers <em>where it’s </em>…","Calculates the distance between two pointers <em>where it’s </em>…","Swaps the values at two mutable locations of the same …","Swaps two elements in the slice.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Swaps two elements in the slice without doing bounds …","Swaps all elements in self with those in other.","Synchronization primitives","Removes the subslice corresponding to the given range and …","Removes the first element of the slice and returns a …","Removes the first element of the slice and returns a …","Removes the last element of the slice and returns a …","Removes the last element of the slice and returns a mutable","Removes the subslice corresponding to the given range and …","Types and Traits for working with asynchronous tasks.","Returns Some(f()) if the bool is true or None otherwise.","Returns Some(t) if the bool is true or None otherwise.","Temporal quantification.","Makes a copy of the value in its ASCII lower case …","Makes a copy of the value in its ASCII lower case …","Makes a copy of the value in its ASCII upper case …","Makes a copy of the value in its ASCII upper case …","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Raw transmutation to u16.","Raw transmutation to u32.","Raw transmutation to u64.","Raw transmutation to u128.","Converts radians to degrees.","Converts radians to degrees.","Converts radians to degrees.","Converts radians to degrees.","Converts a char to a digit in the given radix.","Rounds toward zero and converts to any primitive integer …","Rounds toward zero and converts to any primitive integer …","Rounds toward zero and converts to any primitive integer …","Rounds toward zero and converts to any primitive integer …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Returns an iterator that yields the lowercase mapping of …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Converts degrees to radians.","Converts degrees to radians.","Converts degrees to radians.","Converts degrees to radians.","Decompose a (possibly wide) pointer into its data pointer …","Decompose a (possibly wide) pointer into its data pointer …","Returns an iterator that yields the uppercase mapping of …","Indicates unfinished code.","Return the ordering between self and other.","Return the ordering between self and other.","Return the ordering between self and other.","Return the ordering between self and other.","Enables or disables tracing functionality used for …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Transposes a [MaybeUninit&lt;T&gt;; N] into a MaybeUninit&lt;[T; N]&gt;…","Returns a string slice with leading and trailing …","Returns a byte slice with leading and trailing ASCII …","Returns a string slice with leading and trailing ASCII …","Returns a byte slice with trailing ASCII whitespace bytes …","Returns a string slice with trailing ASCII whitespace …","Returns a byte slice with leading ASCII whitespace bytes …","Returns a string slice with leading ASCII whitespace …","Returns a string slice with trailing whitespace removed.","Returns a string slice with all suffixes that match a …","Returns a string slice with leading whitespace removed.","Returns a string slice with all prefixes that match a …","Returns a string slice with all prefixes and suffixes that …","Returns a string slice with trailing whitespace removed.","Returns a string slice with all suffixes that match a …","Returns a string slice with leading whitespace removed.","Returns a string slice with all prefixes that match a …","Unwraps a result or propagates its error.","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Tries to convert a char into a u8.","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Tries to convert a char into a u16.","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","A fallible function f applied to each element on array self…","A finite heterogeneous sequence (T U ..).","The 128-bit unsigned integer type.","Redundant constants module for the u128 primitive type.","The 16-bit unsigned integer type.","Redundant constants module for the u16 primitive type.","The 32-bit unsigned integer type.","Redundant constants module for the u32 primitive type.","The 64-bit unsigned integer type.","Redundant constants module for the u64 primitive type.","The 8-bit unsigned integer type.","Redundant constants module for the u8 primitive type.","Provides the assert_unsafe_precondition macro as well as …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …"],"1":["Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked negation. Computes -self assuming overflow …","Unchecked negation. Computes -self assuming overflow …","Unchecked negation. Computes -self assuming overflow …","Unchecked negation. Computes -self assuming overflow …","Unchecked negation. Computes -self assuming overflow …","Unchecked negation. Computes -self assuming overflow …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Indicates unimplemented code by panicking with a message …","The () type also called “unit”.","Indicates unreachable code.","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","The pointer-sized unsigned integer type.","Redundant constants module for the usize primitive type.","Creates an iterator over the contiguous valid UTF-8 ranges …","Calculates the complete product self * rhs without the …","Calculates the complete product self * rhs without the …","Calculates the complete product self * rhs without the …","Calculates the complete product self * rhs without the …","Calculates the complete product self * rhs without the …","Returns an iterator over all contiguous windows of length …","Creates a new pointer with the given address.","Creates a new pointer with the given address.","Use the pointer value in a new pointer of another type.","Use the pointer value in a new pointer of another type.","Wrapping (modular) absolute value. Computes self.abs() …","Wrapping (modular) absolute value. Computes self.abs() …","Wrapping (modular) absolute value. Computes self.abs() …","Wrapping (modular) absolute value. Computes self.abs() …","Wrapping (modular) absolute value. Computes self.abs() …","Wrapping (modular) absolute value. Computes self.abs() …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with an unsigned integer. …","Wrapping (modular) addition with an unsigned integer. …","Wrapping (modular) addition with an unsigned integer. …","Wrapping (modular) addition with an unsigned integer. …","Wrapping (modular) addition with an unsigned integer. …","Wrapping (modular) addition with an unsigned integer. …","Calculates the offset from a pointer in bytes using …","Calculates the offset from a pointer in bytes using …","Calculates the offset from a pointer in bytes using …","Calculates the offset from a pointer in bytes using …","Calculates the offset from a pointer in bytes using …","Calculates the offset from a pointer in bytes using …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction with an unsigned integer. …","Wrapping (modular) subtraction with an unsigned integer. …","Wrapping (modular) subtraction with an unsigned integer. …","Wrapping (modular) subtraction with an unsigned integer. …","Wrapping (modular) subtraction with an unsigned integer. …","Wrapping (modular) subtraction with an unsigned integer. …","Overwrites a memory location with the given value without …","Writes formatted data into a buffer.","Invokes memset on the specified pointer setting …","Overwrites a memory location with the given value without …","Performs a volatile write of a memory location with the …","Write formatted data into a buffer with a newline …","The AllocError error indicates an allocation failure that …","An implementation of Allocator can allocate grow shrink …","A memory allocator that can be registered as the standard …","Layout of a block of memory.","The parameters given to Layout::from_size_align or some …","The minimum byte alignment for a memory block of this …","Creates a layout describing the record that can hold a …","Allocate memory as described by the given layout.","Behaves like alloc but also ensures that the contents are …","Behaves like alloc but also ensures that the contents are …","Attempts to allocate a block of memory.","Behaves like allocate but also ensures that the returned …","Creates a layout describing the record for a [T; n].","Creates a “by reference” adapter for this instance of …","Creates a NonNull that is dangling but well-aligned for …","Deallocate the block of memory at the given ptr pointer …","Deallocates the memory referenced by ptr.","Creates a layout describing the record for self followed by","Creates a layout describing the record for self followed by","Produces layout describing a record that could be used to …","Produces layout describing a record that could be used to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a Layout from a given size and align or …","Creates a layout bypassing all checks.","Attempts to extend the memory block.","Behaves like grow but also ensures that the new contents …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Constructs a Layout suitable for holding a value of type T.","Creates a layout by rounding the size of this layout up to …","Returns the amount of padding we must insert after self to …","Shrink or grow a block of memory to the given new_size in …","Shrink or grow a block of memory to the given new_size in …","Creates a layout describing the record for n instances of …","Creates a layout describing the record for n instances of …","Attempts to shrink the memory block.","The minimum size in bytes for a memory block of this …","A trait to emulate dynamic typing.","A TypeId represents a globally unique identifier for a …","Forwards to the method defined on the type Any.","Forwards to the method defined on the type dyn Any.","Returns some mutable reference to the inner value if it is …","Forwards to the method defined on the type dyn Any.","Forwards to the method defined on the type Any.","Returns a mutable reference to the inner value as type …","Forwards to the method defined on the type dyn Any.","Returns some reference to the inner value if it is of type …","Forwards to the method defined on the type Any.","Forwards to the method defined on the type dyn Any.","Returns a reference to the inner value as type dyn T.","Forwards to the method defined on the type Any.","Returns the argument unchanged.","Calls U::from(self).","Forwards to the method defined on the type dyn Any.","Returns true if the inner type is the same as T.","Forwards to the method defined on the type Any.","Returns the TypeId of the type this generic function has …","Gets the TypeId of self.","Returns the name of a type as a string slice.","Returns the type name of the pointed-to value as a string …","Platform-specific intrinsics for the aarch64 platform.","Platform-specific intrinsics for the arm platform.","Inline assembly.","Module-level inline assembly.","Platform-specific intrinsics for the loongarch platform.","Platform-specific intrinsics for the mips platform.","Platform-specific intrinsics for the mips64 platform.","Platform-specific intrinsics for the NVPTX platform.","Platform-specific intrinsics for the PowerPC platform.","Platform-specific intrinsics for the PowerPC64 platform.","Platform-specific intrinsics for the riscv32 platform.","Platform-specific intrinsics for the riscv64 platform.","Platform-specific intrinsics for the wasm target family.","Platform-specific intrinsics for the wasm32 platform.","Platform-specific intrinsics for the wasm64 platform.","Platform-specific intrinsics for the x86 platform.","Platform-specific intrinsics for the x86_64 platform.","Full system is the required shareability domain reads and …","See prefetch.","See prefetch.","See prefetch.","See prefetch.","See prefetch.","See prefetch.","Transaction executed a TCANCEL instruction","Transaction aborted due to a debug trap.","Transaction aborted because a non-permissible operation …","Fallback error type for any other reason","Transaction failed from interrupt","Transaction aborted because a conflict occurred","Transaction aborted due to transactional nesting level was …","Extraction mask for failure reason","Transaction retry is possible.","Transaction aborted due to read or write set limit was …","Indicates a TRIVIAL version of TM is available","Transaction successfully started.","CRC32 single round checksum for bytes (8 bits).","CRC32-C single round checksum for bytes (8 bits).","CRC32-C single round checksum for half words (16 bits).","CRC32-C single round checksum for words (32 bits).","CRC32 single round checksum for half words (16 bits).","CRC32 single round checksum for words (32 bits).","Generates a DMB (data memory barrier) instruction or …","Generates a DSB (data synchronization barrier) instruction …","Generates an ISB (instruction synchronization barrier) …","Generates an unspecified no-op instruction.","Generates a SEV (send a global event) hint instruction.","Generates a send a local event hint instruction.","Cancels the current transaction and discards all state …","Commits the current transaction. For a nested transaction …","Starts a new transaction. When the transaction starts …","Tests if executing inside a transaction. If no transaction …","Generates a WFE (wait for event) hint instruction or …","Generates a WFI (wait for interrupt) hint instruction or …","Generates a YIELD hint instruction.","Fetch the cache line that contains address p using the …","ARM-specific 64-bit wide vector of two packed f32.","ARM-specific type containing two float32x2_t vectors.","ARM-specific type containing three float32x2_t vectors.","ARM-specific type containing four float32x2_t vectors.","ARM-specific 128-bit wide vector of four packed f32.","ARM-specific type containing two float32x4_t vectors.","ARM-specific type containing three float32x4_t vectors.","ARM-specific type containing four float32x4_t vectors.","ARM-specific 64-bit wide vector of one packed f64.","ARM-specific type containing two float64x1_t vectors.","ARM-specific type containing three float64x1_t vectors.","ARM-specific type containing four float64x1_t vectors.","ARM-specific 128-bit wide vector of two packed f64.","ARM-specific type containing two float64x2_t vectors.","ARM-specific type containing three float64x2_t vectors.","ARM-specific type containing four float64x2_t vectors.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ARM-specific 64-bit wide vector of four packed i16.","ARM-specific type containing two int16x4_t vectors.","ARM-specific type containing three int16x4_t vectors.","ARM-specific type containing four int16x4_t vectors.","ARM-specific 128-bit wide vector of eight packed i16.","ARM-specific type containing two int16x8_t vectors.","ARM-specific type containing three int16x8_t vectors.","ARM-specific type containing four int16x8_t vectors.","ARM-specific 64-bit wide vector of two packed i32.","ARM-specific type containing two int32x2_t vectors.","ARM-specific type containing three int32x2_t vectors.","ARM-specific type containing four int32x2_t vectors.","ARM-specific 128-bit wide vector of four packed i32.","ARM-specific type containing two int32x4_t vectors.","ARM-specific type containing three int32x4_t vectors.","ARM-specific type containing four int32x4_t vectors.","ARM-specific 64-bit wide vector of one packed i64.","ARM-specific type containing two int64x1_t vectors.","ARM-specific type containing three int64x1_t vectors.","ARM-specific type containing four int64x1_t vectors.","ARM-specific 128-bit wide vector of two packed i64.","ARM-specific type containing two int64x2_t vectors.","ARM-specific type containing three int64x2_t vectors.","ARM-specific type containing four int64x2_t vectors.","ARM-specific 128-bit wide vector of sixteen packed i8.","ARM-specific type containing two int8x16_t vectors.","ARM-specific type containing three int8x16_t vectors.","ARM-specific type containing four int8x16_t vectors.","ARM-specific 64-bit wide vector of eight packed i8.","ARM-specific type containing two int8x8_t vectors.","ARM-specific type containing three int8x8_t vectors.","ARM-specific type containing four int8x8_t vectors.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","ARM-specific 64-bit wide vector of four packed p16.","ARM-specific type containing two poly16x4_t vectors.","ARM-specific type containing three poly16x4_t vectors.","ARM-specific type containing four poly16x4_t vectors.","ARM-specific 128-bit wide vector of eight packed p16.","ARM-specific type containing two poly16x8_t vectors.","ARM-specific type containing three poly16x8_t vectors.","ARM-specific type containing four poly16x8_t vectors.","ARM-specific 64-bit wide vector of one packed p64.","ARM-specific type containing two poly64x1_t vectors.","ARM-specific type containing three poly64x1_t vectors.","ARM-specific type containing four poly64x1_t vectors.","ARM-specific 128-bit wide vector of two packed p64.","ARM-specific type containing two poly64x2_t vectors.","ARM-specific type containing three poly64x2_t vectors.","ARM-specific type containing four poly64x2_t vectors.","ARM-specific 128-bit wide vector of sixteen packed p8.","ARM-specific type containing two poly8x16_t vectors.","ARM-specific type containing three poly8x16_t vectors.","ARM-specific type containing four poly8x16_t vectors.","ARM-specific 64-bit wide polynomial vector of eight packed …","ARM-specific type containing two poly8x8_t vectors.","ARM-specific type containing three poly8x8_t vectors.","ARM-specific type containing four poly8x8_t vectors.","ARM-specific 64-bit wide vector of four packed u16.","ARM-specific type containing two uint16x4_t vectors.","ARM-specific type containing three uint16x4_t vectors.","ARM-specific type containing four uint16x4_t vectors.","ARM-specific 128-bit wide vector of eight packed u16.","ARM-specific type containing two uint16x8_t vectors.","ARM-specific type containing three uint16x8_t vectors.","ARM-specific type containing four uint16x8_t vectors.","ARM-specific 64-bit wide vector of two packed u32.","ARM-specific type containing two uint32x2_t vectors.","ARM-specific type containing three uint32x2_t vectors.","ARM-specific type containing four uint32x2_t vectors.","ARM-specific 128-bit wide vector of four packed u32.","ARM-specific type containing two uint32x4_t vectors.","ARM-specific type containing three uint32x4_t vectors.","ARM-specific type containing four uint32x4_t vectors.","ARM-specific 64-bit wide vector of one packed u64.","ARM-specific type containing two uint64x1_t vectors.","ARM-specific type containing three uint64x1_t vectors.","ARM-specific type containing four uint64x1_t vectors.","ARM-specific 128-bit wide vector of two packed u64.","ARM-specific type containing two uint64x2_t vectors.","ARM-specific type containing three uint64x2_t vectors.","ARM-specific type containing four uint64x2_t vectors.","ARM-specific 128-bit wide vector of sixteen packed u8.","ARM-specific type containing two uint8x16_t vectors.","ARM-specific type containing three uint8x16_t vectors.","ARM-specific type containing four uint8x16_t vectors.","ARM-specific 64-bit wide vector of eight packed u8.","ARM-specific type containing two uint8x8_t vectors.","ARM-specific type containing three uint8x8_t vectors.","ARM-specific type containing four uint8x8_t vectors.","Signed Absolute difference and Accumulate Long","Signed Absolute difference and Accumulate Long","Signed Absolute difference and Accumulate Long","Unsigned Absolute difference and Accumulate Long","Unsigned Absolute difference and Accumulate Long","Unsigned Absolute difference and Accumulate Long","Signed Absolute difference and Accumulate Long","Signed Absolute difference and Accumulate Long","Signed Absolute difference and Accumulate Long","Unsigned Absolute difference and Accumulate Long","Unsigned Absolute difference and Accumulate Long","Unsigned Absolute difference and Accumulate Long","Absolute difference between the arguments of Floating","Absolute difference between the arguments of Floating","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Floating-point absolute difference","Signed Absolute difference Long","Signed Absolute difference Long","Signed Absolute difference Long","Unsigned Absolute difference Long","Unsigned Absolute difference Long","Unsigned Absolute difference Long","Signed Absolute difference Long","Signed Absolute difference Long","Signed Absolute difference Long","Unsigned Absolute difference Long","Unsigned Absolute difference Long","Unsigned Absolute difference Long","Absolute difference between the arguments of Floating","Absolute difference between the arguments of Floating","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Floating-point absolute difference","Floating-point absolute value","Floating-point absolute value","Absolute value (wrapping).","Absolute value (wrapping).","Absolute Value (wrapping).","Absolute value (wrapping).","Absolute Value (wrapping).","Floating-point absolute value","Floating-point absolute value","Absolute value (wrapping).","Absolute value (wrapping).","Absolute Value (wrapping).","Absolute value (wrapping).","Vector add.","Vector add.","Bitwise exclusive OR","Bitwise exclusive OR","Bitwise exclusive OR","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Add returning High Narrow (high half).","Add returning High Narrow (high half).","Add returning High Narrow (high half).","Add returning High Narrow (high half).","Add returning High Narrow (high half).","Add returning High Narrow (high half).","Add returning High Narrow.","Add returning High Narrow.","Add returning High Narrow.","Add returning High Narrow.","Add returning High Narrow.","Add returning High Narrow.","Signed Add Long (vector high half).","Signed Add Long (vector high half).","Signed Add Long (vector high half).","Unsigned Add Long (vector high half).","Unsigned Add Long (vector high half).","Unsigned Add Long (vector high half).","Signed Add Long (vector).","Signed Add Long (vector).","Signed Add Long (vector).","Unsigned Add Long (vector).","Unsigned Add Long (vector).","Unsigned Add Long (vector).","Signed Add Long across Vector","Signed Add Long across Vector","Signed Add Long across Vector","Unsigned Add Long across Vector","Unsigned Add Long across Vector","Unsigned Add Long across Vector","Signed Add Long across Vector","Signed Add Long across Vector","Signed Add Long across Vector","Unsigned Add Long across Vector","Unsigned Add Long across Vector","Unsigned Add Long across Vector","Vector add.","Vector add.","Bitwise exclusive OR","Bitwise exclusive OR","Bitwise exclusive OR","Bitwise exclusive OR","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Floating-point add across vector","Add across vector","Add across vector","Add across vector","Add across vector","Add across vector","Add across vector","Floating-point add across vector","Floating-point add across vector","Add across vector","Add across vector","Add across vector","Add across vector","Add across vector","Add across vector","Add across vector","Add across vector","Signed Add Wide (high half).","Signed Add Wide (high half).","Signed Add Wide (high half).","Unsigned Add Wide (high half).","Unsigned Add Wide (high half).","Unsigned Add Wide (high half).","Signed Add Wide.","Signed Add Wide.","Signed Add Wide.","Unsigned Add Wide.","Unsigned Add Wide.","Unsigned Add Wide.","AES single round decryption.","AES single round encryption.","AES inverse mix columns.","AES mix columns.","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Bit clear and exclusive OR","Bit clear and exclusive OR","Bit clear and exclusive OR","Bit clear and exclusive OR","Bit clear and exclusive OR","Bit clear and exclusive OR","Bit clear and exclusive OR","Bit clear and exclusive OR","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Bitwise Select.","Bitwise Select instructions. This instruction sets each …","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select instructions. This instruction sets each …","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Floating-point complex add","Floating-point complex add","Floating-point complex add","Floating-point complex add","Floating-point complex add","Floating-point complex add","Floating-point absolute compare greater than or equal","Floating-point absolute compare greater than or equal","Floating-point absolute compare greater than or equal","Floating-point absolute compare greater than or equal","Floating-point absolute compare greater than or equal","Floating-point absolute compare greater than or equal","Floating-point absolute compare greater than","Floating-point absolute compare greater than","Floating-point absolute compare greater than","Floating-point absolute compare greater than","Floating-point absolute compare greater than","Floating-point absolute compare greater than","Floating-point absolute compare less than or equal","Floating-point absolute compare less than or equal","Floating-point absolute compare less than or equal","Floating-point absolute compare less than or equal","Floating-point absolute compare less than or equal","Floating-point absolute compare less than or equal","Floating-point absolute compare less than","Floating-point absolute compare less than","Floating-point absolute compare less than","Floating-point absolute compare less than","Floating-point absolute compare less than","Floating-point absolute compare less than","Floating-point compare equal","Floating-point compare equal","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Floating-point compare equal","Compare bitwise equal","Compare bitwise equal","Floating-point compare equal","Floating-point compare equal","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Floating-point compare equal","Floating-point compare bitwise equal to zero","Floating-point compare bitwise equal to zero","Signed compare bitwise equal to zero","Signed compare bitwise equal to zero","Signed compare bitwise equal to zero","Signed compare bitwise equal to zero","Signed compare bitwise equal to zero","Signed compare bitwise equal to zero","Unsigned compare bitwise equal to zero","Unsigned compare bitwise equal to zero","Unsigned compare bitwise equal to zero","Unsigned compare bitwise equal to zero","Floating-point compare bitwise equal to zero","Compare bitwise equal to zero","Compare bitwise equal to zero","Floating-point compare bitwise equal to zero","Floating-point compare bitwise equal to zero","Signed compare bitwise equal to zero","Signed compare bitwise equal to zero","Signed compare bitwise equal to zero","Signed compare bitwise equal to zero","Signed compare bitwise equal to zero","Signed compare bitwise equal to zero","Unsigned compare bitwise equal to zero","Unsigned compare bitwise equal to zero","Unsigned compare bitwise equal to zero","Unsigned compare bitwise equal to zero","Floating-point compare bitwise equal to zero","Floating-point compare greater than or equal","Floating-point compare greater than or equal","Compare signed greater than or equal","Compare signed greater than or equal","Compare signed greater than or equal","Compare signed greater than or equal","Compare unsigned greater than or equal","Compare unsigned greater than or equal","Compare unsigned greater than or equal","Compare unsigned greater than or equal","Floating-point compare greater than or equal","Compare greater than or equal","Compare greater than or equal","Floating-point compare greater than or equal","Floating-point compare greater than or equal","Compare signed greater than or equal","Compare signed greater than or equal","Compare signed greater than or equal","Compare signed greater than or equal","Compare unsigned greater than or equal","Compare unsigned greater than or equal","Compare unsigned greater than or equal","Compare unsigned greater than or equal","Floating-point compare greater than or equal","Floating-point compare greater than or equal to zero","Floating-point compare greater than or equal to zero","Compare signed greater than or equal to zero","Compare signed greater than or equal to zero","Compare signed greater than or equal to zero","Compare signed greater than or equal to zero","Floating-point compare greater than or equal to zero","Compare signed greater than or equal to zero","Floating-point compare greater than or equal to zero","Floating-point compare greater than or equal to zero","Compare signed greater than or equal to zero","Compare signed greater than or equal to zero","Compare signed greater than or equal to zero","Compare signed greater than or equal to zero","Floating-point compare greater than or equal to zero","Floating-point compare greater than","Floating-point compare greater than","Compare signed greater than","Compare signed greater than","Compare signed greater than","Compare signed greater than","Compare unsigned greater than","Compare unsigned greater than","Compare unsigned greater than","Compare unsigned greater than","Floating-point compare greater than","Compare greater than","Compare greater than","Floating-point compare greater than","Floating-point compare greater than","Compare signed greater than","Compare signed greater than","Compare signed greater than","Compare signed greater than","Compare unsigned greater than","Compare unsigned greater than","Compare unsigned greater than","Compare unsigned greater than","Floating-point compare greater than","Floating-point compare greater than zero","Floating-point compare greater than zero","Compare signed greater than zero","Compare signed greater than zero","Compare signed greater than zero","Compare signed greater than zero","Floating-point compare greater than zero","Compare signed greater than zero","Floating-point compare greater than zero","Floating-point compare greater than zero","Compare signed greater than zero","Compare signed greater than zero","Compare signed greater than zero","Compare signed greater than zero","Floating-point compare greater than zero","Floating-point compare less than or equal","Floating-point compare less than or equal","Compare signed less than or equal","Compare signed less than or equal","Compare signed less than or equal","Compare signed less than or equal","Compare unsigned less than or equal","Compare unsigned less than or equal","Compare unsigned less than or equal","Compare unsigned less than or equal","Floating-point compare less than or equal","Compare less than or equal","Compare less than or equal","Floating-point compare less than or equal","Floating-point compare less than or equal","Compare signed less than or equal","Compare signed less than or equal","Compare signed less than or equal","Compare signed less than or equal","Compare unsigned less than or equal","Compare unsigned less than or equal","Compare unsigned less than or equal","Compare unsigned less than or equal","Floating-point compare less than or equal","Floating-point compare less than or equal to zero","Floating-point compare less than or equal to zero","Compare signed less than or equal to zero","Compare signed less than or equal to zero","Compare signed less than or equal to zero","Compare signed less than or equal to zero","Floating-point compare less than or equal to zero","Compare less than or equal to zero","Floating-point compare less than or equal to zero","Floating-point compare less than or equal to zero","Compare signed less than or equal to zero","Compare signed less than or equal to zero","Compare signed less than or equal to zero","Compare signed less than or equal to zero","Floating-point compare less than or equal to zero","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Floating-point compare less than","Floating-point compare less than","Compare signed less than","Compare signed less than","Compare signed less than","Compare signed less than","Compare unsigned less than","Compare unsigned less than","Compare unsigned less than","Compare unsigned less than","Floating-point compare less than","Compare less than","Compare less than","Floating-point compare less than","Floating-point compare less than","Compare signed less than","Compare signed less than","Compare signed less than","Compare signed less than","Compare unsigned less than","Compare unsigned less than","Compare unsigned less than","Compare unsigned less than","Floating-point compare less than","Floating-point compare less than zero","Floating-point compare less than zero","Compare signed less than zero","Compare signed less than zero","Compare signed less than zero","Compare signed less than zero","Floating-point compare less than zero","Compare less than zero","Floating-point compare less than zero","Floating-point compare less than zero","Compare signed less than zero","Compare signed less than zero","Compare signed less than zero","Compare signed less than zero","Floating-point compare less than zero","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Floating-point complex multiply accumulate","Population count per byte.","Population count per byte.","Population count per byte.","Population count per byte.","Population count per byte.","Population count per byte.","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Insert vector element from another vector element","Duplicate vector element to vector or scalar","Insert vector element from another vector element","Duplicate vector element to vector or scalar","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Duplicate vector element to vector or scalar","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Duplicate vector element to vector or scalar","Insert vector element from another vector element","Insert vector element from another vector element","Duplicate vector element to vector or scalar","Insert vector element from another vector element","Duplicate vector element to vector or scalar","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Duplicate vector element to vector or scalar","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Duplicate vector element to vector or scalar","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Floating-point convert to lower precision narrow","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Floating-point convert to higher precision long","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Floating-point convert to lower precision narrow","Floating-point convert to higher precision long","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to signed fixed-point rounding …","Floating-point convert to signed fixed-point rounding …","Floating-point convert to unsigned fixed-point rounding …","Floating-point convert to unsigned fixed-point rounding …","Floating-point convert to signed integer rounding to …","Floating-point convert to signed integer rounding to …","Floating-point convert to unsigned integer rounding to …","Floating-point convert to unsigned integer rounding to …","Floating-point convert to integer rounding to nearest …","Floating-point convert to integer rounding to nearest …","Floating-point convert to signed integer rounding to …","Floating-point convert to signed integer rounding to …","Floating-point convert to unsigned integer rounding to …","Floating-point convert to unsigned integer rounding to …","Floating-point convert to integer rounding to nearest …","Floating-point convert to integer rounding to nearest …","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to fixed-point rounding toward zero","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Floating-point convert to signed integer rounding toward …","Floating-point convert to signed integer rounding toward …","Floating-point convert to unsigned integer rounding …","Floating-point convert to unsigned integer rounding …","Floating-point convert to signed integer rounding toward …","Floating-point convert to unsigned integer rounding …","Floating-point convert to signed integer rounding toward …","Floating-point convert to signed integer rounding toward …","Floating-point convert to unsigned integer rounding …","Floating-point convert to unsigned integer rounding …","Floating-point convert to signed integer rounding toward …","Floating-point convert to unsigned integer rounding …","Floating-point convert to signed integer rounding to …","Floating-point convert to signed integer rounding to …","Floating-point convert to unsigned integer rounding to …","Floating-point convert to unsigned integer rounding to …","Floating-point convert to signed integer rounding to …","Floating-point convert to unsigned integer rounding to …","Floating-point convert to signed integer rounding to …","Floating-point convert to signed integer rounding to …","Floating-point convert to unsigned integer rounding to …","Floating-point convert to unsigned integer rounding to …","Floating-point convert to signed integer rounding to …","Floating-point convert to unsigned integer rounding to …","Floating-point convert to signed integer rounding toward …","Floating-point convert to signed integer rounding toward …","Floating-point convert to unsigned integer rounding …","Floating-point convert to unsigned integer rounding …","Floating-point convert to signed integer rounding toward …","Floating-point convert to unsigned integer rounding …","Floating-point convert to signed integer rounding toward …","Floating-point convert to signed integer rounding toward …","Floating-point convert to unsigned integer rounding …","Floating-point convert to unsigned integer rounding …","Floating-point convert to signed integer rounding toward …","Floating-point convert to unsigned integer rounding …","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to signed fixed-point rounding …","Floating-point convert to signed fixed-point rounding …","Floating-point convert to unsigned fixed-point rounding …","Floating-point convert to unsigned fixed-point rounding …","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to fixed-point rounding toward zero","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Floating-point convert to lower precision narrow rounding …","Floating-point convert to lower precision narrow rounding …","Floating-point convert to lower precision narrow rounding …","Divide","Divide","Divide","Divide","Dot product arithmetic (indexed)","Dot product arithmetic (indexed)","Dot product arithmetic (indexed)","Dot product arithmetic (indexed)","Dot product arithmetic (vector)","Dot product arithmetic (vector)","Dot product arithmetic (indexed)","Dot product arithmetic (indexed)","Dot product arithmetic (indexed)","Dot product arithmetic (indexed)","Dot product arithmetic (vector)","Dot product arithmetic (vector)","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Three-way exclusive OR","Three-way exclusive OR","Three-way exclusive OR","Three-way exclusive OR","Three-way exclusive OR","Three-way exclusive OR","Three-way exclusive OR","Three-way exclusive OR","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused multiply-add to accumulator","Floating-point fused multiply-add to accumulator","Floating-point fused multiply-add to accumulator","Floating-point fused multiply-add to accumulator","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused multiply-add to accumulator","Floating-point fused multiply-add to accumulator","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused multiply-add to accumulator","Floating-point fused multiply-add to accumulator","Floating-point fused multiply-add to accumulator","Floating-point fused multiply-add to accumulator","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused multiply-add to accumulator","Floating-point fused multiply-add to accumulator","Floating-point fused multiply-subtract from accumulator","Floating-point fused multiply-subtract from accumulator","Floating-point fused multiply-subtract to accumulator","Floating-point fused multiply-subtract to accumulator","Floating-point fused multiply-subtract to accumulator","Floating-point fused multiply-subtract to accumulator","Floating-point fused Multiply-subtract to …","Floating-point fused Multiply-subtract to …","Floating-point fused multiply-subtract to accumulator","Floating-point fused multiply-subtract to accumulator","Floating-point fused multiply-subtract from accumulator","Floating-point fused multiply-subtract from accumulator","Floating-point fused multiply-subtract to accumulator","Floating-point fused multiply-subtract to accumulator","Floating-point fused multiply-subtract to accumulator","Floating-point fused multiply-subtract to accumulator","Floating-point fused Multiply-subtract to …","Floating-point fused Multiply-subtract to …","Floating-point fused multiply-subtract to accumulator","Floating-point fused multiply-subtract to accumulator","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Load one single-element structure and Replicate to all …","Load multiple single-element structures to one two …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load one single-element structure and Replicate to all …","Load multiple single-element structures to one two …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load SIMD&amp;FP register (immediate offset)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Floating-point Maximum Number (vector)","Floating-point Maximum Number (vector)","Floating-point Maximum Number (vector)","Floating-point Maximum Number (vector)","Floating-point maximum number across vector","Floating-point maximum number across vector","Floating-point maximum number across vector","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Horizontal vector max.","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Floating-point Minimum Number (vector)","Floating-point Minimum Number (vector)","Floating-point Minimum Number (vector)","Floating-point Minimum Number (vector)","Floating-point minimum number across vector","Floating-point minimum number across vector","Floating-point minimum number across vector","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Horizontal vector min.","Floating-point multiply-add to accumulator","Floating-point multiply-add to accumulator","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add long","Multiply-add long","Multiply-add long","Multiply-add long","Multiply-add long","Multiply-add long","Multiply-add long","Multiply-add long","Multiply-add long","Multiply-add long","Multiply-add long","Multiply-add long","Signed multiply-add long","Signed multiply-add long","Signed multiply-add long","Unsigned multiply-add long","Unsigned multiply-add long","Unsigned multiply-add long","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Signed multiply-add long","Signed multiply-add long","Signed multiply-add long","Unsigned multiply-add long","Unsigned multiply-add long","Unsigned multiply-add long","Floating-point multiply-add to accumulator","Floating-point multiply-add to accumulator","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Floating-point multiply-subtract from accumulator","Floating-point multiply-subtract from accumulator","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract long","Multiply-subtract long","Multiply-subtract long","Multiply-subtract long","Multiply-subtract long","Multiply-subtract long","Multiply-subtract long","Multiply-subtract long","Multiply-subtract long","Multiply-subtract long","Multiply-subtract long","Multiply-subtract long","Signed multiply-subtract long","Signed multiply-subtract long","Signed multiply-subtract long","Unsigned multiply-subtract long","Unsigned multiply-subtract long","Unsigned multiply-subtract long","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Signed multiply-subtract long","Signed multiply-subtract long","Signed multiply-subtract long","Unsigned multiply-subtract long","Unsigned multiply-subtract long","Unsigned multiply-subtract long","Floating-point multiply-subtract from accumulator","Floating-point multiply-subtract from accumulator","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","8-bit integer matrix multiply-accumulate","8-bit integer matrix multiply-accumulate","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Vector move","Vector move","Vector move","Vector move","Vector move","Vector move","Vector long move.","Vector long move.","Vector long move.","Vector long move.","Vector long move.","Vector long move.","Extract narrow","Extract narrow","Extract narrow","Extract narrow","Extract narrow","Extract narrow","Vector narrow integer.","Vector narrow integer.","Vector narrow integer.","Vector narrow integer.","Vector narrow integer.","Vector narrow integer.","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Multiply","Multiply","Floating-point multiply","Floating-point multiply","Multiply","Multiply","Multiply","Multiply","Floating-point multiply","Floating-point multiply","Multiply","Multiply","Multiply","Multiply","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Polynomial multiply","Multiply","Multiply","Multiply","Multiply","Multiply","Multiply","Floating-point multiply","Floating-point multiply","Multiply long","Multiply long","Multiply long","Multiply long","Multiply long","Multiply long","Multiply long","Multiply long","Multiply long","Multiply long","Multiply long","Multiply long","Polynomial multiply long","Polynomial multiply long","Signed multiply long","Signed multiply long","Signed multiply long","Unsigned multiply long","Unsigned multiply long","Unsigned multiply long","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply with scalar","Vector long multiply with scalar","Vector long multiply with scalar","Vector long multiply with scalar","Polynomial multiply long","Polynomial multiply long","Signed multiply long","Signed multiply long","Signed multiply long","Unsigned multiply long","Unsigned multiply long","Unsigned multiply long","Multiply","Multiply","Floating-point multiply","Floating-point multiply","Multiply","Multiply","Multiply","Multiply","Floating-point multiply","Floating-point multiply","Multiply","Multiply","Multiply","Multiply","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Polynomial multiply","Multiply","Multiply","Multiply","Multiply","Multiply","Multiply","Floating-point multiply","Floating-point multiply","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Floating-point multiply extended","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Negate","Negate","Negate","Negate","Negate","Negate","Negate","Negate","Negate","Negate","Negate","Negate","Negate","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Signed Add and Accumulate Long Pairwise.","Signed Add and Accumulate Long Pairwise.","Signed Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Signed Add and Accumulate Long Pairwise.","Signed Add and Accumulate Long Pairwise.","Signed Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Floating-point add pairwise","Add pairwise.","Add pairwise.","Add pairwise.","Add pairwise.","Add pairwise.","Add pairwise.","Floating-point add pairwise","Add pairwise","Add pairwise","Signed Add Long Pairwise.","Signed Add Long Pairwise.","Signed Add Long Pairwise.","Unsigned Add Long Pairwise.","Unsigned Add Long Pairwise.","Unsigned Add Long Pairwise.","Signed Add Long Pairwise.","Signed Add Long Pairwise.","Signed Add Long Pairwise.","Unsigned Add Long Pairwise.","Unsigned Add Long Pairwise.","Unsigned Add Long Pairwise.","Floating-point add pairwise","Floating-point add pairwise","Add pairwise","Add pairwise","Add pairwise","Add pairwise","Add pairwise","Add pairwise","Add pairwise","Add pairwise","Floating-point add pairwise","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Floating-point Maximum Number Pairwise (vector).","Floating-point Maximum Number Pairwise (vector).","Floating-point Maximum Number Pairwise (vector).","Floating-point maximum number pairwise","Floating-point maximum number pairwise","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Floating-point maximum pairwise","Floating-point maximum pairwise","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Floating-point Minimum Number Pairwise (vector).","Floating-point Minimum Number Pairwise (vector).","Floating-point Minimum Number Pairwise (vector).","Floating-point minimum number pairwise","Floating-point minimum number pairwise","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Floating-point minimum pairwise","Floating-point minimum pairwise","Signed saturating Absolute value","Signed saturating Absolute value","Signed saturating Absolute value","Signed saturating Absolute value","Signed saturating absolute value","Signed saturating absolute value","Signed saturating absolute value","Signed saturating Absolute value","Signed saturating Absolute value","Signed saturating Absolute value","Signed saturating Absolute value","Signed saturating absolute value","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Vector widening saturating doubling multiply accumulate …","Vector widening saturating doubling multiply accumulate …","Vector widening saturating doubling multiply accumulate …","Vector widening saturating doubling multiply accumulate …","Vector widening saturating doubling multiply accumulate …","Vector widening saturating doubling multiply accumulate …","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Vector widening saturating doubling multiply subtract with …","Vector widening saturating doubling multiply subtract with …","Vector widening saturating doubling multiply subtract with …","Vector widening saturating doubling multiply subtract with …","Vector widening saturating doubling multiply subtract with …","Vector widening saturating doubling multiply subtract with …","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high with scalar","Vector saturating doubling multiply high with scalar","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply returning high half","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high with scalar","Vector saturating doubling multiply high with scalar","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Vector saturating doubling long multiply by scalar","Vector saturating doubling long multiply by scalar","Vector saturating doubling long multiply by scalar","Vector saturating doubling long multiply by scalar","Vector saturating doubling long multiply with scalar","Vector saturating doubling long multiply with scalar","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating extract narrow","Signed saturating extract narrow","Signed saturating extract narrow","Signed saturating extract narrow","Signed saturating extract narrow","Signed saturating extract narrow","Signed saturating extract narrow","Signed saturating extract narrow","Signed saturating extract narrow","Unsigned saturating extract narrow","Unsigned saturating extract narrow","Unsigned saturating extract narrow","Saturating extract narrow","Saturating extract narrow","Saturating extract narrow","Saturating extract narrow","Saturating extract narrow","Saturating extract narrow","Signed saturating extract unsigned narrow","Signed saturating extract unsigned narrow","Signed saturating extract unsigned narrow","Signed saturating extract unsigned narrow","Signed saturating extract unsigned narrow","Signed saturating extract unsigned narrow","Signed saturating extract unsigned narrow","Signed saturating extract unsigned narrow","Signed saturating extract unsigned narrow","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply accumulate …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Signed saturating rounding doubling multiply subtract …","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector saturating rounding doubling multiply high with …","Vector saturating rounding doubling multiply high with …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding doubling multiply returning …","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector saturating rounding doubling multiply high with …","Vector saturating rounding doubling multiply high with …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding shift left","Signed saturating rounding shift left","Signed saturating rounding shift left","Signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Signed saturating rounding shift left","Signed saturating rounding shift left","Signed saturating rounding shift left","Signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Signed saturating rounded shift right narrow","Signed saturating rounded shift right narrow","Signed saturating rounded shift right narrow","Unsigned saturating rounded shift right narrow","Unsigned saturating rounded shift right narrow","Unsigned saturating rounded shift right narrow","Signed saturating rounded shift right narrow","Signed saturating rounded shift right narrow","Signed saturating rounded shift right narrow","Unsigned signed saturating rounded shift right narrow","Unsigned signed saturating rounded shift right narrow","Unsigned signed saturating rounded shift right narrow","Signed saturating rounded shift right narrow","Unsigned saturating rounded shift right narrow","Signed saturating rounded shift right narrow","Unsigned saturating rounded shift right narrow","Signed saturating rounded shift right narrow","Unsigned saturating rounded shift right narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift right narrow","Signed saturating shift right narrow","Signed saturating shift right narrow","Unsigned saturating shift right narrow","Unsigned saturating shift right narrow","Unsigned saturating shift right narrow","Signed saturating shift right narrow","Signed saturating shift right narrow","Signed saturating shift right narrow","Unsigned saturating shift right narrow","Unsigned saturating shift right narrow","Unsigned saturating shift right narrow","Signed saturating shift right narrow","Unsigned saturating shift right narrow","Signed saturating shift right narrow","Unsigned saturating shift right narrow","Signed saturating shift right narrow","Unsigned saturating shift right narrow","Signed saturating shift right unsigned narrow","Signed saturating shift right unsigned narrow","Signed saturating shift right unsigned narrow","Signed saturating shift right unsigned narrow","Signed saturating shift right unsigned narrow","Signed saturating shift right unsigned narrow","Signed saturating shift right unsigned narrow","Signed saturating shift right unsigned narrow","Signed saturating shift right unsigned narrow","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow.","Rounding Add returning High Narrow.","Rounding Add returning High Narrow.","Rounding Add returning High Narrow.","Rounding Add returning High Narrow.","Rounding Add returning High Narrow.","Rotate and exclusive OR","Reverse bit order","Reverse bit order","Reverse bit order","Reverse bit order","Reverse bit order","Reverse bit order","Reciprocal estimate.","Reciprocal estimate.","Unsigned reciprocal estimate","Reciprocal estimate.","Reciprocal estimate.","Reciprocal estimate.","Unsigned reciprocal estimate","Reciprocal estimate.","Floating-point reciprocal step","Floating-point reciprocal step","Floating-point reciprocal step","Floating-point reciprocal step","Floating-point reciprocal step","Floating-point reciprocal step","Floating-point reciprocal exponent","Floating-point reciprocal exponent","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation"],"2":["Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Floating-point round to 32-bit integer using current …","Floating-point round to 32-bit integer using current …","Floating-point round to 32-bit integer using current …","Floating-point round to 32-bit integer using current …","Floating-point round to 32-bit integer toward zero","Floating-point round to 32-bit integer toward zero","Floating-point round to 32-bit integer toward zero","Floating-point round to 32-bit integer toward zero","Floating-point round to 64-bit integer using current …","Floating-point round to 64-bit integer using current …","Floating-point round to 64-bit integer using current …","Floating-point round to 64-bit integer using current …","Floating-point round to 64-bit integer toward zero","Floating-point round to 64-bit integer toward zero","Floating-point round to 64-bit integer toward zero","Floating-point round to 64-bit integer toward zero","Floating-point round to integral toward zero","Floating-point round to integral toward zero","Floating-point round to integral to nearest with ties to …","Floating-point round to integral to nearest with ties to …","Floating-point round to integral to nearest with ties to …","Floating-point round to integral to nearest with ties to …","Floating-point round to integral using current rounding …","Floating-point round to integral using current rounding …","Floating-point round to integral using current rounding …","Floating-point round to integral using current rounding …","Floating-point round to integral toward minus infinity","Floating-point round to integral toward minus infinity","Floating-point round to integral toward minus infinity","Floating-point round to integral toward minus infinity","Floating-point round to integral to nearest with ties to …","Floating-point round to integral to nearest with ties to …","Floating-point round to integral to nearest with ties to …","Floating-point round to integral to nearest with ties to …","Floating-point round to integral to nearest with ties to …","Floating-point round to integral toward plus infinity","Floating-point round to integral toward plus infinity","Floating-point round to integral toward plus infinity","Floating-point round to integral toward plus infinity","Floating-point round to integral toward zero","Floating-point round to integral toward zero","Floating-point round to integral exact using current …","Floating-point round to integral exact using current …","Floating-point round to integral exact using current …","Floating-point round to integral exact using current …","Signed rounding shift left","Signed rounding shift left","Signed rounding shift left","Signed rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Signed rounding shift left","Unsigned rounding shift left","Signed rounding shift left","Signed rounding shift left","Signed rounding shift left","Signed rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Signed rounding shift right","Signed rounding shift right","Signed rounding shift right","Signed rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Signed rounding shift right","Unsigned rounding shift right","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Signed rounding shift right","Signed rounding shift right","Signed rounding shift right","Signed rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Reciprocal square-root estimate.","Reciprocal square-root estimate.","Unsigned reciprocal square root estimate","Reciprocal square-root estimate.","Reciprocal square-root estimate.","Reciprocal square-root estimate.","Unsigned reciprocal square root estimate","Reciprocal square-root estimate.","Floating-point reciprocal square root step","Floating-point reciprocal square root step","Floating-point reciprocal square root step","Floating-point reciprocal square root step","Floating-point reciprocal square root step","Floating-point reciprocal square root step","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Signed rounding shift right and accumulate.","Unsigned rounding shift right and accumulate.","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","SHA1 hash update accelerator choose.","SHA1 fixed rotate.","SHA1 hash update accelerator majority.","SHA1 hash update accelerator parity.","SHA1 schedule update accelerator first part.","SHA1 schedule update accelerator second part.","SHA256 hash update accelerator upper part.","SHA256 hash update accelerator.","SHA256 schedule update accelerator first part.","SHA256 schedule update accelerator second part.","SHA512 hash update part 2","SHA512 hash update part 1","SHA512 schedule update 0","SHA512 schedule update 1","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Signed Shift left","Signed Shift left","Signed Shift left","Signed Shift left","Unsigned Shift left","Unsigned Shift left","Unsigned Shift left","Unsigned Shift left","Shift left","Shift left","Signed Shift left","Unsigned Shift left","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Signed Shift left","Signed Shift left","Signed Shift left","Signed Shift left","Unsigned Shift left","Unsigned Shift left","Unsigned Shift left","Unsigned Shift left","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Signed shift right","Unsigned shift right","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift left and insert","Shift left and insert","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","SM3PARTW1","SM3PARTW2","SM3SS1","SM3TT1A","SM3TT1B","SM3TT2A","SM3TT2B","SM4 key","SM4 encode","Unsigned saturating Accumulate of Signed value.","Unsigned saturating Accumulate of Signed value.","Unsigned saturating Accumulate of Signed value.","Unsigned saturating Accumulate of Signed value.","Unsigned saturating accumulate of signed value","Unsigned saturating accumulate of signed value","Unsigned saturating accumulate of signed value","Unsigned saturating Accumulate of Signed value.","Unsigned saturating Accumulate of Signed value.","Unsigned saturating Accumulate of Signed value.","Unsigned saturating Accumulate of Signed value.","Unsigned saturating accumulate of signed value","Calculates the square root of each lane.","Calculates the square root of each lane.","Calculates the square root of each lane.","Calculates the square root of each lane.","Signed shift right and accumulate","Signed shift right and accumulate","Signed shift right and accumulate","Signed shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Signed shift right and accumulate","Unsigned shift right and accumulate","Signed shift right and accumulate","Signed shift right and accumulate","Signed shift right and accumulate","Signed shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift right and insert","Shift right and insert","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Arm’s documentation","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Arm’s documentation","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store SIMD&amp;FP register (immediate offset)","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Signed Subtract Long","Signed Subtract Long","Signed Subtract Long","Unsigned Subtract Long","Unsigned Subtract Long","Unsigned Subtract Long","Signed Subtract Long","Signed Subtract Long","Signed Subtract Long","Unsigned Subtract Long","Unsigned Subtract Long","Unsigned Subtract Long","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Signed Subtract Wide","Signed Subtract Wide","Signed Subtract Wide","Unsigned Subtract Wide","Unsigned Subtract Wide","Unsigned Subtract Wide","Signed Subtract Wide","Signed Subtract Wide","Signed Subtract Wide","Unsigned Subtract Wide","Unsigned Subtract Wide","Unsigned Subtract Wide","Dot product index form with signed and unsigned integers","Dot product index form with signed and unsigned integers","Dot product index form with signed and unsigned integers","Dot product index form with signed and unsigned integers","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose vectors","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Compare bitwise test bits nonzero","Compare bitwise test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Signed saturating Accumulate of Unsigned value.","Signed saturating Accumulate of Unsigned value.","Signed saturating Accumulate of Unsigned value.","Signed saturating Accumulate of Unsigned value.","Signed saturating accumulate of unsigned value","Signed saturating accumulate of unsigned value","Signed saturating accumulate of unsigned value","Signed saturating Accumulate of Unsigned value.","Signed saturating Accumulate of Unsigned value.","Signed saturating Accumulate of Unsigned value.","Signed saturating Accumulate of Unsigned value.","Signed saturating accumulate of unsigned value","Dot product index form with unsigned and signed integers","Dot product index form with unsigned and signed integers","Dot product vector form with unsigned and signed integers","Dot product index form with unsigned and signed integers","Dot product index form with unsigned and signed integers","Dot product vector form with unsigned and signed integers","Unsigned and signed 8-bit integer matrix …","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Exclusive OR and rotate","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Full system is the required shareability domain reads and …","CRC32 single round checksum for bytes (8 bits).","CRC32-C single round checksum for bytes (8 bits).","CRC32-C single round checksum for half words (16 bits).","CRC32-C single round checksum for words (32 bits).","CRC32 single round checksum for half words (16 bits).","CRC32 single round checksum for words (32 bits).","Generates a DMB (data memory barrier) instruction or …","Generates a DSB (data synchronization barrier) instruction …","Generates an ISB (instruction synchronization barrier) …","Generates an unspecified no-op instruction.","Signed saturating addition","Saturating two 16-bit integer additions","Saturating four 8-bit integer additions","Returns the 16-bit signed saturated equivalent of","Insert a QADD instruction","Returns the 16-bit signed saturated equivalent of","Signed saturating subtraction","Saturating two 16-bit integer subtraction","Saturating two 8-bit integer subtraction","Returns the 16-bit signed saturated equivalent of","Returns the 8-bit signed saturated equivalent of","Returns the 16-bit signed equivalent of","Select bytes from each operand according to APSR GE flags","Generates a SEV (send a global event) hint instruction.","Generates a send a local event hint instruction.","Signed halving parallel halfword-wise addition.","Signed halving parallel byte-wise addition.","Signed halving parallel halfword-wise subtraction.","Signed halving parallel byte-wise subtraction.","Insert a SMLABB instruction","Insert a SMLABT instruction","Dual 16-bit Signed Multiply with Addition of products and …","Insert a SMLATB instruction","Insert a SMLATT instruction","Insert a SMLAWB instruction","Insert a SMLAWT instruction","Dual 16-bit Signed Multiply with Subtraction  of products …","Signed Dual Multiply Add.","Signed Dual Multiply Add Reversed.","Insert a SMULBB instruction","Insert a SMULTB instruction","Insert a SMULTB instruction","Insert a SMULTT instruction","Insert a SMULWB instruction","Insert a SMULWT instruction","Signed Dual Multiply Subtract.","Signed Dual Multiply Subtract Reversed.","Saturates a 32-bit signed integer to a signed integer with …","Inserts a SSUB8 instruction.","Sum of 8-bit absolute differences.","Sum of 8-bit absolute differences and constant.","Saturates a 32-bit signed integer to an unsigned integer …","Inserts a USUB8 instruction.","Generates a WFE (wait for event) hint instruction or …","Generates a WFI (wait for interrupt) hint instruction or …","Generates a YIELD hint instruction.","ARM-specific 64-bit wide vector of two packed f32.","ARM-specific type containing two float32x2_t vectors.","ARM-specific type containing three float32x2_t vectors.","ARM-specific type containing four float32x2_t vectors.","ARM-specific 128-bit wide vector of four packed f32.","ARM-specific type containing two float32x4_t vectors.","ARM-specific type containing three float32x4_t vectors.","ARM-specific type containing four float32x4_t vectors.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ARM-specific 32-bit wide vector of two packed i16.","ARM-specific 64-bit wide vector of four packed i16.","ARM-specific type containing two int16x4_t vectors.","ARM-specific type containing three int16x4_t vectors.","ARM-specific type containing four int16x4_t vectors.","ARM-specific 128-bit wide vector of eight packed i16.","ARM-specific type containing two int16x8_t vectors.","ARM-specific type containing three int16x8_t vectors.","ARM-specific type containing four int16x8_t vectors.","ARM-specific 64-bit wide vector of two packed i32.","ARM-specific type containing two int32x2_t vectors.","ARM-specific type containing three int32x2_t vectors.","ARM-specific type containing four int32x2_t vectors.","ARM-specific 128-bit wide vector of four packed i32.","ARM-specific type containing two int32x4_t vectors.","ARM-specific type containing three int32x4_t vectors.","ARM-specific type containing four int32x4_t vectors.","ARM-specific 64-bit wide vector of one packed i64.","ARM-specific type containing two int64x1_t vectors.","ARM-specific type containing three int64x1_t vectors.","ARM-specific type containing four int64x1_t vectors.","ARM-specific 128-bit wide vector of two packed i64.","ARM-specific type containing two int64x2_t vectors.","ARM-specific type containing three int64x2_t vectors.","ARM-specific type containing four int64x2_t vectors.","ARM-specific 128-bit wide vector of sixteen packed i8.","ARM-specific type containing two int8x16_t vectors.","ARM-specific type containing three int8x16_t vectors.","ARM-specific type containing four int8x16_t vectors.","ARM-specific 32-bit wide vector of four packed i8.","ARM-specific 64-bit wide vector of eight packed i8.","ARM-specific type containing two int8x8_t vectors.","ARM-specific type containing three int8x8_t vectors.","ARM-specific type containing four int8x8_t vectors.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","ARM-specific 64-bit wide vector of four packed p16.","ARM-specific type containing two poly16x4_t vectors.","ARM-specific type containing three poly16x4_t vectors.","ARM-specific type containing four poly16x4_t vectors.","ARM-specific 128-bit wide vector of eight packed p16.","ARM-specific type containing two poly16x8_t vectors.","ARM-specific type containing three poly16x8_t vectors.","ARM-specific type containing four poly16x8_t vectors.","ARM-specific 64-bit wide vector of one packed p64.","ARM-specific type containing two poly64x1_t vectors.","ARM-specific type containing three poly64x1_t vectors.","ARM-specific type containing four poly64x1_t vectors.","ARM-specific 128-bit wide vector of two packed p64.","ARM-specific type containing two poly64x2_t vectors.","ARM-specific type containing three poly64x2_t vectors.","ARM-specific type containing four poly64x2_t vectors.","ARM-specific 128-bit wide vector of sixteen packed p8.","ARM-specific type containing two poly8x16_t vectors.","ARM-specific type containing three poly8x16_t vectors.","ARM-specific type containing four poly8x16_t vectors.","ARM-specific 64-bit wide polynomial vector of eight packed …","ARM-specific type containing two poly8x8_t vectors.","ARM-specific type containing three poly8x8_t vectors.","ARM-specific type containing four poly8x8_t vectors.","ARM-specific 32-bit wide vector of two packed u16.","ARM-specific 64-bit wide vector of four packed u16.","ARM-specific type containing two uint16x4_t vectors.","ARM-specific type containing three uint16x4_t vectors.","ARM-specific type containing four uint16x4_t vectors.","ARM-specific 128-bit wide vector of eight packed u16.","ARM-specific type containing two uint16x8_t vectors.","ARM-specific type containing three uint16x8_t vectors.","ARM-specific type containing four uint16x8_t vectors.","ARM-specific 64-bit wide vector of two packed u32.","ARM-specific type containing two uint32x2_t vectors.","ARM-specific type containing three uint32x2_t vectors.","ARM-specific type containing four uint32x2_t vectors.","ARM-specific 128-bit wide vector of four packed u32.","ARM-specific type containing two uint32x4_t vectors.","ARM-specific type containing three uint32x4_t vectors.","ARM-specific type containing four uint32x4_t vectors.","ARM-specific 64-bit wide vector of one packed u64.","ARM-specific type containing two uint64x1_t vectors.","ARM-specific type containing three uint64x1_t vectors.","ARM-specific type containing four uint64x1_t vectors.","ARM-specific 128-bit wide vector of two packed u64.","ARM-specific type containing two uint64x2_t vectors.","ARM-specific type containing three uint64x2_t vectors.","ARM-specific type containing four uint64x2_t vectors.","ARM-specific 128-bit wide vector of sixteen packed u8.","ARM-specific type containing two uint8x16_t vectors.","ARM-specific type containing three uint8x16_t vectors.","ARM-specific type containing four uint8x16_t vectors.","ARM-specific 32-bit wide vector of four packed u8.","ARM-specific 64-bit wide vector of eight packed u8.","ARM-specific type containing two uint8x8_t vectors.","ARM-specific type containing three uint8x8_t vectors.","ARM-specific type containing four uint8x8_t vectors.","Signed Absolute difference and Accumulate Long","Signed Absolute difference and Accumulate Long","Signed Absolute difference and Accumulate Long","Unsigned Absolute difference and Accumulate Long","Unsigned Absolute difference and Accumulate Long","Unsigned Absolute difference and Accumulate Long","Absolute difference between the arguments of Floating","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Signed Absolute difference Long","Signed Absolute difference Long","Signed Absolute difference Long","Unsigned Absolute difference Long","Unsigned Absolute difference Long","Unsigned Absolute difference Long","Absolute difference between the arguments of Floating","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Absolute difference between the arguments","Floating-point absolute value","Absolute value (wrapping).","Absolute value (wrapping).","Absolute value (wrapping).","Floating-point absolute value","Absolute value (wrapping).","Absolute value (wrapping).","Absolute value (wrapping).","Vector add.","Bitwise exclusive OR","Bitwise exclusive OR","Bitwise exclusive OR","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Add returning High Narrow (high half).","Add returning High Narrow (high half).","Add returning High Narrow (high half).","Add returning High Narrow (high half).","Add returning High Narrow (high half).","Add returning High Narrow (high half).","Add returning High Narrow.","Add returning High Narrow.","Add returning High Narrow.","Add returning High Narrow.","Add returning High Narrow.","Add returning High Narrow.","Signed Add Long (vector high half).","Signed Add Long (vector high half).","Signed Add Long (vector high half).","Unsigned Add Long (vector high half).","Unsigned Add Long (vector high half).","Unsigned Add Long (vector high half).","Signed Add Long (vector).","Signed Add Long (vector).","Signed Add Long (vector).","Unsigned Add Long (vector).","Unsigned Add Long (vector).","Unsigned Add Long (vector).","Vector add.","Bitwise exclusive OR","Bitwise exclusive OR","Bitwise exclusive OR","Bitwise exclusive OR","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Vector add.","Signed Add Wide (high half).","Signed Add Wide (high half).","Signed Add Wide (high half).","Unsigned Add Wide (high half).","Unsigned Add Wide (high half).","Unsigned Add Wide (high half).","Signed Add Wide.","Signed Add Wide.","Signed Add Wide.","Unsigned Add Wide.","Unsigned Add Wide.","Unsigned Add Wide.","AES single round decryption.","AES single round encryption.","AES inverse mix columns.","AES mix columns.","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise and","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Vector bitwise bit clear","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select instructions. This instruction sets each …","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select.","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Bitwise Select. (128-bit)","Floating-point absolute compare greater than or equal","Floating-point absolute compare greater than or equal","Floating-point absolute compare greater than","Floating-point absolute compare greater than","Floating-point absolute compare less than or equal","Floating-point absolute compare less than or equal","Floating-point absolute compare less than","Floating-point absolute compare less than","Floating-point compare equal","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Floating-point compare equal","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Compare bitwise Equal (vector)","Floating-point compare greater than or equal","Compare signed greater than or equal","Compare signed greater than or equal","Compare signed greater than or equal","Compare unsigned greater than or equal","Compare unsigned greater than or equal","Compare unsigned greater than or equal","Floating-point compare greater than or equal","Compare signed greater than or equal","Compare signed greater than or equal","Compare signed greater than or equal","Compare unsigned greater than or equal","Compare unsigned greater than or equal","Compare unsigned greater than or equal","Floating-point compare greater than","Compare signed greater than","Compare signed greater than","Compare signed greater than","Compare unsigned greater than","Compare unsigned greater than","Compare unsigned greater than","Floating-point compare greater than","Compare signed greater than","Compare signed greater than","Compare signed greater than","Compare unsigned greater than","Compare unsigned greater than","Compare unsigned greater than","Floating-point compare less than or equal","Compare signed less than or equal","Compare signed less than or equal","Compare signed less than or equal","Compare unsigned less than or equal","Compare unsigned less than or equal","Compare unsigned less than or equal","Floating-point compare less than or equal","Compare signed less than or equal","Compare signed less than or equal","Compare signed less than or equal","Compare unsigned less than or equal","Compare unsigned less than or equal","Compare unsigned less than or equal","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Count leading sign bits","Floating-point compare less than","Compare signed less than","Compare signed less than","Compare signed less than","Compare unsigned less than","Compare unsigned less than","Compare unsigned less than","Floating-point compare less than","Compare signed less than","Compare signed less than","Compare signed less than","Compare unsigned less than","Compare unsigned less than","Compare unsigned less than","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Count leading zero bits","Population count per byte.","Population count per byte.","Population count per byte.","Population count per byte.","Population count per byte.","Population count per byte.","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Vector combine","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to signed fixed-point rounding …","Floating-point convert to unsigned fixed-point rounding …","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Fixed-point convert to floating-point","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to fixed-point rounding toward zero","Floating-point convert to signed fixed-point rounding …","Floating-point convert to unsigned fixed-point rounding …","Dot product arithmetic (indexed)","Dot product arithmetic (indexed)","Dot product arithmetic (vector)","Dot product arithmetic (vector)","Dot product arithmetic (indexed)","Dot product arithmetic (indexed)","Dot product arithmetic (vector)","Dot product arithmetic (vector)","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Set all vector lanes to the same value","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Vector bitwise exclusive or (vector)","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Extract vector from pair of vectors","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused Multiply-Add to accumulator(vector)","Floating-point fused multiply-subtract from accumulator","Floating-point fused Multiply-subtract to …","Floating-point fused multiply-subtract from accumulator","Floating-point fused Multiply-subtract to …","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Move vector element to general-purpose register","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Halving add","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Signed halving subtract","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load one single-element structure and Replicate to all …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load one single-element structure to one lane of one …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load multiple single-element structures to one two …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load single 2-element structure and replicate to all lanes …","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load multiple 2-element structures to two registers","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load single 3-element structure and replicate to all lanes …","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to two registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load multiple 3-element structures to three registers","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load single 4-element structure and replicate to all lanes …","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load multiple 4-element structures to four registers","Load SIMD&amp;FP register (immediate offset)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Floating-point Maximum Number (vector)","Floating-point Maximum Number (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Maximum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Floating-point Minimum Number (vector)","Floating-point Minimum Number (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Minimum (vector)","Floating-point multiply-add to accumulator","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Vector widening multiply accumulate with scalar","Signed multiply-add long","Signed multiply-add long","Signed multiply-add long","Unsigned multiply-add long","Unsigned multiply-add long","Unsigned multiply-add long","Floating-point multiply-add to accumulator","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Vector multiply accumulate with scalar","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Multiply-add to accumulator","Floating-point multiply-subtract from accumulator","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Vector widening multiply subtract with scalar","Signed multiply-subtract long","Signed multiply-subtract long","Signed multiply-subtract long","Unsigned multiply-subtract long","Unsigned multiply-subtract long","Unsigned multiply-subtract long","Floating-point multiply-subtract from accumulator","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Vector multiply subtract with scalar","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","Multiply-subtract from accumulator","8-bit integer matrix multiply-accumulate","8-bit integer matrix multiply-accumulate","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Vector long move.","Vector long move.","Vector long move.","Vector long move.","Vector long move.","Vector long move.","Vector narrow integer.","Vector narrow integer.","Vector narrow integer.","Vector narrow integer.","Vector narrow integer.","Vector narrow integer.","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Duplicate vector element to vector or scalar","Multiply","Floating-point multiply","Multiply","Multiply","Multiply","Multiply","Floating-point multiply","Multiply","Multiply","Multiply","Multiply","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Polynomial multiply","Multiply","Multiply","Multiply","Multiply","Multiply","Multiply","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply by scalar","Vector long multiply with scalar","Vector long multiply with scalar","Vector long multiply with scalar","Vector long multiply with scalar","Polynomial multiply long","Signed multiply long","Signed multiply long","Signed multiply long","Unsigned multiply long","Unsigned multiply long","Unsigned multiply long","Multiply","Floating-point multiply","Multiply","Multiply","Multiply","Multiply","Floating-point multiply","Multiply","Multiply","Multiply","Multiply","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Vector multiply by scalar","Polynomial multiply","Multiply","Multiply","Multiply","Multiply","Multiply","Multiply","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Vector bitwise not.","Negate","Negate","Negate","Negate","Negate","Negate","Negate","Negate","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise inclusive OR NOT","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Vector bitwise or (immediate inclusive)","Signed Add and Accumulate Long Pairwise.","Signed Add and Accumulate Long Pairwise.","Signed Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Signed Add and Accumulate Long Pairwise.","Signed Add and Accumulate Long Pairwise.","Signed Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Unsigned Add and Accumulate Long Pairwise.","Floating-point add pairwise","Add pairwise.","Add pairwise.","Add pairwise.","Add pairwise.","Add pairwise.","Add pairwise.","Signed Add Long Pairwise.","Signed Add Long Pairwise.","Signed Add Long Pairwise.","Unsigned Add Long Pairwise.","Unsigned Add Long Pairwise.","Unsigned Add Long Pairwise.","Signed Add Long Pairwise.","Signed Add Long Pairwise.","Signed Add Long Pairwise.","Unsigned Add Long Pairwise.","Unsigned Add Long Pairwise.","Unsigned Add Long Pairwise.","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding maximum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Folding minimum of adjacent pairs","Signed saturating Absolute value","Signed saturating Absolute value","Signed saturating Absolute value","Signed saturating Absolute value","Signed saturating Absolute value","Signed saturating Absolute value","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Saturating add","Vector widening saturating doubling multiply accumulate …","Vector widening saturating doubling multiply accumulate …","Vector widening saturating doubling multiply accumulate …","Vector widening saturating doubling multiply accumulate …","Signed saturating doubling multiply-add long","Signed saturating doubling multiply-add long","Vector widening saturating doubling multiply subtract with …","Vector widening saturating doubling multiply subtract with …","Vector widening saturating doubling multiply subtract with …","Vector widening saturating doubling multiply subtract with …","Signed saturating doubling multiply-subtract long","Signed saturating doubling multiply-subtract long","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high with scalar","Vector saturating doubling multiply high with scalar","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply returning high half","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high by scalar","Vector saturating doubling multiply high with scalar","Vector saturating doubling multiply high with scalar","Signed saturating doubling multiply returning high half","Signed saturating doubling multiply returning high half","Vector saturating doubling long multiply by scalar","Vector saturating doubling long multiply by scalar","Vector saturating doubling long multiply with scalar","Vector saturating doubling long multiply with scalar","Signed saturating doubling multiply long","Signed saturating doubling multiply long","Signed saturating extract narrow","Signed saturating extract narrow","Signed saturating extract narrow","Unsigned saturating extract narrow","Unsigned saturating extract narrow","Unsigned saturating extract narrow","Signed saturating extract unsigned narrow","Signed saturating extract unsigned narrow","Signed saturating extract unsigned narrow","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Signed saturating negate","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector saturating rounding doubling multiply high with …","Vector saturating rounding doubling multiply high with …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding doubling multiply returning …","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector rounding saturating doubling multiply high by scalar","Vector saturating rounding doubling multiply high with …","Vector saturating rounding doubling multiply high with …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding doubling multiply returning …","Signed saturating rounding shift left","Signed saturating rounding shift left","Signed saturating rounding shift left","Signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Signed saturating rounding shift left","Signed saturating rounding shift left","Signed saturating rounding shift left","Signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Unsigned signed saturating rounding shift left","Signed saturating rounded shift right narrow","Signed saturating rounded shift right narrow","Signed saturating rounded shift right narrow","Unsigned signed saturating rounded shift right narrow","Unsigned signed saturating rounded shift right narrow","Unsigned signed saturating rounded shift right narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating rounded shift right unsigned narrow","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Signed saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Unsigned saturating shift left","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift left unsigned","Signed saturating shift right narrow","Signed saturating shift right narrow","Signed saturating shift right narrow","Unsigned saturating shift right narrow","Unsigned saturating shift right narrow","Unsigned saturating shift right narrow","Signed saturating shift right unsigned narrow","Signed saturating shift right unsigned narrow","Signed saturating shift right unsigned narrow","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Saturating subtract","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow (high half).","Rounding Add returning High Narrow.","Rounding Add returning High Narrow.","Rounding Add returning High Narrow.","Rounding Add returning High Narrow.","Rounding Add returning High Narrow.","Rounding Add returning High Narrow.","Reciprocal estimate.","Unsigned reciprocal estimate","Reciprocal estimate.","Unsigned reciprocal estimate","Floating-point reciprocal step","Floating-point reciprocal step","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Vector reinterpret cast operation","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Reversing vector elements (swap endianness)","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Rounding halving add","Floating-point round to integral to nearest with ties to …","Floating-point round to integral to nearest with ties to …","Signed rounding shift left","Signed rounding shift left","Signed rounding shift left","Signed rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Signed rounding shift left","Signed rounding shift left","Signed rounding shift left","Signed rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Unsigned rounding shift left","Signed rounding shift right","Signed rounding shift right","Signed rounding shift right","Signed rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Rounding shift right narrow","Signed rounding shift right","Signed rounding shift right","Signed rounding shift right","Signed rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Unsigned rounding shift right","Reciprocal square-root estimate.","Unsigned reciprocal square root estimate","Reciprocal square-root estimate.","Unsigned reciprocal square root estimate","Floating-point reciprocal square root step","Floating-point reciprocal square root step","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Signed rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Unsigned rounding shift right and accumulate","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Rounding subtract returning high narrow","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","Insert vector element from another vector element","SHA1 hash update accelerator choose.","SHA1 fixed rotate.","SHA1 hash update accelerator majority.","SHA1 hash update accelerator parity.","SHA1 schedule update accelerator first part.","SHA1 schedule update accelerator second part.","SHA256 hash update accelerator upper part.","SHA256 hash update accelerator.","SHA256 schedule update accelerator first part.","SHA256 schedule update accelerator second part.","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Signed Shift left","Signed Shift left","Signed Shift left","Signed Shift left","Unsigned Shift left","Unsigned Shift left","Unsigned Shift left","Unsigned Shift left","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Signed shift left long","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Shift left","Signed Shift left","Signed Shift left","Signed Shift left","Signed Shift left","Unsigned Shift left","Unsigned Shift left","Unsigned Shift left","Unsigned Shift left","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right narrow","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift right","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Shift Left and Insert (immediate)","Signed shift right and accumulate","Signed shift right and accumulate","Signed shift right and accumulate","Signed shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Signed shift right and accumulate","Signed shift right and accumulate","Signed shift right and accumulate","Signed shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Unsigned shift right and accumulate","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Shift Right and Insert (immediate)","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …"],"3":["Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures from one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple single-element structures to one two …","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 2-element structures from two registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 3-element structures from three registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store multiple 4-element structures from four registers","Store SIMD&amp;FP register (immediate offset)","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Subtract returning high narrow","Signed Subtract Long","Signed Subtract Long","Signed Subtract Long","Unsigned Subtract Long","Unsigned Subtract Long","Unsigned Subtract Long","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Subtract","Signed Subtract Wide","Signed Subtract Wide","Signed Subtract Wide","Unsigned Subtract Wide","Unsigned Subtract Wide","Unsigned Subtract Wide","Dot product index form with signed and unsigned integers","Dot product index form with signed and unsigned integers","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Extended table look-up","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Transpose elements","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Signed compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Unsigned compare bitwise Test bits nonzero","Dot product index form with unsigned and signed integers","Dot product vector form with unsigned and signed integers","Dot product index form with unsigned and signed integers","Dot product vector form with unsigned and signed integers","Unsigned and signed 8-bit integer matrix …","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Unzip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Zip vectors","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","LOONGARCH-specific 256-bit wide vector of 16 packed i16.","LOONGARCH-specific 128-bit wide vector of 16 packed i8.","LOONGARCH-specific 256-bit wide vector of 16 packed u16.","LOONGARCH-specific 128-bit wide vector of 16 packed u8.","LOONGARCH-specific 128-bit wide vector of 2 packed f64.","LOONGARCH-specific 128-bit wide vector of 2 packed i64.","LOONGARCH-specific 128-bit wide vector of 2 packed u64.","LOONGARCH-specific 256-bit wide vector of 32 packed i8.","LOONGARCH-specific 256-bit wide vector of 32 packed u8.","LOONGARCH-specific 128-bit wide vector of 4 packed f32.","LOONGARCH-specific 256-bit wide vector of 4 packed f64.","LOONGARCH-specific 128-bit wide vector of 4 packed i32.","LOONGARCH-specific 256-bit wide vector of 4 packed i64.","LOONGARCH-specific 128-bit wide vector of 4 packed u32.","LOONGARCH-specific 256-bit wide vector of 4 packed u64.","LOONGARCH-specific 128-bit wide vector of 8 packed f32.","LOONGARCH-specific 128-bit wide vector of 8 packed i16.","LOONGARCH-specific 256-bit wide vector of 8 packed i32.","LOONGARCH-specific 128-bit wide vector of 8 packed u16.","LOONGARCH-specific 256-bit wide vector of 8 packed u32.","Generates the trap instruction BREAK","Generates the trap instruction BREAK","Syscall to be used whenever the <em>assert expression produces </em>…","x-th thread-block dimension.","y-th thread-block dimension.","z-th thread-block dimension.","x-th thread-block index.","y-th thread-block index.","z-th thread-block index.","x-th block-grid dimension.","y-th block-grid dimension.","z-th block-grid dimension.","Synchronizes all threads in the block.","x-th thread index.","y-th thread index.","z-th thread index.","Free previously dynamically allocated memory.","Allocate memory dynamically from a fixed-size heap in …","Generates the trap instruction TRAP","Print formatted output from a kernel to a host-side output …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Generates the trap instruction TRAP","Vector abs.","Vector abss.","Vector add.","Vector addc.","Vector Add Extended","Vector adds.","Vector All Elements Equal","Vector All Elements Greater or Equal","Vector All Elements Greater Than","Vector All In","Vector All Elements Less Than or Equal","Vector All Elements Less Than","All Elements Not a Number","Vector All Elements Not Equal","All Elements Not Greater Than or Equal","All Elements Not Greater Than","All Elements Not Less Than or Equal","All Elements Not Less Than","All Elements Numeric","Vector and.","Vector andc.","Vector All Elements Equal","Vector Any Element Greater or Equal","Vector Any Element Greater Than","Vector Any Element Less Than or Equal","Vector Any Element Less Than","Any Elements Not a Number","Vector Any Elements Not Equal","Any Elements Not Greater Than or Equal","Any Elements Not Greater Than","Any Elements Not Less Than or Equal","Any Elements Not Less Than","Any Elements Numeric","Any Element Out of Bounds","Vector avg.","Vector ceil.","Vector cmpb.","Vector cmpeq.","Vector cmpge.","Vector cmpgt.","Vector cmple.","Vector cmplt.","Vector Compare Not Equal","Vector Count Leading Zeros","Vector Convert to Floating-Point","Vector Convert to Signed Integer","Vector Convert to Signed Integer","Vector expte.","Vector Extract","Vector floor.","Vector Insert","Vector Load Indexed.","Vector Load Element Indexed.","Vector Load Indexed Least Recently Used.","Vector Base-2 Logarithm Estimate","Vector Multiply Add","Vector Multiply Add Saturated","Vector max.","Vector Merge Even","Vector Merge High","Vector Merge Low","Vector Merge Odd","Move From Vector Status and Control Register.","Vector min.","Vector Multiply Low and Add Unsigned Half Word","Vector Multiply Round and Add Saturated","Vector Multiply Sum","Vector Multiply Sum Saturated","Vector Multiply","Vector Multiply Even","Vector Multiply Odd","Vector NAND","Vector Negative Multiply Subtract","Vector nor.","Vector or.","Vector OR with Complement","Vector Pack","Vector Pack Saturated","Vector Pack Saturated Unsigned","Vector permute.","Vector Rotate Left","Vector Round","Vector Select","Vector Shift Left","Vector Shift Left Double","Vector Shift Left Double by Words","Vector Shift Left Long","Vector Shift Left by Octets","Vector Shift Left Variable","Vector Splat","Vector Splat to Signed Halfword","Vector Splat to Signed Word","Vector Splat to Signed Byte","Vector Splat to Unsigned Halfword","Vector Splat to Unsigned Word","Vector Splat to Unsigned Byte","Vector splats.","Vector Shift Right","Vector Shift Right Algebraic","Vector Shift Right Long","Vector Shift Right by Octets","Vector Shift Right Variable","Vector Store Indexed","Vector Store Element Indexed","Vector Store Indexed Least Recently Used","Vector sub.","Vector Subtract Carryout","Vector subs.","Vector Sum Across Partial (1/2) Saturated","Vector Sum Across Partial (1/4) Saturated","Vector Unpack High","Vector Unpack Low","VSX Unaligned Load","Vector xor.","VSX Unaligned Store","Vector permute.","PowerPC-specific 128-bit wide vector mask of sixteen …","PowerPC-specific 128-bit wide vector mask of four packed …","PowerPC-specific 128-bit wide vector mask of two i64","PowerPC-specific 128-bit wide vector mask of eight packed …","PowerPC-specific 128-bit wide vector of two packed f64","PowerPC-specific 128-bit wide vector of four packed f32","PowerPC-specific 128-bit wide vector of sixteen packed i8","PowerPC-specific 128-bit wide vector of four packed i32","PowerPC-specific 128-bit wide vector of two packed i64","PowerPC-specific 128-bit wide vector of eight packed i16","PowerPC-specific 128-bit wide vector of sixteen packed u8","PowerPC-specific 128-bit wide vector of four packed u32","PowerPC-specific 128-bit wide vector of two packed u64","PowerPC-specific 128-bit wide vector of eight packed u16","Generates the trap instruction TRAP","Vector abs.","Vector abss.","Vector add.","Vector addc.","Vector Add Extended","Vector adds.","Vector All Elements Equal","Vector All Elements Greater or Equal","Vector All Elements Greater Than","Vector All In","Vector All Elements Less Than or Equal","Vector All Elements Less Than","All Elements Not a Number","Vector All Elements Not Equal","All Elements Not Greater Than or Equal","All Elements Not Greater Than","All Elements Not Less Than or Equal","All Elements Not Less Than","All Elements Numeric","Vector and.","Vector andc.","Vector All Elements Equal","Vector Any Element Greater or Equal","Vector Any Element Greater Than","Vector Any Element Less Than or Equal","Vector Any Element Less Than","Any Elements Not a Number","Vector Any Elements Not Equal","Any Elements Not Greater Than or Equal","Any Elements Not Greater Than","Any Elements Not Less Than or Equal","Any Elements Not Less Than","Any Elements Numeric","Any Element Out of Bounds","Vector avg.","Vector ceil.","Vector cmpb.","Vector cmpeq.","Vector cmpge.","Vector cmpgt.","Vector cmple.","Vector cmplt.","Vector Compare Not Equal","Vector Count Leading Zeros","Vector Convert to Floating-Point","Vector Convert to Signed Integer","Vector Convert to Signed Integer","Vector expte.","Vector Extract","Vector floor.","Vector Insert","Vector Load Indexed.","Vector Load Element Indexed.","Vector Load Indexed Least Recently Used.","Vector Base-2 Logarithm Estimate","Vector Multiply Add","Vector Multiply Add Saturated","Vector max.","Vector Merge Even","Vector Merge High","Vector Merge Low","Vector Merge Odd","Move From Vector Status and Control Register.","Vector min.","Vector Multiply Low and Add Unsigned Half Word","Vector Multiply Round and Add Saturated","Vector Multiply Sum","Vector Multiply Sum Saturated","Vector Multiply","Vector Multiply Even","Vector Multiply Odd","Vector NAND","Vector Negative Multiply Subtract","Vector nor.","Vector or.","Vector OR with Complement","Vector Pack","Vector Pack Saturated","Vector Pack Saturated Unsigned","Vector permute.","Vector Rotate Left","Vector Round","Vector Select","Vector Shift Left","Vector Shift Left Double","Vector Shift Left Double by Words","Vector Shift Left Long","Vector Shift Left by Octets","Vector Shift Left Variable","Vector Splat","Vector Splat to Signed Halfword","Vector Splat to Signed Word","Vector Splat to Signed Byte","Vector Splat to Unsigned Halfword","Vector Splat to Unsigned Word","Vector Splat to Unsigned Byte","Vector splats.","Vector Shift Right","Vector Shift Right Algebraic","Vector Shift Right Long","Vector Shift Right by Octets","Vector Shift Right Variable","Vector Store Indexed","Vector Store Element Indexed","Vector Store Indexed Least Recently Used","Vector sub.","Vector Subtract Carryout","Vector subs.","Vector Sum Across Partial (1/2) Saturated","Vector Sum Across Partial (1/4) Saturated","Vector Unpack High","Vector Unpack Low","VSX Unaligned Load","Vector Load with Length","Vector xor.","VSX Unaligned Store","Vector Store with Length","Vector permute.","PowerPC-specific 128-bit wide vector mask of sixteen …","PowerPC-specific 128-bit wide vector mask of four packed …","PowerPC-specific 128-bit wide vector mask of two i64","PowerPC-specific 128-bit wide vector mask of eight packed …","PowerPC-specific 128-bit wide vector of two packed f64","PowerPC-specific 128-bit wide vector of four packed f32","PowerPC-specific 128-bit wide vector of sixteen packed i8","PowerPC-specific 128-bit wide vector of four packed i32","PowerPC-specific 128-bit wide vector of two packed i64","PowerPC-specific 128-bit wide vector of eight packed i16","PowerPC-specific 128-bit wide vector of sixteen packed u8","PowerPC-specific 128-bit wide vector of four packed u32","PowerPC-specific 128-bit wide vector of two packed u64","PowerPC-specific 128-bit wide vector of eight packed u16","Adds packed 16-bit signed numbers discarding overflow bits","Adds packed 8-bit signed numbers discarding overflow bits","AES final round decryption instruction for RV32.","AES middle round decryption instruction for RV32.","AES final round encryption instruction for RV32.","AES middle round encryption instruction for RV32 with.","Carry-less multiply (low-part)","Carry-less multiply (high-part)","Carry-less multiply (reversed)","Count the number of redundant sign bits of the packed …","Count the number of redundant sign bits of the packed …","Count the number of redundant sign bits of the packed …","Count the number of leading zero bits of the packed 16-bit …","Count the number of leading zero bits of the packed 32-bit …","Count the number of leading zero bits of the packed 8-bit …","Compare equality for packed 16-bit elements","Compare equality for packed 8-bit elements","Cross adds and subtracts packed 16-bit signed numbers …","Cross subtracts and adds packed 16-bit signed numbers …","Generates the FENCE.I instruction","Reads the floating-point rounding mode register frm","Hypervisor memory management fence for guest physical …","Hypervisor memory management fence for all virtual …","Hypervisor memory management fence for guest physical …","Hypervisor memory management fence for given virtual …","Hypervisor memory management fence for given guest virtual …","Hypervisor memory management fence for all guest address …","Hypervisor memory management fence for given guest address …","Hypervisor memory management fence for given guest virtual …","Invalidate hypervisor translation cache for guest physical …","Invalidate hypervisor translation cache for all virtual …","Invalidate hypervisor translation cache for guest physical …","Invalidate hypervisor translation cache for given virtual …","Invalidate hypervisor translation cache for given guest …","Invalidate hypervisor translation cache for all guest …","Invalidate hypervisor translation cache for given guest …","Invalidate hypervisor translation cache for given guest …","Loads virtual machine memory by signed byte integer","Loads virtual machine memory by unsigned byte integer","Loads virtual machine memory by signed half integer","Loads virtual machine memory by unsigned half integer","Loads virtual machine memory by signed word integer","Accesses virtual machine instruction by unsigned half …","Accesses virtual machine instruction by unsigned word …","Stores virtual machine memory by byte integer","Stores virtual machine memory by half integer","Stores virtual machine memory by word integer","Compute the absolute value of packed 16-bit signed integers","Compute the absolute value of packed 8-bit signed integers","Adds packed 16-bit signed numbers saturating at the …","Adds packed 8-bit signed numbers saturating at the …","Adds signed lower 16-bit content of two registers with Q15 …","Cross adds and subtracts packed 16-bit signed numbers …","Cross subtracts and adds packed 16-bit signed numbers …","Logical left shift packed 16-bit elements saturating at …","Logical left shift packed 8-bit elements saturating at …","Logical saturating left then arithmetic right shift packed …","Logical saturating left then arithmetic right shift packed …","Logical saturating left then arithmetic right shift packed …","Logical saturating left then arithmetic right shift packed …","Straight adds and subtracts packed 16-bit signed numbers …","Straight subtracts and adds packed 16-bit signed numbers …","Subtracts packed 16-bit signed numbers saturating at the …","Subtracts packed 8-bit signed numbers saturating at the …","Subtracts signed lower 16-bit content of two registers …","Generates the NOP instruction","Bitwise OR-Combine byte granule","Generates the PAUSE instruction","Calculate the sum of absolute difference of unsigned 8-bit …","Calculate and accumulate the sum of absolute difference of …","Pack two 16-bit data from bottom and top half from 32-bit …","Pack two 16-bit data from top and bottom half from 32-bit …","Halves the sum of packed 16-bit signed numbers dropping …","Halves the sum of packed 8-bit signed numbers dropping …","Cross halves of adds and subtracts packed 16-bit signed …","Cross halves of subtracts and adds packed 16-bit signed …","Straight halves of adds and subtracts packed 16-bit signed …","Straight halves of subtracts and adds packed 16-bit signed …","Halves the subtraction result of packed 16-bit signed …","Halves the subtraction result of packed 8-bit signed …","Compare whether 16-bit packed signed integers are less …","Compare whether 8-bit packed signed integers are less than …","Compare whether 16-bit packed signed integers are less …","Compare whether 8-bit packed signed integers are less than …","Generates the SFENCE.INVAL.IR instruction","Supervisor memory management fence for given virtual …","Supervisor memory management fence for all address spaces …","Supervisor memory management fence for given address space","Supervisor memory management fence for given virtual …","Generates the SFENCE.W.INVAL instruction","Implements the Sigma0 transformation function as used in …","Implements the Sigma1 transformation function as used in …","Implements the Sum0 transformation function as used in the …","Implements the Sum1 transformation function as used in the …","Implements the high half of the Sigma0 transformation as …","Implements the low half of the Sigma0 transformation as …","Implements the high half of the Sigma1 transformation as …","Implements the low half of the Sigma1 transformation as …","Implements the Sum0 transformation as used in the …","Implements the Sum1 transformation as used in the …","Invalidate supervisor translation cache for given virtual …","Invalidate supervisor translation cache for all address …","Invalidate supervisor translation cache for given address …","Invalidate supervisor translation cache for given virtual …","Logical left shift packed 16-bit elements discarding …","Logical left shift packed 8-bit elements discarding …","Implements the P0 transformation function as used in the …","Implements the P1 transformation function as used in the …","Accelerates the block encrypt/decrypt operation of the SM4 …","Accelerates the Key Schedule operation of the SM4 block …","Multiply signed 8-bit elements and add 16-bit elements on …","Multiply signed to unsigned 8-bit and add 16-bit elements …","Get maximum values from 16-bit packed signed integers","Get maximum values from 8-bit packed signed integers","Get minimum values from 16-bit packed signed integers","Get minimum values from 8-bit packed signed integers","Arithmetic right shift packed 16-bit elements without …","Arithmetic right shift packed 16-bit elements with …","Arithmetic right shift packed 8-bit elements without …","Arithmetic right shift packed 8-bit elements with rounding …","Logical right shift packed 16-bit elements without …","Logical right shift packed 16-bit elements with rounding up","Logical right shift packed 8-bit elements without rounding …","Logical right shift packed 8-bit elements with rounding up","Straight adds and subtracts packed 16-bit signed numbers …","Straight subtracts and adds packed 16-bit signed numbers …","Subtracts packed 16-bit signed numbers discarding …","Subtracts packed 8-bit signed numbers discarding overflow …","Unpack first and zeroth into two 16-bit signed halfwords …","Unpack second and zeroth into two 16-bit signed halfwords …","Unpack third and zeroth into two 16-bit signed halfwords …","Unpack third and first into two 16-bit signed halfwords in …","Unpack third and second into two 16-bit signed halfwords …","Swap the 16-bit halfwords within each 32-bit word of a …","Swap the 8-bit bytes within each 16-bit halfword of a …","Compare whether 16-bit packed unsigned integers are less …","Compare whether 8-bit packed unsigned integers are less …","Compare whether 16-bit packed unsigned integers are less …","Compare whether 8-bit packed unsigned integers are less …","Adds packed 16-bit unsigned numbers saturating at the …","Adds packed 8-bit unsigned numbers saturating at the …","Adds signed lower 16-bit content of two registers with U16 …","Cross adds and subtracts packed 16-bit unsigned numbers …","Cross subtracts and adds packed 16-bit unsigned numbers …","Straight adds and subtracts packed 16-bit unsigned …","Straight subtracts and adds packed 16-bit unsigned …","Subtracts packed 16-bit unsigned numbers saturating at …","Subtracts packed 8-bit unsigned numbers saturating at the …","Subtracts signed lower 16-bit content of two registers …","Multiply unsigned 8-bit elements and add 16-bit elements …","Get maximum values from 16-bit packed unsigned integers","Get maximum values from 8-bit packed unsigned integers","Get minimum values from 16-bit packed unsigned integers","Get minimum values from 8-bit packed unsigned integers","Place odd and even bits of the source word into …","Halves the sum of packed 16-bit unsigned numbers dropping …","Halves the sum of packed 8-bit unsigned numbers dropping …","Cross halves of adds and subtracts packed 16-bit unsigned …","Cross halves of subtracts and adds packed 16-bit unsigned …","Straight halves of adds and subtracts packed 16-bit …","Straight halves of subtracts and adds packed 16-bit …","Halves the subtraction result of packed 16-bit unsigned …","Halves the subtraction result of packed 8-bit unsigned …","Generates the WFI instruction","Nibble-wise lookup of indicies into a vector.","Byte-wise lookup of indicies into a vector in registers.","Place upper/lower halves of the source register into …","Unpack first and zeroth into two 16-bit unsigned halfwords …","Unpack second and zeroth into two 16-bit unsigned …","Unpack third and zeroth into two 16-bit unsigned halfwords …","Unpack third and first into two 16-bit unsigned halfwords …","Unpack third and second into two 16-bit unsigned halfwords …","Adds packed 16-bit signed numbers discarding overflow bits","Adds packed 8-bit signed numbers discarding overflow bits","AES final round decryption instruction for RV64.","AES middle round decryption instruction for RV64.","AES final round encryption instruction for RV64.","AES middle round encryption instruction for RV64.","This instruction accelerates the inverse MixColumns step …","This instruction implements part of the KeySchedule …","This instruction implements part of the KeySchedule …","Carry-less multiply (low-part)","Carry-less multiply (high-part)","Carry-less multiply (reversed)","Count the number of redundant sign bits of the packed …","Count the number of redundant sign bits of the packed …","Count the number of redundant sign bits of the packed …","Count the number of leading zero bits of the packed 16-bit …","Count the number of leading zero bits of the packed 32-bit …","Count the number of leading zero bits of the packed 8-bit …","Compare equality for packed 16-bit elements","Compare equality for packed 8-bit elements","Cross adds and subtracts packed 16-bit signed numbers …","Cross subtracts and adds packed 16-bit signed numbers …","Generates the FENCE.I instruction","Reads the floating-point rounding mode register frm","Hypervisor memory management fence for guest physical …","Hypervisor memory management fence for all virtual …","Hypervisor memory management fence for guest physical …","Hypervisor memory management fence for given virtual …","Hypervisor memory management fence for given guest virtual …","Hypervisor memory management fence for all guest address …","Hypervisor memory management fence for given guest address …","Hypervisor memory management fence for given guest virtual …","Invalidate hypervisor translation cache for guest physical …","Invalidate hypervisor translation cache for all virtual …","Invalidate hypervisor translation cache for guest physical …","Invalidate hypervisor translation cache for given virtual …","Invalidate hypervisor translation cache for given guest …","Invalidate hypervisor translation cache for all guest …","Invalidate hypervisor translation cache for given guest …","Invalidate hypervisor translation cache for given guest …","Loads virtual machine memory by signed byte integer","Loads virtual machine memory by unsigned byte integer","Loads virtual machine memory by double integer","Loads virtual machine memory by signed half integer","Loads virtual machine memory by unsigned half integer","Loads virtual machine memory by signed word integer","Loads virtual machine memory by unsigned word integer","Accesses virtual machine instruction by unsigned half …","Accesses virtual machine instruction by unsigned word …","Stores virtual machine memory by byte integer","Stores virtual machine memory by double integer","Stores virtual machine memory by half integer","Stores virtual machine memory by word integer","Compute the absolute value of packed 16-bit signed integers","Compute the absolute value of packed 8-bit signed integers","Adds packed 16-bit signed numbers saturating at the …","Adds packed 8-bit signed numbers saturating at the …","Adds signed lower 16-bit content of two registers with Q15 …","Cross adds and subtracts packed 16-bit signed numbers …","Cross subtracts and adds packed 16-bit signed numbers …","Logical left shift packed 16-bit elements saturating at …","Logical left shift packed 8-bit elements saturating at …","Logical saturating left then arithmetic right shift packed …","Logical saturating left then arithmetic right shift packed …","Logical saturating left then arithmetic right shift packed …","Logical saturating left then arithmetic right shift packed …","Straight adds and subtracts packed 16-bit signed numbers …","Straight subtracts and adds packed 16-bit signed numbers …","Subtracts packed 16-bit signed numbers saturating at the …","Subtracts packed 8-bit signed numbers saturating at the …","Subtracts signed lower 16-bit content of two registers …","Generates the NOP instruction","Bitwise OR-Combine byte granule","Generates the PAUSE instruction","Calculate the sum of absolute difference of unsigned 8-bit …","Calculate and accumulate the sum of absolute difference of …","Pack two 16-bit data from bottom and top half from 32-bit …","Pack two 16-bit data from top and bottom half from 32-bit …","Halves the sum of packed 16-bit signed numbers dropping …","Halves the sum of packed 8-bit signed numbers dropping …","Cross halves of adds and subtracts packed 16-bit signed …","Cross halves of subtracts and adds packed 16-bit signed …","Straight halves of adds and subtracts packed 16-bit signed …","Straight halves of subtracts and adds packed 16-bit signed …","Halves the subtraction result of packed 16-bit signed …","Halves the subtraction result of packed 8-bit signed …","Compare whether 16-bit packed signed integers are less …","Compare whether 8-bit packed signed integers are less than …","Compare whether 16-bit packed signed integers are less …","Compare whether 8-bit packed signed integers are less than …","Generates the SFENCE.INVAL.IR instruction","Supervisor memory management fence for given virtual …","Supervisor memory management fence for all address spaces …","Supervisor memory management fence for given address space","Supervisor memory management fence for given virtual …","Generates the SFENCE.W.INVAL instruction","Implements the Sigma0 transformation function as used in …","Implements the Sigma1 transformation function as used in …","Implements the Sum0 transformation function as used in the …","Implements the Sum1 transformation function as used in the …","Implements the Sigma0 transformation function as used in …","Implements the Sigma1 transformation function as used in …","Implements the Sum0 transformation function as used in the …","Implements the Sum1 transformation function as used in the …","Invalidate supervisor translation cache for given virtual …","Invalidate supervisor translation cache for all address …","Invalidate supervisor translation cache for given address …","Invalidate supervisor translation cache for given virtual …","Logical left shift packed 16-bit elements discarding …","Logical left shift packed 8-bit elements discarding …","Implements the P0 transformation function as used in the …","Implements the P1 transformation function as used in the …","Accelerates the block encrypt/decrypt operation of the SM4 …","Accelerates the Key Schedule operation of the SM4 block …","Multiply signed 8-bit elements and add 16-bit elements on …","Multiply signed to unsigned 8-bit and add 16-bit elements …","Get maximum values from 16-bit packed signed integers","Get maximum values from 8-bit packed signed integers","Get minimum values from 16-bit packed signed integers","Get minimum values from 8-bit packed signed integers","Arithmetic right shift packed 16-bit elements without …","Arithmetic right shift packed 16-bit elements with …","Arithmetic right shift packed 8-bit elements without …","Arithmetic right shift packed 8-bit elements with rounding …","Logical right shift packed 16-bit elements without …","Logical right shift packed 16-bit elements with rounding up","Logical right shift packed 8-bit elements without rounding …","Logical right shift packed 8-bit elements with rounding up","Straight adds and subtracts packed 16-bit signed numbers …","Straight subtracts and adds packed 16-bit signed numbers …","Subtracts packed 16-bit signed numbers discarding …","Subtracts packed 8-bit signed numbers discarding overflow …","Unpack first and zeroth into two 16-bit signed halfwords …","Unpack second and zeroth into two 16-bit signed halfwords …","Unpack third and zeroth into two 16-bit signed halfwords …","Unpack third and first into two 16-bit signed halfwords in …","Unpack third and second into two 16-bit signed halfwords …","Swap the 16-bit halfwords within each 32-bit word of a …","Swap the 8-bit bytes within each 16-bit halfword of a …","Compare whether 16-bit packed unsigned integers are less …","Compare whether 8-bit packed unsigned integers are less …","Compare whether 16-bit packed unsigned integers are less …","Compare whether 8-bit packed unsigned integers are less …","Adds packed 16-bit unsigned numbers saturating at the …","Adds packed 8-bit unsigned numbers saturating at the …","Adds signed lower 16-bit content of two registers with U16 …","Cross adds and subtracts packed 16-bit unsigned numbers …","Cross subtracts and adds packed 16-bit unsigned numbers …","Straight adds and subtracts packed 16-bit unsigned …","Straight subtracts and adds packed 16-bit unsigned …","Subtracts packed 16-bit unsigned numbers saturating at …","Subtracts packed 8-bit unsigned numbers saturating at the …","Subtracts signed lower 16-bit content of two registers …","Multiply unsigned 8-bit elements and add 16-bit elements …","Get maximum values from 16-bit packed unsigned integers","Get maximum values from 8-bit packed unsigned integers","Get minimum values from 16-bit packed unsigned integers","Get minimum values from 8-bit packed unsigned integers","Halves the sum of packed 16-bit unsigned numbers dropping …","Halves the sum of packed 8-bit unsigned numbers dropping …","Cross halves of adds and subtracts packed 16-bit unsigned …","Cross halves of subtracts and adds packed 16-bit unsigned …","Straight halves of adds and subtracts packed 16-bit …","Straight halves of subtracts and adds packed 16-bit …","Halves the subtraction result of packed 16-bit unsigned …","Halves the subtraction result of packed 8-bit unsigned …","Generates the WFI instruction","Nibble-wise lookup of indicies into a vector.","Byte-wise lookup of indicies into a vector in registers.","Unpack first and zeroth into two 16-bit unsigned halfwords …","Unpack second and zeroth into two 16-bit unsigned …","Unpack third and zeroth into two 16-bit unsigned halfwords …","Unpack third and first into two 16-bit unsigned halfwords …","Unpack third and second into two 16-bit unsigned halfwords …","Materializes a SIMD value from the provided operands.","Calculates the absolute value of each lane of a 128-bit …","Lane-wise addition of two 128-bit vectors interpreted as …","Lane-wise rounding to the nearest integral value not …","Converts a 128-bit vector interpreted as four 32-bit …","Converts a 128-bit vector interpreted as four 32-bit …","Conversion of the two double-precision floating point …","Lane-wise division of two 128-bit vectors interpreted as …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 4 …","Lane-wise rounding to the nearest integral value not …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Calculates the lane-wise minimum of two 128-bit vectors …","Calculates the lane-wise minimum of two 128-bit vectors …","Lane-wise multiplication of two 128-bit vectors …","Compares two 128-bit vectors as if they were two vectors …","Lane-wise rounding to the nearest integral value; if two …","Negates each lane of a 128-bit vector interpreted as four …","Lane-wise maximum value defined as a &lt; b ? b : a","Lane-wise minimum value defined as b &lt; a ? b : a","Computes a * b + c with either one rounding or two …","A relaxed version of f32x4_max which is either f32x4_max or","A relaxed version of f32x4_min which is either f32x4_min or","Computes -a * b + c with either one rounding or two …","Replaces a lane from a 128-bit vector interpreted as 4 …","Creates a vector with identical lanes.","Calculates the square root of each lane of a 128-bit …","Lane-wise subtraction of two 128-bit vectors interpreted …","Lane-wise rounding to the nearest integral value with the …","Materializes a SIMD value from the provided operands.","Calculates the absolute value of each lane of a 128-bit …","Lane-wise add of two 128-bit vectors interpreted as two …","Lane-wise rounding to the nearest integral value not …","Lane-wise conversion from integer to floating point.","Lane-wise conversion from integer to floating point.","Lane-wise divide of two 128-bit vectors interpreted as two …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 2 …","Lane-wise rounding to the nearest integral value not …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Calculates the lane-wise maximum of two 128-bit vectors …","Calculates the lane-wise minimum of two 128-bit vectors …","Lane-wise multiply of two 128-bit vectors interpreted as …","Compares two 128-bit vectors as if they were two vectors …","Lane-wise rounding to the nearest integral value; if two …","Negates each lane of a 128-bit vector interpreted as two …","Lane-wise maximum value defined as a &lt; b ? b : a","Lane-wise minimum value defined as b &lt; a ? b : a","Conversion of the two lower single-precision floating …","Computes a * b + c with either one rounding or two …","A relaxed version of f64x2_max which is either f64x2_max or","A relaxed version of f64x2_min which is either f64x2_min or","Computes -a * b + c with either one rounding or two …","Replaces a lane from a 128-bit vector interpreted as 2 …","Creates a vector with identical lanes.","Calculates the square root of each lane of a 128-bit …","Lane-wise subtract of two 128-bit vectors interpreted as …","Lane-wise rounding to the nearest integral value with the …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed eight …","Adds two 128-bit vectors as if they were two packed eight …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 8 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load eight 8-bit integers and sign extend each one to a …","Load eight 8-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise signed integers and returns the …","Compares lane-wise signed integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as eight 16-bit …","Lane-wise saturating rounding multiplication in Q15 format.","A relaxed dot-product instruction.","A relaxed version of v128_bitselect where this either …","A relaxed version of i16x8_relaxed_q15mulr where if both …","Replaces a lane from a 128-bit vector interpreted as 8 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed four …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Lane-wise multiply signed 16-bit integers in the two input …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 4 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load four 16-bit integers and sign extend each one to a …","Load four 16-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise signed integers and returns the …","Compares lane-wise signed integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as four 32-bit …","Similar to i16x8_relaxed_dot_i8x16_i7x16 except that the …","A relaxed version of v128_bitselect where this either …","A relaxed version of i32x4_trunc_sat_f32x4(a) converts the …","A relaxed version of i32x4_trunc_sat_f64x2_zero(a) …","Replaces a lane from a 128-bit vector interpreted as 4 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Converts a 128-bit vector interpreted as four 32-bit …","Saturating conversion of the two double-precision floating …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed two …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Converts high half of the smaller lane vector to a larger …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 2 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load two 32-bit integers and sign extend each one to a …","Load two 32-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as two 64-bit signed …","A relaxed version of v128_bitselect where this either …","Replaces a lane from a 128-bit vector interpreted as 2 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed …","Adds two 128-bit vectors as if they were two packed …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 16 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise signed integers and returns the …","Compares lane-wise signed integers and returns the …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as sixteen 8-bit …","Count the number of bits set to one within each lane.","A relaxed version of v128_bitselect where this either …","A relaxed version of i8x16_swizzle(a s) which selects …","Replaces a lane from a 128-bit vector interpreted as 16 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Returns a new vector with lanes selected from the lanes of …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Returns a new vector with lanes selected from the lanes of …","Corresponding intrinsic to wasm’s memory.atomic.notify …","Corresponding intrinsic to wasm’s memory.atomic.wait32 …","Corresponding intrinsic to wasm’s memory.atomic.wait64 …","Corresponding intrinsic to wasm’s memory.grow instruction","Corresponding intrinsic to wasm’s memory.size instruction","Generates the throw instruction from the …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed eight …","Adds two 128-bit vectors as if they were two packed eight …","Returns true if all lanes are non-zero false otherwise.","Lane-wise rounding average.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 8 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load eight 8-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise unsigned integers and returns the …","Compares lane-wise unsigned integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Replaces a lane from a 128-bit vector interpreted as 8 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed four …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 4 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load four 16-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise unsigned integers and returns the …","Compares lane-wise unsigned integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","A relaxed version of u32x4_trunc_sat_f32x4(a) converts the …","A relaxed version of u32x4_trunc_sat_f64x2_zero(a) …","Replaces a lane from a 128-bit vector interpreted as 4 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Converts a 128-bit vector interpreted as four 32-bit …","Saturating conversion of the two double-precision floating …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed two …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 2 …","Load two 32-bit integers and zero extend each one to a …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","Replaces a lane from a 128-bit vector interpreted as 2 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed …","Adds two 128-bit vectors as if they were two packed …","Returns true if all lanes are non-zero false otherwise.","Lane-wise rounding average.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 16 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise unsigned integers and returns the …","Compares lane-wise unsigned integers and returns the …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Count the number of bits set to one within each lane.","Replaces a lane from a 128-bit vector interpreted as 16 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Returns a new vector with lanes selected from the lanes of …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Returns a new vector with lanes selected from the lanes of …","Generates the unreachable instruction which causes an …","WASM-specific 128-bit wide SIMD vector type.","Performs a bitwise and of the two input 128-bit vectors …","Bitwise AND of bits of a and the logical inverse of bits …","Returns true if any bit in a is set or false otherwise.","Use the bitmask in c to select bits from v1 when 1 and v2 …","Loads a v128 vector from the given heap address.","Loads a 16-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Loads a 32-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Load a 32-bit element into the low bits of the vector and …","Loads a 64-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Load a 64-bit element into the low bits of the vector and …","Loads an 8-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Flips each bit of the 128-bit input vector.","Performs a bitwise or of the two input 128-bit vectors …","Stores a v128 vector to the given heap address.","Stores the 16-bit value from lane L of v into m","Stores the 32-bit value from lane L of v into m","Stores the 64-bit value from lane L of v into m","Stores the 8-bit value from lane L of v into m","Performs a bitwise xor of the two input 128-bit vectors …","Materializes a SIMD value from the provided operands.","Calculates the absolute value of each lane of a 128-bit …","Lane-wise addition of two 128-bit vectors interpreted as …","Lane-wise rounding to the nearest integral value not …","Converts a 128-bit vector interpreted as four 32-bit …","Converts a 128-bit vector interpreted as four 32-bit …","Conversion of the two double-precision floating point …","Lane-wise division of two 128-bit vectors interpreted as …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 4 …","Lane-wise rounding to the nearest integral value not …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Calculates the lane-wise minimum of two 128-bit vectors …","Calculates the lane-wise minimum of two 128-bit vectors …","Lane-wise multiplication of two 128-bit vectors …","Compares two 128-bit vectors as if they were two vectors …","Lane-wise rounding to the nearest integral value; if two …","Negates each lane of a 128-bit vector interpreted as four …","Lane-wise maximum value defined as a &lt; b ? b : a","Lane-wise minimum value defined as b &lt; a ? b : a","Computes a * b + c with either one rounding or two …","A relaxed version of f32x4_max which is either f32x4_max or","A relaxed version of f32x4_min which is either f32x4_min or","Computes -a * b + c with either one rounding or two …","Replaces a lane from a 128-bit vector interpreted as 4 …","Creates a vector with identical lanes.","Calculates the square root of each lane of a 128-bit …","Lane-wise subtraction of two 128-bit vectors interpreted …","Lane-wise rounding to the nearest integral value with the …","Materializes a SIMD value from the provided operands.","Calculates the absolute value of each lane of a 128-bit …","Lane-wise add of two 128-bit vectors interpreted as two …","Lane-wise rounding to the nearest integral value not …","Lane-wise conversion from integer to floating point.","Lane-wise conversion from integer to floating point.","Lane-wise divide of two 128-bit vectors interpreted as two …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 2 …","Lane-wise rounding to the nearest integral value not …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Calculates the lane-wise maximum of two 128-bit vectors …","Calculates the lane-wise minimum of two 128-bit vectors …","Lane-wise multiply of two 128-bit vectors interpreted as …","Compares two 128-bit vectors as if they were two vectors …","Lane-wise rounding to the nearest integral value; if two …","Negates each lane of a 128-bit vector interpreted as two …","Lane-wise maximum value defined as a &lt; b ? b : a","Lane-wise minimum value defined as b &lt; a ? b : a","Conversion of the two lower single-precision floating …","Computes a * b + c with either one rounding or two …","A relaxed version of f64x2_max which is either f64x2_max or","A relaxed version of f64x2_min which is either f64x2_min or","Computes -a * b + c with either one rounding or two …","Replaces a lane from a 128-bit vector interpreted as 2 …","Creates a vector with identical lanes.","Calculates the square root of each lane of a 128-bit …","Lane-wise subtract of two 128-bit vectors interpreted as …","Lane-wise rounding to the nearest integral value with the …","Returns the argument unchanged.","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed eight …","Adds two 128-bit vectors as if they were two packed eight …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 8 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load eight 8-bit integers and sign extend each one to a …","Load eight 8-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise signed integers and returns the …","Compares lane-wise signed integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as eight 16-bit …","Lane-wise saturating rounding multiplication in Q15 format.","A relaxed dot-product instruction.","A relaxed version of v128_bitselect where this either …","A relaxed version of i16x8_relaxed_q15mulr where if both …","Replaces a lane from a 128-bit vector interpreted as 8 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed four …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Lane-wise multiply signed 16-bit integers in the two input …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 4 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load four 16-bit integers and sign extend each one to a …","Load four 16-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise signed integers and returns the …","Compares lane-wise signed integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as four 32-bit …","Similar to i16x8_relaxed_dot_i8x16_i7x16 except that the …","A relaxed version of v128_bitselect where this either …","A relaxed version of i32x4_trunc_sat_f32x4(a) converts the …","A relaxed version of i32x4_trunc_sat_f64x2_zero(a) …","Replaces a lane from a 128-bit vector interpreted as 4 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Converts a 128-bit vector interpreted as four 32-bit …","Saturating conversion of the two double-precision floating …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed two …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Converts high half of the smaller lane vector to a larger …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 2 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load two 32-bit integers and sign extend each one to a …","Load two 32-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as two 64-bit signed …","A relaxed version of v128_bitselect where this either …","Replaces a lane from a 128-bit vector interpreted as 2 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed …","Adds two 128-bit vectors as if they were two packed …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 16 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise signed integers and returns the …","Compares lane-wise signed integers and returns the …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as sixteen 8-bit …","Count the number of bits set to one within each lane.","A relaxed version of v128_bitselect where this either …","A relaxed version of i8x16_swizzle(a s) which selects …","Replaces a lane from a 128-bit vector interpreted as 16 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Returns a new vector with lanes selected from the lanes of …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Returns a new vector with lanes selected from the lanes of …","Calls U::from(self).","Corresponding intrinsic to wasm’s memory.atomic.notify …","Corresponding intrinsic to wasm’s memory.atomic.wait32 …","Corresponding intrinsic to wasm’s memory.atomic.wait64 …","Corresponding intrinsic to wasm’s memory.grow instruction","Corresponding intrinsic to wasm’s memory.size instruction","Generates the throw instruction from the …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed eight …","Adds two 128-bit vectors as if they were two packed eight …","Returns true if all lanes are non-zero false otherwise.","Lane-wise rounding average.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 8 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load eight 8-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise unsigned integers and returns the …","Compares lane-wise unsigned integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Replaces a lane from a 128-bit vector interpreted as 8 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed four …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 4 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load four 16-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise unsigned integers and returns the …","Compares lane-wise unsigned integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","A relaxed version of u32x4_trunc_sat_f32x4(a) converts the …","A relaxed version of u32x4_trunc_sat_f64x2_zero(a) …","Replaces a lane from a 128-bit vector interpreted as 4 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Converts a 128-bit vector interpreted as four 32-bit …","Saturating conversion of the two double-precision floating …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed two …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 2 …","Load two 32-bit integers and zero extend each one to a …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","Replaces a lane from a 128-bit vector interpreted as 2 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed …","Adds two 128-bit vectors as if they were two packed …","Returns true if all lanes are non-zero false otherwise.","Lane-wise rounding average.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 16 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise unsigned integers and returns the …","Compares lane-wise unsigned integers and returns the …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Count the number of bits set to one within each lane.","Replaces a lane from a 128-bit vector interpreted as 16 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Returns a new vector with lanes selected from the lanes of …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Returns a new vector with lanes selected from the lanes of …","Generates the unreachable instruction which causes an …","WASM-specific 128-bit wide SIMD vector type.","Performs a bitwise and of the two input 128-bit vectors …","Bitwise AND of bits of a and the logical inverse of bits …","Returns true if any bit in a is set or false otherwise.","Use the bitmask in c to select bits from v1 when 1 and v2 …","Loads a v128 vector from the given heap address.","Loads a 16-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Loads a 32-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Load a 32-bit element into the low bits of the vector and …","Loads a 64-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Load a 64-bit element into the low bits of the vector and …","Loads an 8-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Flips each bit of the 128-bit input vector.","Performs a bitwise or of the two input 128-bit vectors …","Stores a v128 vector to the given heap address.","Stores the 16-bit value from lane L of v into m","Stores the 32-bit value from lane L of v into m","Stores the 64-bit value from lane L of v into m","Stores the 8-bit value from lane L of v into m","Performs a bitwise xor of the two input 128-bit vectors …","Materializes a SIMD value from the provided operands.","Calculates the absolute value of each lane of a 128-bit …","Lane-wise addition of two 128-bit vectors interpreted as …","Lane-wise rounding to the nearest integral value not …","Converts a 128-bit vector interpreted as four 32-bit …","Converts a 128-bit vector interpreted as four 32-bit …","Conversion of the two double-precision floating point …","Lane-wise division of two 128-bit vectors interpreted as …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 4 …","Lane-wise rounding to the nearest integral value not …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Calculates the lane-wise minimum of two 128-bit vectors …","Calculates the lane-wise minimum of two 128-bit vectors …","Lane-wise multiplication of two 128-bit vectors …","Compares two 128-bit vectors as if they were two vectors …","Lane-wise rounding to the nearest integral value; if two …","Negates each lane of a 128-bit vector interpreted as four …","Lane-wise maximum value defined as a &lt; b ? b : a","Lane-wise minimum value defined as b &lt; a ? b : a","Computes a * b + c with either one rounding or two …","A relaxed version of f32x4_max which is either f32x4_max or","A relaxed version of f32x4_min which is either f32x4_min or","Computes -a * b + c with either one rounding or two …","Replaces a lane from a 128-bit vector interpreted as 4 …","Creates a vector with identical lanes.","Calculates the square root of each lane of a 128-bit …","Lane-wise subtraction of two 128-bit vectors interpreted …","Lane-wise rounding to the nearest integral value with the …","Materializes a SIMD value from the provided operands.","Calculates the absolute value of each lane of a 128-bit …","Lane-wise add of two 128-bit vectors interpreted as two …","Lane-wise rounding to the nearest integral value not …","Lane-wise conversion from integer to floating point.","Lane-wise conversion from integer to floating point.","Lane-wise divide of two 128-bit vectors interpreted as two …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 2 …","Lane-wise rounding to the nearest integral value not …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Calculates the lane-wise maximum of two 128-bit vectors …","Calculates the lane-wise minimum of two 128-bit vectors …","Lane-wise multiply of two 128-bit vectors interpreted as …","Compares two 128-bit vectors as if they were two vectors …","Lane-wise rounding to the nearest integral value; if two …","Negates each lane of a 128-bit vector interpreted as two …","Lane-wise maximum value defined as a &lt; b ? b : a","Lane-wise minimum value defined as b &lt; a ? b : a","Conversion of the two lower single-precision floating …","Computes a * b + c with either one rounding or two …","A relaxed version of f64x2_max which is either f64x2_max or","A relaxed version of f64x2_min which is either f64x2_min or","Computes -a * b + c with either one rounding or two …","Replaces a lane from a 128-bit vector interpreted as 2 …","Creates a vector with identical lanes.","Calculates the square root of each lane of a 128-bit …","Lane-wise subtract of two 128-bit vectors interpreted as …","Lane-wise rounding to the nearest integral value with the …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed eight …","Adds two 128-bit vectors as if they were two packed eight …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 8 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load eight 8-bit integers and sign extend each one to a …","Load eight 8-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise signed integers and returns the …","Compares lane-wise signed integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as eight 16-bit …","Lane-wise saturating rounding multiplication in Q15 format.","A relaxed dot-product instruction.","A relaxed version of v128_bitselect where this either …","A relaxed version of i16x8_relaxed_q15mulr where if both …","Replaces a lane from a 128-bit vector interpreted as 8 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed four …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Lane-wise multiply signed 16-bit integers in the two input …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 4 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load four 16-bit integers and sign extend each one to a …","Load four 16-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise signed integers and returns the …","Compares lane-wise signed integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as four 32-bit …","Similar to i16x8_relaxed_dot_i8x16_i7x16 except that the …","A relaxed version of v128_bitselect where this either …","A relaxed version of i32x4_trunc_sat_f32x4(a) converts the …","A relaxed version of i32x4_trunc_sat_f64x2_zero(a) …","Replaces a lane from a 128-bit vector interpreted as 4 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Converts a 128-bit vector interpreted as four 32-bit …","Saturating conversion of the two double-precision floating …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed two …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Converts high half of the smaller lane vector to a larger …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 2 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load two 32-bit integers and sign extend each one to a …","Load two 32-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as two 64-bit signed …","A relaxed version of v128_bitselect where this either …","Replaces a lane from a 128-bit vector interpreted as 2 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Lane-wise wrapping absolute value.","Adds two 128-bit vectors as if they were two packed …","Adds two 128-bit vectors as if they were two packed …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 16 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise signed integers and returns the …","Compares lane-wise signed integers and returns the …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Negates a 128-bit vectors interpreted as sixteen 8-bit …","Count the number of bits set to one within each lane.","A relaxed version of v128_bitselect where this either …","A relaxed version of i8x16_swizzle(a s) which selects …","Replaces a lane from a 128-bit vector interpreted as 16 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Returns a new vector with lanes selected from the lanes of …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Returns a new vector with lanes selected from the lanes of …","Corresponding intrinsic to wasm’s memory.atomic.notify …","Corresponding intrinsic to wasm’s memory.atomic.wait32 …","Corresponding intrinsic to wasm’s memory.atomic.wait64 …","Corresponding intrinsic to wasm’s memory.grow instruction","Corresponding intrinsic to wasm’s memory.size instruction","Generates the throw instruction from the …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed eight …","Adds two 128-bit vectors as if they were two packed eight …","Returns true if all lanes are non-zero false otherwise.","Lane-wise rounding average.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 8 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load eight 8-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise unsigned integers and returns the …","Compares lane-wise unsigned integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Replaces a lane from a 128-bit vector interpreted as 8 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed four …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Integer extended pairwise addition producing extended …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 4 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Load four 16-bit integers and zero extend each one to a …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise unsigned integers and returns the …","Compares lane-wise unsigned integers and returns the …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","A relaxed version of u32x4_trunc_sat_f32x4(a) converts the …","A relaxed version of u32x4_trunc_sat_f64x2_zero(a) …","Replaces a lane from a 128-bit vector interpreted as 4 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Converts a 128-bit vector interpreted as four 32-bit …","Saturating conversion of the two double-precision floating …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed two …","Returns true if all lanes are non-zero false otherwise.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Converts high half of the smaller lane vector to a larger …","Converts low half of the smaller lane vector to a larger …","Lane-wise integer extended multiplication producing twice …","Lane-wise integer extended multiplication producing twice …","Extracts a lane from a 128-bit vector interpreted as 2 …","Load two 32-bit integers and zero extend each one to a …","Multiplies two 128-bit vectors as if they were two packed …","Compares two 128-bit vectors as if they were two vectors …","Replaces a lane from a 128-bit vector interpreted as 2 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Same as i8x16_shuffle except operates as if the inputs …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Materializes a SIMD value from the provided operands.","Adds two 128-bit vectors as if they were two packed …","Adds two 128-bit vectors as if they were two packed …","Returns true if all lanes are non-zero false otherwise.","Lane-wise rounding average.","Extracts the high bit for each lane in a and produce a …","Compares two 128-bit vectors as if they were two vectors …","Extracts a lane from a 128-bit vector interpreted as 16 …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares two 128-bit vectors as if they were two vectors …","Compares lane-wise unsigned integers and returns the …","Compares lane-wise unsigned integers and returns the …","Converts two input vectors into a smaller lane vector by …","Compares two 128-bit vectors as if they were two vectors …","Count the number of bits set to one within each lane.","Replaces a lane from a 128-bit vector interpreted as 16 …","Shifts each lane to the left by the specified number of …","Shifts each lane to the right by the specified number of …","Returns a new vector with lanes selected from the lanes of …","Creates a vector with identical lanes.","Subtracts two 128-bit vectors as if they were two packed …","Subtracts two 128-bit vectors as if they were two packed …","Returns a new vector with lanes selected from the lanes of …","Generates the unreachable instruction which causes an …","WASM-specific 128-bit wide SIMD vector type.","Performs a bitwise and of the two input 128-bit vectors …","Bitwise AND of bits of a and the logical inverse of bits …","Returns true if any bit in a is set or false otherwise.","Use the bitmask in c to select bits from v1 when 1 and v2 …","Loads a v128 vector from the given heap address.","Loads a 16-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Loads a 32-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Load a 32-bit element into the low bits of the vector and …","Loads a 64-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Load a 64-bit element into the low bits of the vector and …","Loads an 8-bit value from m and sets lane L of v to that …","Load a single element and splat to all lanes of a v128 …","Flips each bit of the 128-bit input vector.","Performs a bitwise or of the two input 128-bit vectors …","Stores a v128 vector to the given heap address.","Stores the 16-bit value from lane L of v into m","Stores the 32-bit value from lane L of v into m","Stores the 64-bit value from lane L of v into m","Stores the 8-bit value from lane L of v into m","Performs a bitwise xor of the two input 128-bit vectors …","Result of the cpuid instruction.","Equal (ordered non-signaling)","Equal (ordered signaling)","Equal (unordered non-signaling)","Equal (unordered signaling)","False (ordered non-signaling)","False (ordered signaling)","Greater-than-or-equal (ordered non-signaling)","Greater-than-or-equal (ordered signaling)","Greater-than (ordered non-signaling)","Greater-than (ordered signaling)","Less-than-or-equal (ordered non-signaling)","Less-than-or-equal (ordered signaling)","Less-than (ordered non-signaling)","Less-than (ordered signaling)","Not-equal (ordered non-signaling)","Not-equal (ordered signaling)","Not-equal (unordered non-signaling)","Not-equal (unordered signaling)","Not-greater-than-or-equal (unordered non-signaling)","Not-greater-than-or-equal (unordered signaling)","Not-greater-than (unordered non-signaling)","Not-greater-than (unordered signaling)","Not-less-than-or-equal (unordered non-signaling)","Not-less-than-or-equal (unordered signaling)","Not-less-than (unordered non-signaling)","Not-less-than (unordered signaling)","Ordered (non-signaling)","Ordered (signaling)","True (unordered non-signaling)","True (unordered signaling)","Unordered (non-signaling)","Unordered (signaling)","The _MM_CMPINT_ENUM type used to specify comparison …","Equal","False","Less-than-or-equal","Less-than","Not-equal","Not less-than-or-equal","Not less-than","True","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _MM_GET_EXCEPTION_STATE","See _mm_setcsr","See _mm_setcsr","See _MM_GET_FLUSH_ZERO_MODE","See _mm_setcsr","See _mm_setcsr","round up and do not suppress exceptions","use MXCSR.RC; see vendor::_MM_SET_ROUNDING_MODE","round down and do not suppress exceptions","use MXCSR.RC and suppress exceptions; see …","round to nearest and do not suppress exceptions","suppress exceptions","do not suppress exceptions","use MXCSR.RC and do not suppress exceptions; see …","round to nearest","round down","round up","truncate","truncate and do not suppress exceptions","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_prefetch.","See _mm_prefetch.","See _mm_prefetch.","See _mm_prefetch.","See _mm_prefetch.","See _mm_prefetch.","The MM_MANTISSA_NORM_ENUM type used to specify mantissa …","The MM_MANTISSA_SIGN_ENUM type used to specify mantissa …","interval [1 2)","interval [0.5 1)","interval [0.5 2)","interval [0.75 1.5)","DEST = NaN if sign(SRC) = 1","sign = sign(SRC)","sign = 0","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _MM_GET_EXCEPTION_MASK","See _mm_setcsr","See _mm_setcsr","The MM_PERM_ENUM type used to specify shuffle operations …","See _mm_setcsr","See _MM_GET_ROUNDING_MODE","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","A utility function for creating masks to use with Intel …","Transpose the 4x4 matrix formed by 4 rows of __m128 in …","<strong>Mask only</strong>: return the bit mask","For each character in a find if it is in b <em>(Default)</em>","The strings defined by a and b are equal","Search for the defined substring in the target","For each character in a determine if …","<strong>Index only</strong>: return the least significant bit <em>(Default)</em>","Negates results only before the end of the string","Do not negate results before the end of the string","<strong>Index only</strong>: return the most significant bit","Negates results","Do not negate results <em>(Default)</em>","String contains signed 8-bit characters","String contains unsigned 16-bit characters","String contains unsigned 8-bit characters <em>(Default)</em>","<strong>Mask only</strong>: return the byte mask","String contains unsigned 16-bit characters","Transaction abort due to the transaction using too much …","Transaction abort due to a memory conflict with another …","Transaction abort due to a debug trap.","Transaction explicitly aborted with xabort. The parameter …","Transaction abort in a inner nested transaction.","Transaction retry is possible.","Transaction successfully started.","XFEATURE_ENABLED_MASK for XCR","See __cpuid_count.","Returns the result of the cpuid instruction for a given …","Returns the highest-supported leaf (EAX) and sub-leaf (ECX…","128-bit wide set of four f32 types x86-specific","128-bit wide set of eight u16 types x86-specific","128-bit wide set of two f64 types x86-specific","128-bit wide integer vector type x86-specific","256-bit wide set of eight f32 types x86-specific","256-bit wide set of 16 u16 types x86-specific","256-bit wide set of four f64 types x86-specific","256-bit wide integer vector type x86-specific","512-bit wide set of sixteen f32 types x86-specific","512-bit wide set of 32 u16 types x86-specific","512-bit wide set of eight f64 types x86-specific","512-bit wide integer vector type x86-specific","The __mmask16 type used in AVX-512 intrinsics a 16-bit …","The __mmask32 type used in AVX-512 intrinsics a 32-bit …","The __mmask64 type used in AVX-512 intrinsics a 64-bit …","The __mmask8 type used in AVX-512 intrinsics a 8-bit …","Reads the current value of the processor’s time-stamp …","Adds unsigned 32-bit integers a and b with unsigned 8-bit …","Adds unsigned 32-bit integers a and b with unsigned 8-bit …","Bitwise logical AND of inverted a with b.","Extracts bits of a specified by control into the least …","Extracts bits in range [start start + length) from a into …","Returns the bit in position b of the memory addressed by p.","Returns the bit in position b of the memory addressed by p…","Returns the bit in position b of the memory addressed by p…","Returns the bit in position b of the memory addressed by p…","Clears all bits below the least significant zero bit of x.","Clears all bits below the least significant zero bit of x.","Sets all bits of x to 1 except for the least significant …","Sets all bits of x to 1 except for the least significant …","Sets the least significant zero bit of x and clears all …","Sets the least significant zero bit of x and clears all …","Sets the least significant zero bit of x and clears all …","Sets the least significant zero bit of x and clears all …","Sets the least significant zero bit of x.","Sets the least significant zero bit of x.","Sets all bits of x below the least significant one.","Sets all bits of x below the least significant one.","Extracts lowest set isolated bit.","Clears least significant bit and sets all other bits.","Clears least significant bit and sets all other bits.","Gets mask up to lowest set bit.","Resets the lowest set bit of x.","Returns an integer with the reversed byte order of x","Zeroes higher bits of a &gt;= index.","Restores the XMM MMX MXCSR and x87 FPU registers from …","Saves the x87 FPU MMX technology XMM and MXCSR …","Add 32-bit masks in a and b and store the result in k.","Add 64-bit masks in a and b and store the result in k.","Compute the bitwise AND of 16-bit masks a and b and store …","Compute the bitwise AND of 32-bit masks a and b and store …","Compute the bitwise AND of 64-bit masks a and b and store …","Compute the bitwise NOT of 16-bit masks a and then AND …","Compute the bitwise NOT of 32-bit masks a and then AND …","Compute the bitwise NOT of 64-bit masks a and then AND …","Compute the bitwise NOT of 16-bit mask a and store the …","Compute the bitwise NOT of 32-bit mask a and store the …","Compute the bitwise NOT of 64-bit mask a and store the …","Compute the bitwise OR of 16-bit masks a and b and store …","Compute the bitwise OR of 32-bit masks a and b and store …","Compute the bitwise OR of 64-bit masks a and b and store …","Compute the bitwise XNOR of 16-bit masks a and b and …","Compute the bitwise XNOR of 32-bit masks a and b and …","Compute the bitwise XNOR of 64-bit masks a and b and …","Compute the bitwise XOR of 16-bit masks a and b and store …","Compute the bitwise XOR of 32-bit masks a and b and store …","Compute the bitwise XOR of 64-bit masks a and b and store …","Load 32-bit mask from memory into k.","Load 64-bit mask from memory into k.","Counts the leading most significant zero bits.","Computes the absolute values of packed 16-bit integers in a…","Computes the absolute values of packed 32-bit integers in a…","Compute the absolute value of packed signed 64-bit …","Computes the absolute values of packed 8-bit integers in a.","Adds packed 16-bit integers in a and b.","Adds packed 32-bit integers in a and b.","Adds packed 64-bit integers in a and b.","Adds packed 8-bit integers in a and b.","Adds packed double-precision (64-bit) floating-point …","Adds packed single-precision (32-bit) floating-point …","Adds packed 16-bit integers in a and b using saturation.","Adds packed 8-bit integers in a and b using saturation.","Adds packed unsigned 16-bit integers in a and b using …","Adds packed unsigned 8-bit integers in a and b using …","Alternatively adds and subtracts packed double-precision …","Alternatively adds and subtracts packed single-precision …","Performs one round of an AES decryption flow on each …","Performs the last round of an AES decryption flow on each …","Performs one round of an AES encryption flow on each …","Performs the last round of an AES encryption flow on each …","Concatenate a and b into a 64-byte immediate result shift …","Concatenate a and b into a 64-byte immediate result shift …","Concatenates pairs of 16-byte blocks in a and b into a …","Computes the bitwise AND of a packed double-precision …","Computes the bitwise AND of packed single-precision …","Computes the bitwise AND of 256 bits (representing integer …","Computes the bitwise NOT of packed double-precision …","Computes the bitwise NOT of packed single-precision …","Computes the bitwise NOT of 256 bits (representing integer …","Averages packed unsigned 16-bit integers in a and b.","Averages packed unsigned 8-bit integers in a and b.","Considers the input b as packed 64-bit integers and c as …","Blends packed 16-bit integers from a and b using control …","Blends packed 32-bit integers from a and b using control …","Blends packed double-precision (64-bit) floating-point …","Blends packed single-precision (32-bit) floating-point …","Blends packed 8-bit integers from a and b using mask.","Blends packed double-precision (64-bit) floating-point …","Blends packed single-precision (32-bit) floating-point …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcasts 128 bits from memory (composed of 2 packed …","Broadcasts 128 bits from memory (composed of 4 packed …","Broadcasts a double-precision (64-bit) floating-point …","Broadcasts a single-precision (32-bit) floating-point …","Broadcasts the low packed 8-bit integer from a to all …","Broadcasts the low packed 32-bit integer from a to all …","Broadcast the low 8-bits from input mask k to all 64-bit …","Broadcast the low 16-bits from input mask k to all 32-bit …","Broadcasts the low packed 64-bit integer from a to all …","Broadcasts the low double-precision (64-bit) …","Broadcasts 128 bits of integer data from a to all 128-bit …","Broadcasts the low single-precision (32-bit) …","Broadcasts the low packed 16-bit integer from a to all …","Shifts 128-bit lanes in a left by imm8 bytes while …","Shifts 128-bit lanes in a right by imm8 bytes while …","Casts vector of type __m128d to type __m256d; the upper …","Casts vector of type __m256d to type __m128d.","Cast vector of type __m256d to type __m256.","Casts vector of type __m256d to type __m256i.","Casts vector of type __m128 to type __m256; the upper 128 …","Casts vector of type __m256 to type __m128.","Cast vector of type __m256 to type __m256d.","Casts vector of type __m256 to type __m256i.","Casts vector of type __m128i to type __m256i; the upper …","Casts vector of type __m256i to type __m256d.","Casts vector of type __m256i to type __m256.","Casts vector of type __m256i to type __m128i.","Rounds packed double-precision (64-bit) floating point …","Rounds packed single-precision (32-bit) floating point …","Performs a carry-less multiplication of two 64-bit …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compares packed double-precision (64-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compares packed single-precision (32-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compares packed 16-bit integers in a and b for equality.","Compare packed signed 16-bit integers in a and b for …","Compares packed 32-bit integers in a and b for equality.","Compare packed 32-bit integers in a and b for equality …","Compares packed 64-bit integers in a and b for equality.","Compare packed 64-bit integers in a and b for equality …","Compares packed 8-bit integers in a and b for equality.","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares packed 16-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compares packed 32-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compares packed 64-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compares packed 8-bit integers in a and b for greater-than.","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Sign-extend 16-bit integers to 32-bit integers.","Sign-extend 16-bit integers to 64-bit integers.","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign-extend 32-bit integers to 64-bit integers.","Convert packed 32-bit integers in a to packed 8-bit …","Converts packed 32-bit integers in a to packed …","Converts packed 32-bit integers in a to packed …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign-extend 8-bit integers to 16-bit integers.","Sign-extend 8-bit integers to 32-bit integers.","Sign-extend 8-bit integers to 64-bit integers.","Zeroes extend packed unsigned 16-bit integers in a to …","Zero-extend the lower four unsigned 16-bit integers in a …","Zero-extend unsigned 32-bit integers in a to 64-bit …","Convert packed unsigned 32-bit integers in a to packed …","Zero-extend unsigned 8-bit integers in a to 16-bit …","Zero-extend the lower eight unsigned 8-bit integers in a …","Zero-extend the lower four unsigned 8-bit integers in a to …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Converts packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Converts packed double-precision (64-bit) floating-point …","Converts the 8 x 16-bit half-precision float values in the …","Converts packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Converts packed single-precision (32-bit) floating-point …","Converts the 8 x 32-bit float values in the 256-bit vector …","Returns the first element of the input vector of …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Returns the first element of the input vector of [8 x i32].","Returns the first element of the input vector of …","Converts packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Converts packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Computes the division of each of the 4 packed 64-bit …","Computes the division of each of the 8 packed 32-bit …","Conditionally multiplies the packed single-precision …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Extracts a 16-bit integer from a selected with INDEX. …","Extracts a 32-bit integer from a selected with INDEX.","Extracts an 8-bit integer from a selected with INDEX. …","Extracts 128 bits (composed of 2 packed double-precision …","Extracts 128 bits (composed of 4 packed single-precision …","Extracts 128 bits (composed of integer data) from a …","Extract 128 bits (composed of 4 packed single-precision …","Extracts 128 bits (of integer data) from a selected with …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Rounds packed double-precision (64-bit) floating point …","Rounds packed single-precision (32-bit) floating point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …"],"4":["Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Horizontally adds adjacent pairs of 16-bit integers in a …","Horizontally adds adjacent pairs of 32-bit integers in a …","Horizontal addition of adjacent pairs in the two packed …","Horizontal addition of adjacent pairs in the two packed …","Horizontally adds adjacent pairs of 16-bit integers in a …","Horizontally subtract adjacent pairs of 16-bit integers in …","Horizontally subtract adjacent pairs of 32-bit integers in …","Horizontal subtraction of adjacent pairs in the two packed …","Horizontal subtraction of adjacent pairs in the two packed …","Horizontally subtract adjacent pairs of 16-bit integers in …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Scatter 64-bit integers from a into memory using 32-bit …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Copies a to result and inserts the 16-bit integer i into …","Copies a to result and inserts the 32-bit integer i into …","Copies a to result and inserts the 8-bit integer i into …","Copies a to result then inserts 128 bits (composed of 2 …","Copies a to result then inserts 128 bits (composed of 4 …","Copies a to result then inserts 128 bits from b into …","Copy a to dst then insert 128 bits (composed of 4 packed …","Copies a to dst then insert 128 bits (of integer data) …","Copy a to dst then insert 128 bits (composed of 4 packed …","Loads 256-bits of integer data from unaligned memory into …","Load 256-bits (composed of 8 packed 32-bit integers) from …","Load 256-bits (composed of 4 packed 64-bit integers) from …","Loads 256-bits (composed of 4 packed double-precision …","Loads 256-bits (composed of 8 packed single-precision …","Loads 256-bits of integer data from memory into result. …","Loads two 128-bit values (composed of 4 packed …","Loads two 128-bit values (composed of 2 packed …","Loads two 128-bit values (composed of integer data) from …","Load 256-bits (composed of 16 packed 16-bit integers) from …","Load 256-bits (composed of 8 packed 32-bit integers) from …","Load 256-bits (composed of 4 packed 64-bit integers) from …","Load 256-bits (composed of 32 packed 8-bit integers) from …","Loads 256-bits (composed of 4 packed double-precision …","Loads 256-bits (composed of 8 packed single-precision …","Loads 256-bits of integer data from memory into result. …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiplies packed signed 16-bit integers in a and b …","Vertically multiplies each unsigned 8-bit integer from a …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Compute the absolute value of packed signed 16-bit …","Compute the absolute value of packed signed 32-bit …","Compute the absolute value of packed signed 64-bit …","Compute the absolute value of packed signed 8-bit integers …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 64-byte immediate result shift …","Concatenate a and b into a 64-byte immediate result shift …","Concatenate pairs of 16-byte blocks in a and b into a …","Performs element-by-element bitwise AND between packed …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Considers the input b as packed 64-bit integers and c as …","Blend packed 16-bit integers from a and b using control …","Blend packed 32-bit integers from a and b using control …","Blend packed 64-bit integers from a and b using control …","Blend packed 8-bit integers from a and b using control …","Blend packed double-precision (64-bit) floating-point …","Blend packed single-precision (32-bit) floating-point …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low double-precision (64-bit) floating-point …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for equality …","Compare packed 64-bit integers in a and b for equality …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 32-bit integers in a to packed 16-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 4 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in the low 8 …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 8 …","Zero extend packed unsigned 8-bit integers in the low 4 …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Extract 128 bits (composed of 4 packed single-precision …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using …","Move packed 32-bit integers from a to dst using writemask …","Move packed 64-bit integers from a to dst using writemask …","Move packed 8-bit integers from a into dst using writemask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast 16-bit integer a to all elements of dst using …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle 8-bit integers in a within 128-bit lanes using the …","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Store packed 16-bit integers from a into memory using …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed 8-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Loads packed 32-bit integers from memory pointed by …","Loads packed 64-bit integers from memory pointed by …","Loads packed double-precision (64-bit) floating-point …","Loads packed single-precision (32-bit) floating-point …","Stores packed 32-bit integers from a into memory pointed …","Stores packed 64-bit integers from a into memory pointed …","Stores packed double-precision (64-bit) floating-point …","Stores packed single-precision (32-bit) floating-point …","Compute the absolute value of packed signed 16-bit …","Compute the absolute value of packed signed 32-bit …","Compute the absolute value of packed signed 64-bit …","Compute the absolute value of packed signed 8-bit integers …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 64-byte immediate result shift …","Concatenate a and b into a 64-byte immediate result shift …","Concatenate pairs of 16-byte blocks in a and b into a …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low double-precision (64-bit) floating-point …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 4 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in the low 8 …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 8 …","Zero extend packed unsigned 8-bit integers in the low 4 …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Extract 128 bits (composed of 4 packed single-precision …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using zeromask …","Move packed 32-bit integers from a into dst using zeromask …","Move packed 64-bit integers from a into dst using zeromask …","Move packed 8-bit integers from a into dst using zeromask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle packed 8-bit integers in a according to shuffle …","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Compares packed 16-bit integers in a and b and returns …","Compares packed 32-bit integers in a and b and returns …","Compare packed signed 64-bit integers in a and b and …","Compares packed 8-bit integers in a and b and returns the …","Compares packed unsigned 16-bit integers in a and b and …","Compares packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compares packed unsigned 8-bit integers in a and b and …","Compares packed double-precision (64-bit) floating-point …","Compares packed single-precision (32-bit) floating-point …","Compares packed 16-bit integers in a and b and returns …","Compares packed 32-bit integers in a and b and returns …","Compare packed signed 64-bit integers in a and b and …","Compares packed 8-bit integers in a and b and returns the …","Compares packed unsigned 16-bit integers in a and b and …","Compares packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compares packed unsigned 8-bit integers in a and b and …","Compares packed double-precision (64-bit) floating-point …","Compares packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Creates mask from the most significant bit of each 8-bit …","Sets each bit of the returned mask based on the most …","Sets each bit of the returned mask based on the most …","Set each bit of mask register k based on the most …","Set each bit of mask register k based on the most …","Set each packed 16-bit integer in dst to all ones or all …","Set each packed 8-bit integer in dst to all ones or all …","Computes the sum of absolute differences (SADs) of …","Multiplies the low 32-bit integers from each packed 64-bit …","Multiplies the low unsigned 32-bit integers from each …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies the packed 16-bit integers in a and b producing","Multiplies the packed unsigned 16-bit integers in a and b …","Multiplies packed 16-bit integers in a and b producing …","Multiplies the packed 16-bit integers in a and b producing","Multiplies the packed 32-bit integers in a and b producing","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Computes the bitwise OR packed double-precision (64-bit) …","Computes the bitwise OR packed single-precision (32-bit) …","Computes the bitwise OR of 256 bits (representing integer …","Converts packed 16-bit integers from a and b to packed …","Converts packed 32-bit integers from a and b to packed …","Converts packed 16-bit integers from a and b to packed …","Converts packed 32-bit integers from a and b to packed …","Shuffles 256 bits (composed of 4 packed double-precision …","Shuffles 256 bits (composed of 8 packed single-precision …","Shuffles 128-bits (composed of integer data) selected by …","Shuffles 128-bits of integer data selected by imm8 from a …","Permutes 64-bit integers from a using control mask imm8.","Shuffles 64-bit floating-point elements in a across lanes …","Shuffles double-precision (64-bit) floating-point elements …","Shuffles single-precision (32-bit) floating-point elements …","Permutes packed 32-bit integers from a according to the …","Shuffles eight 32-bit floating-point elements in a across …","Shuffles double-precision (64-bit) floating-point elements …","Shuffles single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Computes the approximate reciprocal of packed …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rounds packed double-precision (64-bit) floating point …","Rounds packed single-precision (32-bit) floating point …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Computes the approximate reciprocal square root of packed …","Computes the absolute differences of packed unsigned 8-bit …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcasts 16-bit integer a to all elements of returned …","Broadcasts 32-bit integer a to all elements of returned …","Broadcasts 64-bit integer a to all elements of returned …","Broadcasts 8-bit integer a to all elements of returned …","Broadcasts double-precision (64-bit) floating-point value a…","Broadcasts single-precision (32-bit) floating-point value a…","Sets packed 16-bit integers in returned vector with the …","Sets packed 32-bit integers in returned vector with the …","Sets packed 64-bit integers in returned vector with the …","Sets packed 8-bit integers in returned vector with the …","Sets packed __m256 returned vector with the supplied …","Sets packed __m256d returned vector with the supplied …","Sets packed __m256i returned vector with the supplied …","Sets packed double-precision (64-bit) floating-point …","Sets packed single-precision (32-bit) floating-point …","Sets packed 16-bit integers in returned vector with the …","Sets packed 32-bit integers in returned vector with the …","Sets packed 64-bit integers in returned vector with the …","Sets packed 8-bit integers in returned vector with the …","Sets packed __m256 returned vector with the supplied …","Sets packed __m256d returned vector with the supplied …","Sets packed __m256i returned vector with the supplied …","Sets packed double-precision (64-bit) floating-point …","Sets packed single-precision (32-bit) floating-point …","Returns vector of type __m256d with all elements set to …","Returns vector of type __m256 with all elements set to …","Returns vector of type __m256i with all elements set to …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffles 32-bit integers in 128-bit lanes of a using the …","Shuffles bytes from a according to the content of b.","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffles double-precision (64-bit) floating-point elements …","Shuffles single-precision (32-bit) floating-point elements …","Shuffles 16-bit integers in the high 64 bits of 128-bit …","Shuffles 16-bit integers in the low 64 bits of 128-bit …","Negates packed 16-bit integers in a when the corresponding …","Negates packed 32-bit integers in a when the corresponding …","Negates packed 8-bit integers in a when the corresponding …","Shifts packed 16-bit integers in a left by count while …","Shifts packed 32-bit integers in a left by count while …","Shifts packed 64-bit integers in a left by count while …","Shifts packed 16-bit integers in a left by IMM8 while …","Shifts packed 32-bit integers in a left by IMM8 while …","Shifts packed 64-bit integers in a left by IMM8 while …","Shifts 128-bit lanes in a left by imm8 bytes while …","Shift packed 16-bit integers in a left by the amount …","Shifts packed 32-bit integers in a left by the amount …","Shifts packed 64-bit integers in a left by the amount …","Returns the square root of packed double-precision …","Returns the square root of packed single-precision …","Shifts packed 16-bit integers in a right by count while …","Shifts packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shifts packed 16-bit integers in a right by IMM8 while …","Shifts packed 32-bit integers in a right by IMM8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shifts packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shifts packed 16-bit integers in a right by count while …","Shifts packed 32-bit integers in a right by count while …","Shifts packed 64-bit integers in a right by count while …","Shifts packed 16-bit integers in a right by IMM8 while …","Shifts packed 32-bit integers in a right by IMM8 while …","Shifts packed 64-bit integers in a right by IMM8 while …","Shifts 128-bit lanes in a right by imm8 bytes while …","Shift packed 16-bit integers in a right by the amount …","Shifts packed 32-bit integers in a right by the amount …","Shifts packed 64-bit integers in a right by the amount …","Store 256-bits (composed of 8 packed 32-bit integers) from …","Store 256-bits (composed of 4 packed 64-bit integers) from …","Stores 256-bits (composed of 4 packed double-precision …","Stores 256-bits (composed of 8 packed single-precision …","Stores 256-bits of integer data from a into memory. …","Stores the high and low 128-bit halves (each composed of 4 …","Stores the high and low 128-bit halves (each composed of 2 …","Stores the high and low 128-bit halves (each composed of …","Store 256-bits (composed of 16 packed 16-bit integers) …","Store 256-bits (composed of 8 packed 32-bit integers) from …","Store 256-bits (composed of 4 packed 64-bit integers) from …","Store 256-bits (composed of 32 packed 8-bit integers) from …","Stores 256-bits (composed of 4 packed double-precision …","Stores 256-bits (composed of 8 packed single-precision …","Stores 256-bits of integer data from a into memory. …","Moves double-precision values from a 256-bit vector of …","Moves single-precision floating point values from a …","Moves integer data from a 256-bit integer vector to a …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtracts packed double-precision (64-bit) floating-point …","Subtracts packed single-precision (32-bit) floating-point …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing integer …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing integer …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing integer …","Returns vector of type __m256d with indeterminate elements.","Returns vector of type __m256 with indeterminate elements. …","Returns vector of type __m256i with with indeterminate …","Unpacks and interleave 16-bit integers from the high half …","Unpacks and interleave 32-bit integers from the high half …","Unpacks and interleave 64-bit integers from the high half …","Unpacks and interleave 8-bit integers from the high half …","Unpacks and interleave double-precision (64-bit) …","Unpacks and interleave single-precision (32-bit) …","Unpacks and interleave 16-bit integers from the low half …","Unpacks and interleave 32-bit integers from the low half …","Unpacks and interleave 64-bit integers from the low half …","Unpacks and interleave 8-bit integers from the low half of …","Unpacks and interleave double-precision (64-bit) …","Unpacks and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Computes the bitwise XOR of packed double-precision …","Computes the bitwise XOR of packed single-precision …","Computes the bitwise XOR of 256 bits (representing integer …","Zeroes the contents of all XMM or YMM registers.","Zeroes the upper 128 bits of all YMM registers; the lower …","Constructs a 256-bit floating-point vector of [4 x double] …","Constructs a 256-bit floating-point vector of [8 x float] …","Constructs a 256-bit integer vector from a 128-bit integer …","Compute the absolute value of packed signed 16-bit …","Computes the absolute values of packed 32-bit integers in a…","Compute the absolute value of packed signed 64-bit …","Compute the absolute value of packed signed 8-bit integers …","Finds the absolute value of each packed double-precision …","Finds the absolute value of each packed single-precision …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Performs one round of an AES decryption flow on each …","Performs the last round of an AES decryption flow on each …","Performs one round of an AES encryption flow on each …","Performs the last round of an AES encryption flow on each …","Concatenate a and b into a 128-byte immediate result …","Concatenate a and b into a 128-byte immediate result …","Concatenate pairs of 16-byte blocks in a and b into a …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of 512 bits (composed of packed …","Compute the bitwise AND of 512 bits (representing integer …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of 512 bits (composed of packed …","Compute the bitwise NOT of 512 bits (representing integer …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Considers the input b as packed 64-bit integers and c as …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed double-precision (64-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcast the 4 packed 64-bit integers from a to all …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low 8-bits from input mask k to all 64-bit …","Broadcast the low 16-bits from input mask k to all 32-bit …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low double-precision (64-bit) floating-point …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Shift 128-bit lanes in a left by imm8 bytes while shifting …","Shift 128-bit lanes in a right by imm8 bytes while …","Cast vector of type __m128d to type __m512d; the upper 384 …","Cast vector of type __m256d to type __m512d; the upper 256 …","Cast vector of type __m512d to type __m128d. This …","Cast vector of type __m512d to type __m256d. This …","Cast vector of type __m512d to type __m512. This intrinsic …","Cast vector of type __m512d to type __m512i. This …","Cast vector of type __m128 to type __m512; the upper 384 …","Cast vector of type __m256 to type __m512; the upper 256 …","Cast vector of type __m512 to type __m128. This intrinsic …","Cast vector of type __m512 to type __m256. This intrinsic …","Cast vector of type __m512 to type __m512d. This intrinsic …","Cast vector of type __m512 to type __m512i. This intrinsic …","Cast vector of type __m128i to type __m512i; the upper 384 …","Cast vector of type __m256i to type __m512i; the upper 256 …","Cast vector of type __m512i to type __m512d. This …","Cast vector of type __m512i to type __m512. This intrinsic …","Cast vector of type __m512i to type __m128i. This …","Cast vector of type __m512i to type __m256i. This …","Performs a carry-less multiplication of two 64-bit …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for equality …","Compare packed 64-bit integers in a and b for equality …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed signed 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Performs element-by-element conversion of the lower half …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 8 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Performs element-by-element conversion of the lower half …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 8 …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Performs an element-by-element conversion of packed …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Performs element-by-element conversion of the lower half …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Copy the lower 32-bit integer in a to dst.","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Extract 128 bits (composed of 4 packed single-precision …","Extract 256 bits (composed of 4 packed double-precision …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Extract 256 bits (composed of 4 packed 64-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Gather 32-bit integers from memory using 32-bit indices. …","Gather 64-bit integers from memory using 32-bit indices. …","Gather double-precision (64-bit) floating-point elements …","Gather single-precision (32-bit) floating-point elements …","Scatter 32-bit integers from a into memory using 32-bit …","Scatter 64-bit integers from a into memory using 32-bit …","Scatter double-precision (64-bit) floating-point elements …","Scatter single-precision (32-bit) floating-point elements …","Gather 32-bit integers from memory using 64-bit indices. …","Gather 64-bit integers from memory using 64-bit indices. …","Gather double-precision (64-bit) floating-point elements …","Gather single-precision (32-bit) floating-point elements …","Scatter 32-bit integers from a into memory using 64-bit …","Scatter 64-bit integers from a into memory using 64-bit …","Scatter double-precision (64-bit) floating-point elements …","Scatter single-precision (32-bit) floating-point elements …","Copy a to dst then insert 128 bits (composed of 4 packed …","Copy a to dst then insert 256 bits (composed of 4 packed …","Copy a to dst then insert 128 bits (composed of 4 packed …","Copy a to dst then insert 256 bits (composed of 4 packed …","Converts integer mask into bitmask storing the result in …","Compute the bitwise AND of 16-bit masks a and b and store …","Compute the bitwise NOT of 16-bit masks a and then AND …","Copy 16-bit mask a to k.","Compute the bitwise NOT of 16-bit mask a and store the …","Compute the bitwise OR of 16-bit masks a and b and store …","Performs bitwise OR between k1 and k2 storing the result …","Unpack and interleave 8 bits from masks a and b and store …","Compute the bitwise XNOR of 16-bit masks a and b and …","Compute the bitwise XOR of 16-bit masks a and b and store …","Load 512-bits (composed of 16 packed 32-bit integers) from …","Load 512-bits (composed of 8 packed 64-bit integers) from …","Load 512-bits (composed of 8 packed double-precision …","Load 512-bits (composed of 16 packed single-precision …","Load 512-bits of integer data from memory into dst. …","Load 512-bits (composed of 32 packed 16-bit integers) from …","Load 512-bits (composed of 16 packed 32-bit integers) from …","Load 512-bits (composed of 8 packed 64-bit integers) from …","Load 512-bits (composed of 64 packed 8-bit integers) from …","Loads 512-bits (composed of 8 packed double-precision …","Loads 512-bits (composed of 16 packed single-precision …","Load 512-bits of integer data from memory into dst. …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiply packed signed 16-bit integers in a and b …","Vertically multiply each unsigned 8-bit integer from a …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Converts bit mask k1 into an integer value storing the …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Compute the absolute value of packed signed 16-bit …","Computes the absolute value of packed 32-bit integers in a…","Compute the absolute value of packed signed 64-bit …","Compute the absolute value of packed signed 8-bit integers …","Finds the absolute value of each packed double-precision …","Finds the absolute value of each packed single-precision …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 128-byte immediate result …","Concatenate a and b into a 128-byte immediate result …","Concatenate pairs of 16-byte blocks in a and b into a …","Performs element-by-element bitwise AND between packed …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Considers the input b as packed 64-bit integers and c as …","Blend packed 16-bit integers from a and b using control …","Blend packed 32-bit integers from a and b using control …","Blend packed 64-bit integers from a and b using control …","Blend packed 8-bit integers from a and b using control …","Blend packed double-precision (64-bit) floating-point …","Blend packed single-precision (32-bit) floating-point …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed double-precision (64-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcast the 4 packed 64-bit integers from a to all …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low double-precision (64-bit) floating-point …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for equality …","Compare packed 64-bit integers in a and b for equality …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed signed 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 32-bit integers in a to packed 16-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Performs element-by-element conversion of the lower half …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 8 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Performs element-by-element conversion of the lower half …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 8 …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Performs an element-by-element conversion of packed …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Performs element-by-element conversion of the lower half …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Extract 128 bits (composed of 4 packed single-precision …","Extract 256 bits (composed of 4 packed double-precision …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Extract 256 bits (composed of 4 packed 64-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Gather 32-bit integers from memory using 32-bit indices. …","Gather 64-bit integers from memory using 32-bit indices. …","Gather double-precision (64-bit) floating-point elements …","Gather single-precision (32-bit) floating-point elements …","Scatter 32-bit integers from a into memory using 32-bit …","Scatter 64-bit integers from a into memory using 32-bit …","Scatter double-precision (64-bit) floating-point elements …","Scatter single-precision (32-bit) floating-point elements …","Gather 32-bit integers from memory using 64-bit indices. …","Gather 64-bit integers from memory using 64-bit indices. …","Gather double-precision (64-bit) floating-point elements …","Gather single-precision (32-bit) floating-point elements …","Scatter 32-bit integers from a into memory using 64-bit …","Scatter 64-bit integers from a into memory using 64-bit …","Scatter double-precision (64-bit) floating-point elements …","Scatter single-precision (32-bit) floating-point elements …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 256 bits (composed of 4 packed …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 256 bits (composed of 4 packed …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using …","Move packed 32-bit integers from a to dst using writemask …","Move packed 64-bit integers from a to dst using writemask …","Move packed 8-bit integers from a into dst using writemask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","Multiplies elements in packed 64-bit integer vectors a and …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 32-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Reduce the packed 32-bit integers in a by addition using …","Reduce the packed 64-bit integers in a by addition using …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by bitwise AND …","Reduce the packed 64-bit integers in a by addition using …","Reduce the packed signed 32-bit integers in a by maximum …","Reduce the packed signed 64-bit integers in a by maximum …","Reduce the packed unsigned 32-bit integers in a by maximum …","Reduce the packed unsigned 64-bit integers in a by maximum …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed signed 32-bit integers in a by maximum …","Reduce the packed signed 64-bit integers in a by maximum …","Reduce the packed unsigned 32-bit integers in a by maximum …","Reduce the packed signed 64-bit integers in a by maximum …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by multiplication …","Reduce the packed 64-bit integers in a by multiplication …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by bitwise OR using …","Reduce the packed 64-bit integers in a by bitwise OR using …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast 16-bit integer a to all elements of dst using …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle 8-bit integers in a within 128-bit lanes using the …","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Store packed 16-bit integers from a into memory using …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed 8-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Compute the absolute value of packed signed 16-bit …","Computes the absolute value of packed 32-bit integers in a…","Compute the absolute value of packed signed 64-bit …","Compute the absolute value of packed signed 8-bit integers …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 128-byte immediate result …","Concatenate a and b into a 128-byte immediate result …","Concatenate pairs of 16-byte blocks in a and b into a …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed double-precision (64-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcast the 4 packed 64-bit integers from a to all …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low double-precision (64-bit) floating-point …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed signed 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 8 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 8 …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Extract 128 bits (composed of 4 packed single-precision …","Extract 256 bits (composed of 4 packed double-precision …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Extract 256 bits (composed of 4 packed 64-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 256 bits (composed of 4 packed …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 256 bits (composed of 4 packed …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using zeromask …","Move packed 32-bit integers from a into dst using zeromask …","Move packed 64-bit integers from a into dst using zeromask …","Move packed 8-bit integers from a into dst using zeromask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …"],"5":["Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle packed 8-bit integers in a according to shuffle …","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Set each bit of mask register k based on the most …","Set each bit of mask register k based on the most …","Set each packed 16-bit integer in dst to all ones or all …","Set each packed 8-bit integer in dst to all ones or all …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","Multiplies elements in packed 64-bit integer vectors a and …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Compute the bitwise OR of 512 bits (representing integer …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 32-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Reduce the packed 32-bit integers in a by addition. …","Reduce the packed 64-bit integers in a by addition. …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by bitwise AND. …","Reduce the packed 64-bit integers in a by bitwise AND. …","Reduce the packed signed 32-bit integers in a by maximum. …","Reduce the packed signed 64-bit integers in a by maximum. …","Reduce the packed unsigned 32-bit integers in a by …","Reduce the packed unsigned 64-bit integers in a by …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed signed 32-bit integers in a by minimum. …","Reduce the packed signed 64-bit integers in a by minimum. …","Reduce the packed unsigned 32-bit integers in a by …","Reduce the packed unsigned 64-bit integers in a by …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by multiplication. …","Reduce the packed 64-bit integers in a by multiplication. …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by bitwise OR. …","Reduce the packed 64-bit integers in a by bitwise OR. …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Compute the absolute differences of packed unsigned 8-bit …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Broadcast 32-bit integer a to all elements of dst.","Broadcast 64-bit integer a to all elements of dst.","Broadcast 8-bit integer a to all elements of dst.","Broadcast 64-bit float a to all elements of dst.","Broadcast 32-bit float a to all elements of dst.","Set packed 32-bit integers in dst with the repeated 4 …","Set packed 64-bit integers in dst with the repeated 4 …","Set packed double-precision (64-bit) floating-point …","Set packed single-precision (32-bit) floating-point …","Set packed 16-bit integers in dst with the supplied values.","Sets packed 32-bit integers in dst with the supplied …","Set packed 64-bit integers in dst with the supplied values.","Set packed 8-bit integers in dst with the supplied values.","Set packed double-precision (64-bit) floating-point …","Sets packed 32-bit integers in dst with the supplied …","Set packed 32-bit integers in dst with the repeated 4 …","Set packed 64-bit integers in dst with the repeated 4 …","Set packed double-precision (64-bit) floating-point …","Set packed single-precision (32-bit) floating-point …","Sets packed 32-bit integers in dst with the supplied …","Set packed 64-bit integers in dst with the supplied values …","Set packed double-precision (64-bit) floating-point …","Sets packed 32-bit integers in dst with the supplied …","Return vector of type __m512 with all elements set to zero.","Return vector of type __m512i with all elements set to …","Returns vector of type __m512d with all elements set to …","Returns vector of type __m512 with all elements set to …","Returns vector of type __m512i with all elements set to …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle packed 8-bit integers in a according to shuffle …","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Store 512-bits (composed of 16 packed 32-bit integers) …","Store 512-bits (composed of 8 packed 64-bit integers) from …","Store 512-bits (composed of 8 packed double-precision …","Store 512-bits of integer data from a into memory. …","Store 512-bits of integer data from a into memory. …","Store 512-bits (composed of 32 packed 16-bit integers) …","Store 512-bits (composed of 16 packed 32-bit integers) …","Store 512-bits (composed of 8 packed 64-bit integers) from …","Store 512-bits (composed of 64 packed 8-bit integers) from …","Stores 512-bits (composed of 8 packed double-precision …","Stores 512-bits (composed of 16 packed single-precision …","Store 512-bits of integer data from a into memory. …","Store 512-bits (composed of 8 packed double-precision …","Store 512-bits (composed of 16 packed single-precision …","Store 512-bits of integer data from a into memory using a …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Return vector of type __m512 with indeterminate elements. …","Return vector of type __m512i with indeterminate elements. …","Returns vector of type __m512d with indeterminate elements.","Returns vector of type __m512 with indeterminate elements. …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Compute the bitwise XOR of 512 bits (representing integer …","Cast vector of type __m128d to type __m512d; the upper 384 …","Cast vector of type __m256d to type __m512d; the upper 256 …","Cast vector of type __m128 to type __m512; the upper 384 …","Cast vector of type __m256 to type __m512; the upper 256 …","Cast vector of type __m128i to type __m512i; the upper 384 …","Cast vector of type __m256i to type __m512i; the upper 256 …","Computes the absolute value of each of the packed 16-bit …","Computes the absolute value of each of the packed 32-bit …","Computes the absolute value of packed 8-bit signed …","Adds packed 16-bit integers in a and b.","Adds packed 32-bit integers in a and b.","Adds packed 64-bit integers in a and b.","Adds packed 8-bit integers in a and b.","Adds packed double-precision (64-bit) floating-point …","Adds __m128 vectors.","Add the lower double-precision (64-bit) floating-point …","Add the lower single-precision (32-bit) floating-point …","Returns a new vector with the low element of a replaced by …","Adds the first component of a and b the other components …","Adds packed 16-bit integers in a and b using saturation.","Adds packed 8-bit integers in a and b using saturation.","Adds packed unsigned 16-bit integers in a and b using …","Adds packed unsigned 8-bit integers in a and b using …","Alternatively add and subtract packed double-precision …","Alternatively add and subtract packed single-precision …","Performs one round of an AES decryption flow on data …","Performs the last round of an AES decryption flow on data …","Performs one round of an AES encryption flow on data …","Performs the last round of an AES encryption flow on data …","Performs the InvMixColumns transformation on a.","Assist in expanding the AES cipher key.","Concatenate a and b into a 32-byte immediate result shift …","Concatenate a and b into a 32-byte immediate result shift …","Concatenate 16-byte blocks in a and b into a 32-byte …","Computes the bitwise AND of packed double-precision …","Bitwise AND of packed single-precision (32-bit) …","Computes the bitwise AND of 128 bits (representing integer …","Computes the bitwise NOT of a and then AND with b.","Bitwise AND-NOT of packed single-precision (32-bit) …","Computes the bitwise NOT of 128 bits (representing integer …","Averages packed unsigned 16-bit integers in a and b.","Averages packed unsigned 8-bit integers in a and b.","Considers the input b as packed 64-bit integers and c as …","Blend packed 16-bit integers from a and b using the mask …","Blends packed 32-bit integers from a and b using control …","Blend packed double-precision (64-bit) floating-point …","Blend packed single-precision (32-bit) floating-point …","Blend packed 8-bit integers from a and b using mask","Blend packed double-precision (64-bit) floating-point …","Blend packed single-precision (32-bit) floating-point …","Broadcasts a single-precision (32-bit) floating-point …","Broadcasts the low packed 8-bit integer from a to all …","Broadcasts the low packed 32-bit integer from a to all …","Broadcast the low 8-bits from input mask k to all 64-bit …","Broadcast the low 16-bits from input mask k to all 32-bit …","Broadcasts the low packed 64-bit integer from a to all …","Broadcasts the low double-precision (64-bit) …","Broadcasts the low single-precision (32-bit) …","Broadcasts the low packed 16-bit integer from a to all …","Shifts a left by IMM8 bytes while shifting in zeros.","Shifts a right by IMM8 bytes while shifting in zeros.","Casts a 128-bit floating-point vector of [2 x double] into …","Casts a 128-bit floating-point vector of [2 x double] into …","Casts a 128-bit floating-point vector of [4 x float] into …","Casts a 128-bit floating-point vector of [4 x float] into …","Casts a 128-bit integer vector into a 128-bit …","Casts a 128-bit integer vector into a 128-bit …","Round the packed double-precision (64-bit) floating-point …","Round the packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Invalidates and flushes the cache line that contains p …","Performs a carry-less multiplication of two 64-bit …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compares packed double-precision (64-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compares packed single-precision (32-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compares the lower double-precision (64-bit) …","Compare the lower double-precision (64-bit) floating-point …","Compares the lower single-precision (32-bit) …","Compare the lower single-precision (32-bit) floating-point …","Compares packed 16-bit integers in a and b for equality.","Compare packed signed 16-bit integers in a and b for …","Compares packed 32-bit integers in a and b for equality.","Compare packed 32-bit integers in a and b for equality …","Compares packed 64-bit integers in a and b for equality","Compare packed 64-bit integers in a and b for equality …","Compares packed 8-bit integers in a and b for equality.","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for equality.","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for equality. The …","Compares packed strings in a and b with lengths la and lb …","Compares packed strings in a and b with lengths la and lb …","Compares packed strings a and b with lengths la and lb …","Compares packed strings in a and b with lengths la and lb …","Compares packed strings in a and b with lengths la and lb …","Compares packed strings in a and b with lengths la and lb …","Compares packed strings in a and b with lengths la and lb …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for greater than or …","Compares packed 16-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compares packed 32-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compares packed 64-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compares packed 8-bit integers in a and b for greater-than.","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for greater than. …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for less than or …","Compares packed 16-bit integers in a and b for less-than.","Compare packed signed 16-bit integers in a and b for …","Compares packed 32-bit integers in a and b for less-than.","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compares packed 8-bit integers in a and b for less-than.","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for less-than.","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for less than. The …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for not-equal.","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for inequality. The …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for not-less-than. …","Compares corresponding elements in a and b to see if …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Checks if the lowest f32 of both inputs are ordered. The …","Compares corresponding elements in a and b to see if …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Checks if the lowest f32 of both inputs are unordered. The …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compares the lower element of a and b for equality.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for …","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for greater-than.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for …","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for less-than.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for not-equal.","Compares two 32-bit floats from the low-order bits of a …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Starting with the initial value in crc return the …","Starting with the initial value in crc return the …","Starting with the initial value in crc return the …","Convert the signed 32-bit integer b to a single-precision …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the signed 32-bit integer b to a single-precision …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the unsigned 32-bit integer b to a …","Alias for _mm_cvtsi32_ss.","Alias for _mm_cvtss_si32.","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Converts the lower two packed 32-bit integers in a to …","Converts packed 32-bit integers in a to packed …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 8 bytes of a …","Zeroes extend packed unsigned 16-bit integers in a to …","Zeroes extend packed unsigned 16-bit integers in a to …","Zeroes extend packed unsigned 32-bit integers in a to …","Convert packed unsigned 32-bit integers in a to packed …","Zeroes extend packed unsigned 8-bit integers in a to …","Zeroes extend packed unsigned 8-bit integers in a to …","Zeroes extend packed unsigned 8-bit integers in a to …","Convert the signed 32-bit integer b to a double-precision …","Convert the signed 32-bit integer b to a single-precision …","Convert packed single-precision (32-bit) floating-point …","Converts packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Converts packed double-precision (64-bit) floating-point …","Converts the 4 x 16-bit half-precision float values in the …","Converts packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Converts packed single-precision (32-bit) floating-point …","Converts the 4 x 32-bit float values in the 128-bit vector …","Returns the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Converts the lower double-precision (64-bit) …","Converts the lower double-precision (64-bit) …","Convert the lower double-precision (64-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Returns the lowest element of a.","Returns a with its lower element replaced by b after …","Returns a vector whose lowest element is a and all higher …","Converts a 32 bit integer to a 32 bit float. The result …","Extracts the lowest 32 bit float from the input vector.","Convert the lower single-precision (32-bit) floating-point …","Converts the lower single-precision (32-bit) …","Converts the lowest 32 bit float in the input vector to a …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Alias for _mm_cvttss_si32.","Converts packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Converts packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Converts the lower double-precision (64-bit) …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Converts the lowest 32 bit float in the input vector to a …","Convert the lower single-precision (32-bit) floating-point …","Convert the unsigned 32-bit integer b to a …","Convert the unsigned 32-bit integer b to a …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divides __m128 vectors.","Divide the lower double-precision (64-bit) floating-point …","Divide the lower single-precision (32-bit) floating-point …","Returns a new vector with the low element of a replaced by …","Divides the first component of b by a the other …","Returns the dot product of two __m128d vectors.","Returns the dot product of two __m128 vectors.","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Returns the imm8 element of a.","Extracts an 32-bit integer from a selected with IMM8","Extracts an 8-bit integer from a selected with IMM8. …","Extracts a single-precision (32-bit) floating-point …","Extracts the bit range specified by y from the lower 64 …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Round the packed double-precision (64-bit) floating-point …","Round the packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiplies the lower double-precision (64-bit) …","Multiplies the lower single-precision (32-bit) …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiplies the lower double-precision (64-bit) …","Multiplies the lower single-precision (32-bit) …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiplies the lower double-precision (64-bit) …","Multiplies the lower single-precision (32-bit) …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiplies the lower double-precision (64-bit) …","Multiplies the lower single-precision (32-bit) …","Gets the unsigned 32-bit value of the MXCSR control and …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Horizontally adds the adjacent pairs of values contained …","Horizontally adds the adjacent pairs of values contained …","Horizontally adds adjacent pairs of double-precision …","Horizontally adds adjacent pairs of single-precision …","Horizontally adds the adjacent pairs of values contained …","Horizontally subtract the adjacent pairs of values …","Horizontally subtract the adjacent pairs of values …","Horizontally subtract adjacent pairs of double-precision …","Horizontally adds adjacent pairs of single-precision …","Horizontally subtract the adjacent pairs of values …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns a new vector where the imm8 element of a is …","Returns a copy of a with the 32-bit integer from i …","Returns a copy of a with the 8-bit integer from i inserted …","Select a single value in b to store at some position in a …","Inserts the [length:0] bits of y into x at index.","Loads 128-bits of integer data from unaligned memory. This …","Performs a serializing operation on all load-from-memory …","Loads a double-precision (64-bit) floating-point element …","Construct a __m128 by duplicating the value read from p …","Load 128-bits (composed of 4 packed 32-bit integers) from …","Load 128-bits (composed of 2 packed 64-bit integers) from …","Loads 128-bits (composed of 2 packed double-precision …","Loads a double-precision (64-bit) floating-point element …","Loads four f32 values from <em>aligned</em> memory into a __m128. …","Alias for _mm_load1_ps","Loads a 64-bit double-precision value to the low element …","Loads 128-bits of integer data from memory into a new …","Construct a __m128 with the lowest element read from p and …","Loads a double-precision (64-bit) floating-point element …","Loads a double-precision value into the high-order bits of …","Loads 64-bit integer from memory into first element of …","Loads a double-precision value into the low-order bits of …","Loads 2 double-precision (64-bit) floating-point elements …","Loads four f32 values from aligned memory into a __m128 in …","Load 128-bits (composed of 8 packed 16-bit integers) from …","Load 128-bits (composed of 4 packed 32-bit integers) from …","Load 128-bits (composed of 2 packed 64-bit integers) from …","Load 128-bits (composed of 16 packed 8-bit integers) from …","Loads 128-bits (composed of 2 packed double-precision …","Loads four f32 values from memory into a __m128. There are …","Loads 128-bits of integer data from memory into a new …","Loads unaligned 64-bits of integer data from memory into …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiplies and then horizontally add signed 16 bit …","Multiplies corresponding pairs of packed 8-bit unsigned …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Compute the absolute value of packed signed 16-bit …","Compute the absolute value of packed signed 32-bit …","Compute the absolute value of packed signed 8-bit integers …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add the lower double-precision (64-bit) floating-point …","Add the lower single-precision (32-bit) floating-point …","Add the lower double-precision (64-bit) floating-point …","Add the lower single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 32-byte immediate result shift …","Concatenate a and b into a 32-byte immediate result shift …","Concatenate pairs of 16-byte blocks in a and b into a …","Performs element-by-element bitwise AND between packed …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Considers the input b as packed 64-bit integers and c as …","Blend packed 16-bit integers from a and b using control …","Blend packed 32-bit integers from a and b using control …","Blend packed 64-bit integers from a and b using control …","Blend packed 8-bit integers from a and b using control …","Blend packed double-precision (64-bit) floating-point …","Blend packed single-precision (32-bit) floating-point …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for equality …","Compare packed 64-bit integers in a and b for equality …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 32-bit integers in a to packed 16-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 2 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in the low 4 …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 4 …","Zero extend packed unsigned 8-bit integers in the low 2 …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert the lower single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Divide the lower double-precision (64-bit) floating-point …","Divide the lower single-precision (32-bit) floating-point …","Divide the lower double-precision (64-bit) floating-point …","Divide the lower single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using …","Move packed 32-bit integers from a to dst using writemask …","Move packed 64-bit integers from a to dst using writemask …","Move packed 8-bit integers from a into dst using writemask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Move the lower double-precision (64-bit) floating-point …","Move the lower single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of the lower …","Compute the approximate reciprocal of the lower …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of the …","Compute the approximate reciprocal square root of the …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast 16-bit integer a to all elements of dst using …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle 8-bit integers in a within 128-bit lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Compute the square root of the lower double-precision …","Compute the square root of the lower single-precision …","Compute the square root of the lower double-precision …","Compute the square root of the lower single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Store packed 16-bit integers from a into memory using …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed 8-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract the lower double-precision (64-bit) …","Subtract the lower single-precision (32-bit) …","Subtract the lower double-precision (64-bit) …","Subtract the lower single-precision (32-bit) …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Loads packed 32-bit integers from memory pointed by …","Loads packed 64-bit integers from memory pointed by …","Loads packed double-precision (64-bit) floating-point …","Loads packed single-precision (32-bit) floating-point …","Conditionally store 8-bit integer elements from a into …","Stores packed 32-bit integers from a into memory pointed …","Stores packed 64-bit integers from a into memory pointed …","Stores packed double-precision (64-bit) floating-point …","Stores packed single-precision (32-bit) floating-point …","Compute the absolute value of packed signed 16-bit …","Compute the absolute value of packed signed 32-bit …","Compute the absolute value of packed signed 8-bit integers …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add the lower double-precision (64-bit) floating-point …","Add the lower single-precision (32-bit) floating-point …","Add the lower double-precision (64-bit) floating-point …","Add the lower single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 32-byte immediate result shift …","Concatenate a and b into a 32-byte immediate result shift …","Concatenate pairs of 16-byte blocks in a and b into a …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 2 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in the low 4 …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in th elow 4 …","Zero extend packed unsigned 8-bit integers in the low 2 …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert the lower single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Divide the lower double-precision (64-bit) floating-point …","Divide the lower single-precision (32-bit) floating-point …","Divide the lower double-precision (64-bit) floating-point …","Divide the lower single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using zeromask …","Move packed 32-bit integers from a into dst using zeromask …","Move packed 64-bit integers from a into dst using zeromask …","Move packed 8-bit integers from a into dst using zeromask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Move the lower double-precision (64-bit) floating-point …","Move the lower single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of the lower …","Compute the approximate reciprocal of the lower …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of the …","Compute the approximate reciprocal square root of the …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle packed 8-bit integers in a according to shuffle …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Compute the square root of the lower double-precision …","Compute the square root of the lower single-precision …","Compute the square root of the lower double-precision …","Compute the square root of the lower single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract the lower double-precision (64-bit) …","Subtract the lower single-precision (32-bit) …","Subtract the lower double-precision (64-bit) …","Subtract the lower single-precision (32-bit) …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Compares packed 16-bit integers in a and b and returns …","Compares packed 32-bit integers in a and b and returns …","Compare packed signed 64-bit integers in a and b and …","Compares packed 8-bit integers in a and b and returns …","Compares packed unsigned 16-bit integers in a and b and …","Compares packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compares packed unsigned 8-bit integers in a and b and …","Returns a new vector with the maximum values from …","Compares packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Returns a new vector with the low element of a replaced by …","Compares the first single-precision (32-bit) …","Performs a serializing operation on all load-from-memory …","Compares packed 16-bit integers in a and b and returns …","Compares packed 32-bit integers in a and b and returns …","Compares packed 8-bit integers in a and b and returns …","Compares packed unsigned 16-bit integers in a and b and …","Compares packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compares packed unsigned 8-bit integers in a and b and …","Returns a new vector with the minimum values from …","Compares packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Returns a new vector with the low element of a replaced by …","Compares the first single-precision (32-bit) …","Finds the minimum unsigned 16-bit element in the 128-bit __…","Returns a vector where the low element is extracted from a …","Constructs a 128-bit floating-point vector of [2 x double]…","Returns a __m128 with the first component from b and the …","Duplicate the low double-precision (64-bit) floating-point …","Duplicate odd-indexed single-precision (32-bit) …","Combine higher half of a and b. The higher half of b …","Duplicate even-indexed single-precision (32-bit) …","Combine lower half of a and b. The lower half of b …","Returns a mask of the most significant bit of each element …","Returns a mask of the most significant bit of each element …","Returns a mask of the most significant bit of each element …","Set each bit of mask register k based on the most …","Set each bit of mask register k based on the most …","Set each packed 16-bit integer in dst to all ones or all …","Set each packed 8-bit integer in dst to all ones or all …","Subtracts 8-bit unsigned integer values and computes the …","Multiplies the low 32-bit integers from each packed 64-bit …","Multiplies the low unsigned 32-bit integers from each …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies __m128 vectors.","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Returns a new vector with the low element of a replaced by …","Multiplies the first component of a and b the other …","Multiplies the packed 16-bit integers in a and b.","Multiplies the packed unsigned 16-bit integers in a and b.","Multiplies packed 16-bit signed integer values truncate …","Multiplies the packed 16-bit integers in a and b.","Multiplies the packed 32-bit integers in a and b …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Computes the bitwise OR of a and b.","Bitwise OR of packed single-precision (32-bit) …","Computes the bitwise OR of 128 bits (representing integer …","Converts packed 16-bit integers from a and b to packed …","Converts packed 32-bit integers from a and b to packed …","Converts packed 16-bit integers from a and b to packed …","Converts packed 32-bit integers from a and b to packed …","Provides a hint to the processor that the code sequence is …","Shuffles double-precision (64-bit) floating-point elements …","Shuffles single-precision (32-bit) floating-point elements …","Shuffles double-precision (64-bit) floating-point elements …","Shuffles single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Fetch the cache line that contains address p using the …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of the lower …","Compute the approximate reciprocal of the lower …","Returns the approximate reciprocal of packed …","Returns the approximate reciprocal of the first …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round the packed double-precision (64-bit) floating-point …","Round the packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of the …","Compute the approximate reciprocal square root of the …","Returns the approximate reciprocal square root of packed …","Returns the approximate reciprocal square root of the …","Sum the absolute differences of packed unsigned 8-bit …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcasts 16-bit integer a to all elements.","Broadcasts 32-bit integer a to all elements.","Broadcasts 64-bit integer a to all elements.","Broadcasts 8-bit integer a to all elements.","Broadcasts double-precision (64-bit) floating-point value …","Construct a __m128 with all element set to a.","Sets packed 16-bit integers with the supplied values.","Sets packed 32-bit integers with the supplied values.","Sets packed 64-bit integers with the supplied values from …","Sets packed 8-bit integers with the supplied values.","Sets packed double-precision (64-bit) floating-point …","Broadcasts double-precision (64-bit) floating-point value …","Construct a __m128 from four floating point values highest …","Alias for _mm_set1_ps","Copies double-precision (64-bit) floating-point element a …","Construct a __m128 with the lowest element set to a and …","Sets the MXCSR register with the 32-bit unsigned integer …","Sets packed 16-bit integers with the supplied values in …","Sets packed 32-bit integers with the supplied values in …","Sets packed 8-bit integers with the supplied values in …","Sets packed double-precision (64-bit) floating-point …","Construct a __m128 from four floating point values lowest …","Returns packed double-precision (64-bit) floating-point …","Construct a __m128 with all elements initialized to zero.","Returns a vector with all elements set to zero.","Performs a serializing operation on all non-temporal (“…","Performs an intermediate calculation for the next four …","Performs the final calculation for the next four SHA1 …","Calculate SHA1 state variable E after four rounds of …","Performs four rounds of SHA1 operation using an initial …","Performs an intermediate calculation for the next four …","Performs the final calculation for the next four SHA256 …","Performs 2 rounds of SHA256 operation using an initial …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffles 32-bit integers in a using the control in IMM8.","Shuffles bytes from a according to the content of b.","Constructs a 128-bit floating-point vector of [2 x double] …","Shuffles packed single-precision (32-bit) floating-point …","Shuffles 16-bit integers in the high 64 bits of a using …","Shuffles 16-bit integers in the low 64 bits of a using the …","Negates packed 16-bit integers in a when the corresponding …","Negates packed 32-bit integers in a when the corresponding …","Negates packed 8-bit integers in a when the corresponding …","Shifts packed 16-bit integers in a left by count while …","Shifts packed 32-bit integers in a left by count while …","Shifts packed 64-bit integers in a left by count while …","Shifts packed 16-bit integers in a left by IMM8 while …","Shifts packed 32-bit integers in a left by IMM8 while …","Shifts packed 64-bit integers in a left by IMM8 while …","Shifts a left by IMM8 bytes while shifting in zeros.","Shift packed 16-bit integers in a left by the amount …","Shifts packed 32-bit integers in a left by the amount …","Shifts packed 64-bit integers in a left by the amount …","Returns a new vector with the square root of each of the …","Returns the square root of packed single-precision …","Compute the square root of the lower double-precision …","Compute the square root of the lower single-precision …","Returns a new vector with the low element of a replaced by …","Returns the square root of the first single-precision …","Shifts packed 16-bit integers in a right by count while …","Shifts packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shifts packed 16-bit integers in a right by IMM8 while …","Shifts packed 32-bit integers in a right by IMM8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shifts packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shifts packed 16-bit integers in a right by count while …","Shifts packed 32-bit integers in a right by count while …","Shifts packed 64-bit integers in a right by count while …","Shifts packed 16-bit integers in a right by IMM8 while …","Shifts packed 32-bit integers in a right by IMM8 while …","Shifts packed 64-bit integers in a right by IMM8 while …","Shifts a right by IMM8 bytes while shifting in zeros.","Shift packed 16-bit integers in a right by the amount …","Shifts packed 32-bit integers in a right by the amount …","Shifts packed 64-bit integers in a right by the amount …","Stores the lower double-precision (64-bit) floating-point …","Stores the lowest 32 bit float of a repeated four times …","Store 128-bits (composed of 4 packed 32-bit integers) from …","Store 128-bits (composed of 2 packed 64-bit integers) from …","Stores 128-bits (composed of 2 packed double-precision …","Stores the lower double-precision (64-bit) floating-point …","Stores four 32-bit floats into <em>aligned</em> memory.","Alias for _mm_store1_ps","Stores the lower 64 bits of a 128-bit vector of …","Stores 128-bits of integer data from a into memory.","Stores the lowest 32 bit float of a into memory.","Stores the upper 64 bits of a 128-bit vector of …","Stores the lower 64-bit integer a to a memory location.","Stores the lower 64 bits of a 128-bit vector of …","Stores 2 double-precision (64-bit) floating-point elements …","Stores four 32-bit floats into <em>aligned</em> memory in reverse …","Store 128-bits (composed of 8 packed 16-bit integers) from …","Store 128-bits (composed of 4 packed 32-bit integers) from …","Store 128-bits (composed of 2 packed 64-bit integers) from …","Store 128-bits (composed of 16 packed 8-bit integers) from …","Stores 128-bits (composed of 2 packed double-precision …","Stores four 32-bit floats into memory. There are no …","Stores 128-bits of integer data from a into memory.","Stores a 128-bit floating point vector of [2 x double] to …","Stores a into the memory at mem_addr using a non-temporal …","Non-temporal store of a.0 into p.","Stores a 128-bit integer vector to a 128-bit aligned …","Stores a 32-bit integer value in the specified memory …","Non-temporal store of a.0 into p.","Subtracts packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtracts packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtracts __m128 vectors.","Subtract the lower double-precision (64-bit) …","Subtract the lower single-precision (32-bit) …","Returns a new vector with the low element of a replaced by …","Subtracts the first component of b from a the other …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Tests whether the specified bits in a 128-bit integer …","Tests whether the specified bits in a 128-bit integer …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Tests whether the specified bits in a 128-bit integer …","Computes the bitwise AND of 128 bits (representing …","Computes the bitwise AND of 128 bits (representing …","Tests whether the specified bits in a 128-bit integer …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Computes the bitwise AND of 128 bits (representing …","Computes the bitwise AND of 128 bits (representing …","Tests whether the specified bits in a 128-bit integer …","Computes the bitwise AND of 128 bits (representing …","Computes the bitwise AND of 128 bits (representing …","Tests whether the specified bits in a 128-bit integer …","Counts the number of trailing least significant zero bits.","Compares the lower element of a and b for equality.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for …","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for greater-than.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for …","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for less-than.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for not-equal.","Compares two 32-bit floats from the low-order bits of a …","Returns vector of type __m128d with indeterminate elements.","Returns vector of type __m128 with indeterminate elements. …","Returns vector of type __m128i with indeterminate elements.","Unpacks and interleave 16-bit integers from the high half …","Unpacks and interleave 32-bit integers from the high half …","Unpacks and interleave 64-bit integers from the high half …","Unpacks and interleave 8-bit integers from the high half …","The resulting __m128d element is composed by the low-order …","Unpacks and interleave single-precision (32-bit) …","Unpacks and interleave 16-bit integers from the low half …","Unpacks and interleave 32-bit integers from the low half …","Unpacks and interleave 64-bit integers from the low half …","Unpacks and interleave 8-bit integers from the low half of …","The resulting __m128d element is composed by the …","Unpacks and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Computes the bitwise XOR of a and b.","Bitwise exclusive OR of packed single-precision (32-bit) …","Computes the bitwise XOR of 128 bits (representing integer …","Unsigned multiply without affecting flags.","Scatter contiguous low order bits of a to the result at …","Gathers the bits of x specified by the mask into the …","Counts the bits that are set.","Read a hardware generated 16-bit random value and store …","Read a hardware generated 32-bit random value and store …","Read a 16-bit NIST SP800-90B and SP800-90C compliant …","Read a 32-bit NIST SP800-90B and SP800-90C compliant …","Reads the current value of the processor’s time-stamp …","Store 32-bit mask from a into memory.","Store 64-bit mask from a into memory.","Adds unsigned 32-bit integers a and b with unsigned 8-bit …","Clears all bits below the least significant zero of x and …","Clears all bits below the least significant zero of x and …","Counts the number of trailing least significant zero bits.","Sets all bits below the least significant one of x and …","Sets all bits below the least significant one of x and …","Forces a restricted transactional memory (RTM) region to …","Retrieves the parameter passed to _xabort when _xbegin’s …","Specifies the start of a restricted transactional memory …","Specifies the end of a restricted transactional memory …","Reads the contents of the extended control register XCR …","Performs a full or partial restore of the enabled …","Performs a full or partial restore of the enabled …","Performs a full or partial save of the enabled processor …","Performs a full or partial save of the enabled processor …","Performs a full or partial save of the enabled processor …","Performs a full or partial save of the enabled processor …","Copies 64-bits from val to the extended control register (…","Queries whether the processor is executing in a …","EAX register.","EBX register.","ECX register.","EDX register.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Does the host support the cpuid instruction?","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Result of the cpuid instruction.","Equal (ordered non-signaling)","Equal (ordered signaling)","Equal (unordered non-signaling)","Equal (unordered signaling)","False (ordered non-signaling)","False (ordered signaling)","Greater-than-or-equal (ordered non-signaling)","Greater-than-or-equal (ordered signaling)","Greater-than (ordered non-signaling)","Greater-than (ordered signaling)","Less-than-or-equal (ordered non-signaling)","Less-than-or-equal (ordered signaling)","Less-than (ordered non-signaling)","Less-than (ordered signaling)","Not-equal (ordered non-signaling)","Not-equal (ordered signaling)","Not-equal (unordered non-signaling)","Not-equal (unordered signaling)","Not-greater-than-or-equal (unordered non-signaling)","Not-greater-than-or-equal (unordered signaling)","Not-greater-than (unordered non-signaling)","Not-greater-than (unordered signaling)","Not-less-than-or-equal (unordered non-signaling)","Not-less-than-or-equal (unordered signaling)","Not-less-than (unordered non-signaling)","Not-less-than (unordered signaling)","Ordered (non-signaling)","Ordered (signaling)","True (unordered non-signaling)","True (unordered signaling)","Unordered (non-signaling)","Unordered (signaling)","The _MM_CMPINT_ENUM type used to specify comparison …","Equal","False","Less-than-or-equal","Less-than","Not-equal","Not less-than-or-equal","Not less-than","True","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _MM_GET_EXCEPTION_STATE","See _mm_setcsr","See _mm_setcsr","See _MM_GET_FLUSH_ZERO_MODE","See _mm_setcsr","See _mm_setcsr","round up and do not suppress exceptions","use MXCSR.RC; see vendor::_MM_SET_ROUNDING_MODE","round down and do not suppress exceptions","use MXCSR.RC and suppress exceptions; see …","round to nearest and do not suppress exceptions","suppress exceptions","do not suppress exceptions","use MXCSR.RC and do not suppress exceptions; see …","round to nearest","round down","round up","truncate","truncate and do not suppress exceptions","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_prefetch.","See _mm_prefetch.","See _mm_prefetch.","See _mm_prefetch.","See _mm_prefetch.","See _mm_prefetch.","The MM_MANTISSA_NORM_ENUM type used to specify mantissa …","The MM_MANTISSA_SIGN_ENUM type used to specify mantissa …"],"6":["interval [1 2)","interval [0.5 1)","interval [0.5 2)","interval [0.75 1.5)","DEST = NaN if sign(SRC) = 1","sign = sign(SRC)","sign = 0","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _MM_GET_EXCEPTION_MASK","See _mm_setcsr","See _mm_setcsr","The MM_PERM_ENUM type used to specify shuffle operations …","See _mm_setcsr","See _MM_GET_ROUNDING_MODE","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","See _mm_setcsr","A utility function for creating masks to use with Intel …","Transpose the 4x4 matrix formed by 4 rows of __m128 in …","<strong>Mask only</strong>: return the bit mask","For each character in a find if it is in b <em>(Default)</em>","The strings defined by a and b are equal","Search for the defined substring in the target","For each character in a determine if …","<strong>Index only</strong>: return the least significant bit <em>(Default)</em>","Negates results only before the end of the string","Do not negate results before the end of the string","<strong>Index only</strong>: return the most significant bit","Negates results","Do not negate results <em>(Default)</em>","String contains signed 8-bit characters","String contains unsigned 16-bit characters","String contains unsigned 8-bit characters <em>(Default)</em>","<strong>Mask only</strong>: return the byte mask","String contains unsigned 16-bit characters","Transaction abort due to the transaction using too much …","Transaction abort due to a memory conflict with another …","Transaction abort due to a debug trap.","Transaction explicitly aborted with xabort. The parameter …","Transaction abort in a inner nested transaction.","Transaction retry is possible.","Transaction successfully started.","XFEATURE_ENABLED_MASK for XCR","See __cpuid_count.","Returns the result of the cpuid instruction for a given …","Returns the highest-supported leaf (EAX) and sub-leaf (ECX…","128-bit wide set of four f32 types x86-specific","128-bit wide set of eight u16 types x86-specific","128-bit wide set of two f64 types x86-specific","128-bit wide integer vector type x86-specific","256-bit wide set of eight f32 types x86-specific","256-bit wide set of 16 u16 types x86-specific","256-bit wide set of four f64 types x86-specific","256-bit wide integer vector type x86-specific","512-bit wide set of sixteen f32 types x86-specific","512-bit wide set of 32 u16 types x86-specific","512-bit wide set of eight f64 types x86-specific","512-bit wide integer vector type x86-specific","The __mmask16 type used in AVX-512 intrinsics a 16-bit …","The __mmask32 type used in AVX-512 intrinsics a 32-bit …","The __mmask64 type used in AVX-512 intrinsics a 64-bit …","The __mmask8 type used in AVX-512 intrinsics a 8-bit …","Reads the current value of the processor’s time-stamp …","Adds unsigned 32-bit integers a and b with unsigned 8-bit …","Adds unsigned 64-bit integers a and b with unsigned 8-bit …","Adds unsigned 32-bit integers a and b with unsigned 8-bit …","Adds unsigned 64-bit integers a and b with unsigned 8-bit …","Bitwise logical AND of inverted a with b.","Bitwise logical AND of inverted a with b.","Extracts bits of a specified by control into the least …","Extracts bits of a specified by control into the least …","Extracts bits in range [start start + length) from a into …","Extracts bits in range [start start + length) from a into …","Returns the bit in position b of the memory addressed by p.","Returns the bit in position b of the memory addressed by p.","Returns the bit in position b of the memory addressed by p…","Returns the bit in position b of the memory addressed by p…","Returns the bit in position b of the memory addressed by p…","Returns the bit in position b of the memory addressed by p…","Returns the bit in position b of the memory addressed by p…","Returns the bit in position b of the memory addressed by p…","Clears all bits below the least significant zero bit of x.","Clears all bits below the least significant zero bit of x.","Sets all bits of x to 1 except for the least significant …","Sets all bits of x to 1 except for the least significant …","Sets the least significant zero bit of x and clears all …","Sets the least significant zero bit of x and clears all …","Sets the least significant zero bit of x and clears all …","Sets the least significant zero bit of x and clears all …","Sets the least significant zero bit of x.","Sets the least significant zero bit of x.","Sets all bits of x below the least significant one.","Sets all bits of x below the least significant one.","Extracts lowest set isolated bit.","Extracts lowest set isolated bit.","Clears least significant bit and sets all other bits.","Clears least significant bit and sets all other bits.","Gets mask up to lowest set bit.","Gets mask up to lowest set bit.","Resets the lowest set bit of x.","Resets the lowest set bit of x.","Returns an integer with the reversed byte order of x","Returns an integer with the reversed byte order of x","Zeroes higher bits of a &gt;= index.","Zeroes higher bits of a &gt;= index.","Restores the XMM MMX MXCSR and x87 FPU registers from …","Restores the XMM MMX MXCSR and x87 FPU registers from …","Saves the x87 FPU MMX technology XMM and MXCSR …","Saves the x87 FPU MMX technology XMM and MXCSR …","Add 32-bit masks in a and b and store the result in k.","Add 64-bit masks in a and b and store the result in k.","Compute the bitwise AND of 16-bit masks a and b and store …","Compute the bitwise AND of 32-bit masks a and b and store …","Compute the bitwise AND of 64-bit masks a and b and store …","Compute the bitwise NOT of 16-bit masks a and then AND …","Compute the bitwise NOT of 32-bit masks a and then AND …","Compute the bitwise NOT of 64-bit masks a and then AND …","Compute the bitwise NOT of 16-bit mask a and store the …","Compute the bitwise NOT of 32-bit mask a and store the …","Compute the bitwise NOT of 64-bit mask a and store the …","Compute the bitwise OR of 16-bit masks a and b and store …","Compute the bitwise OR of 32-bit masks a and b and store …","Compute the bitwise OR of 64-bit masks a and b and store …","Compute the bitwise XNOR of 16-bit masks a and b and …","Compute the bitwise XNOR of 32-bit masks a and b and …","Compute the bitwise XNOR of 64-bit masks a and b and …","Compute the bitwise XOR of 16-bit masks a and b and store …","Compute the bitwise XOR of 32-bit masks a and b and store …","Compute the bitwise XOR of 64-bit masks a and b and store …","Load 32-bit mask from memory into k.","Load 64-bit mask from memory into k.","Counts the leading most significant zero bits.","Counts the leading most significant zero bits.","Computes the absolute values of packed 16-bit integers in a…","Computes the absolute values of packed 32-bit integers in a…","Compute the absolute value of packed signed 64-bit …","Computes the absolute values of packed 8-bit integers in a.","Adds packed 16-bit integers in a and b.","Adds packed 32-bit integers in a and b.","Adds packed 64-bit integers in a and b.","Adds packed 8-bit integers in a and b.","Adds packed double-precision (64-bit) floating-point …","Adds packed single-precision (32-bit) floating-point …","Adds packed 16-bit integers in a and b using saturation.","Adds packed 8-bit integers in a and b using saturation.","Adds packed unsigned 16-bit integers in a and b using …","Adds packed unsigned 8-bit integers in a and b using …","Alternatively adds and subtracts packed double-precision …","Alternatively adds and subtracts packed single-precision …","Performs one round of an AES decryption flow on each …","Performs the last round of an AES decryption flow on each …","Performs one round of an AES encryption flow on each …","Performs the last round of an AES encryption flow on each …","Concatenate a and b into a 64-byte immediate result shift …","Concatenate a and b into a 64-byte immediate result shift …","Concatenates pairs of 16-byte blocks in a and b into a …","Computes the bitwise AND of a packed double-precision …","Computes the bitwise AND of packed single-precision …","Computes the bitwise AND of 256 bits (representing integer …","Computes the bitwise NOT of packed double-precision …","Computes the bitwise NOT of packed single-precision …","Computes the bitwise NOT of 256 bits (representing integer …","Averages packed unsigned 16-bit integers in a and b.","Averages packed unsigned 8-bit integers in a and b.","Considers the input b as packed 64-bit integers and c as …","Blends packed 16-bit integers from a and b using control …","Blends packed 32-bit integers from a and b using control …","Blends packed double-precision (64-bit) floating-point …","Blends packed single-precision (32-bit) floating-point …","Blends packed 8-bit integers from a and b using mask.","Blends packed double-precision (64-bit) floating-point …","Blends packed single-precision (32-bit) floating-point …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcasts 128 bits from memory (composed of 2 packed …","Broadcasts 128 bits from memory (composed of 4 packed …","Broadcasts a double-precision (64-bit) floating-point …","Broadcasts a single-precision (32-bit) floating-point …","Broadcasts the low packed 8-bit integer from a to all …","Broadcasts the low packed 32-bit integer from a to all …","Broadcast the low 8-bits from input mask k to all 64-bit …","Broadcast the low 16-bits from input mask k to all 32-bit …","Broadcasts the low packed 64-bit integer from a to all …","Broadcasts the low double-precision (64-bit) …","Broadcasts 128 bits of integer data from a to all 128-bit …","Broadcasts the low single-precision (32-bit) …","Broadcasts the low packed 16-bit integer from a to all …","Shifts 128-bit lanes in a left by imm8 bytes while …","Shifts 128-bit lanes in a right by imm8 bytes while …","Casts vector of type __m128d to type __m256d; the upper …","Casts vector of type __m256d to type __m128d.","Cast vector of type __m256d to type __m256.","Casts vector of type __m256d to type __m256i.","Casts vector of type __m128 to type __m256; the upper 128 …","Casts vector of type __m256 to type __m128.","Cast vector of type __m256 to type __m256d.","Casts vector of type __m256 to type __m256i.","Casts vector of type __m128i to type __m256i; the upper …","Casts vector of type __m256i to type __m256d.","Casts vector of type __m256i to type __m256.","Casts vector of type __m256i to type __m128i.","Rounds packed double-precision (64-bit) floating point …","Rounds packed single-precision (32-bit) floating point …","Performs a carry-less multiplication of two 64-bit …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compares packed double-precision (64-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compares packed single-precision (32-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compares packed 16-bit integers in a and b for equality.","Compare packed signed 16-bit integers in a and b for …","Compares packed 32-bit integers in a and b for equality.","Compare packed 32-bit integers in a and b for equality …","Compares packed 64-bit integers in a and b for equality.","Compare packed 64-bit integers in a and b for equality …","Compares packed 8-bit integers in a and b for equality.","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares packed 16-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compares packed 32-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compares packed 64-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compares packed 8-bit integers in a and b for greater-than.","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Sign-extend 16-bit integers to 32-bit integers.","Sign-extend 16-bit integers to 64-bit integers.","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign-extend 32-bit integers to 64-bit integers.","Convert packed 32-bit integers in a to packed 8-bit …","Converts packed 32-bit integers in a to packed …","Converts packed 32-bit integers in a to packed …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign-extend 8-bit integers to 16-bit integers.","Sign-extend 8-bit integers to 32-bit integers.","Sign-extend 8-bit integers to 64-bit integers.","Zeroes extend packed unsigned 16-bit integers in a to …","Zero-extend the lower four unsigned 16-bit integers in a …","Zero-extend unsigned 32-bit integers in a to 64-bit …","Convert packed unsigned 32-bit integers in a to packed …","Zero-extend unsigned 8-bit integers in a to 16-bit …","Zero-extend the lower eight unsigned 8-bit integers in a …","Zero-extend the lower four unsigned 8-bit integers in a to …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Converts packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Converts packed double-precision (64-bit) floating-point …","Converts the 8 x 16-bit half-precision float values in the …","Converts packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Converts packed single-precision (32-bit) floating-point …","Converts the 8 x 32-bit float values in the 256-bit vector …","Returns the first element of the input vector of …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Returns the first element of the input vector of [8 x i32].","Returns the first element of the input vector of …","Converts packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Converts packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Computes the division of each of the 4 packed 64-bit …","Computes the division of each of the 8 packed 32-bit …","Conditionally multiplies the packed single-precision …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Extracts a 16-bit integer from a selected with INDEX. …","Extracts a 32-bit integer from a selected with INDEX.","Extracts a 64-bit integer from a selected with INDEX.","Extracts an 8-bit integer from a selected with INDEX. …","Extracts 128 bits (composed of 2 packed double-precision …","Extracts 128 bits (composed of 4 packed single-precision …","Extracts 128 bits (composed of integer data) from a …","Extract 128 bits (composed of 4 packed single-precision …","Extracts 128 bits (of integer data) from a selected with …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Rounds packed double-precision (64-bit) floating point …","Rounds packed single-precision (32-bit) floating point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Horizontally adds adjacent pairs of 16-bit integers in a …","Horizontally adds adjacent pairs of 32-bit integers in a …","Horizontal addition of adjacent pairs in the two packed …","Horizontal addition of adjacent pairs in the two packed …","Horizontally adds adjacent pairs of 16-bit integers in a …","Horizontally subtract adjacent pairs of 16-bit integers in …","Horizontally subtract adjacent pairs of 32-bit integers in …","Horizontal subtraction of adjacent pairs in the two packed …","Horizontal subtraction of adjacent pairs in the two packed …","Horizontally subtract adjacent pairs of 16-bit integers in …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Scatter 64-bit integers from a into memory using 32-bit …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Copies a to result and inserts the 16-bit integer i into …","Copies a to result and inserts the 32-bit integer i into …","Copies a to result and insert the 64-bit integer i into …","Copies a to result and inserts the 8-bit integer i into …","Copies a to result then inserts 128 bits (composed of 2 …","Copies a to result then inserts 128 bits (composed of 4 …","Copies a to result then inserts 128 bits from b into …","Copy a to dst then insert 128 bits (composed of 4 packed …","Copies a to dst then insert 128 bits (of integer data) …","Copy a to dst then insert 128 bits (composed of 4 packed …","Loads 256-bits of integer data from unaligned memory into …","Load 256-bits (composed of 8 packed 32-bit integers) from …","Load 256-bits (composed of 4 packed 64-bit integers) from …","Loads 256-bits (composed of 4 packed double-precision …","Loads 256-bits (composed of 8 packed single-precision …","Loads 256-bits of integer data from memory into result. …","Loads two 128-bit values (composed of 4 packed …","Loads two 128-bit values (composed of 2 packed …","Loads two 128-bit values (composed of integer data) from …","Load 256-bits (composed of 16 packed 16-bit integers) from …","Load 256-bits (composed of 8 packed 32-bit integers) from …","Load 256-bits (composed of 4 packed 64-bit integers) from …","Load 256-bits (composed of 32 packed 8-bit integers) from …","Loads 256-bits (composed of 4 packed double-precision …","Loads 256-bits (composed of 8 packed single-precision …","Loads 256-bits of integer data from memory into result. …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiplies packed signed 16-bit integers in a and b …","Vertically multiplies each unsigned 8-bit integer from a …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Compute the absolute value of packed signed 16-bit …","Compute the absolute value of packed signed 32-bit …","Compute the absolute value of packed signed 64-bit …","Compute the absolute value of packed signed 8-bit integers …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 64-byte immediate result shift …","Concatenate a and b into a 64-byte immediate result shift …","Concatenate pairs of 16-byte blocks in a and b into a …","Performs element-by-element bitwise AND between packed …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Considers the input b as packed 64-bit integers and c as …","Blend packed 16-bit integers from a and b using control …","Blend packed 32-bit integers from a and b using control …","Blend packed 64-bit integers from a and b using control …","Blend packed 8-bit integers from a and b using control …","Blend packed double-precision (64-bit) floating-point …","Blend packed single-precision (32-bit) floating-point …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low double-precision (64-bit) floating-point …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for equality …","Compare packed 64-bit integers in a and b for equality …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 32-bit integers in a to packed 16-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 4 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in the low 8 …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 8 …","Zero extend packed unsigned 8-bit integers in the low 4 …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Extract 128 bits (composed of 4 packed single-precision …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using …","Move packed 32-bit integers from a to dst using writemask …","Move packed 64-bit integers from a to dst using writemask …","Move packed 8-bit integers from a into dst using writemask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast 16-bit integer a to all elements of dst using …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle 8-bit integers in a within 128-bit lanes using the …","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Store packed 16-bit integers from a into memory using …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed 8-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Loads packed 32-bit integers from memory pointed by …","Loads packed 64-bit integers from memory pointed by …","Loads packed double-precision (64-bit) floating-point …","Loads packed single-precision (32-bit) floating-point …","Stores packed 32-bit integers from a into memory pointed …","Stores packed 64-bit integers from a into memory pointed …","Stores packed double-precision (64-bit) floating-point …","Stores packed single-precision (32-bit) floating-point …","Compute the absolute value of packed signed 16-bit …","Compute the absolute value of packed signed 32-bit …","Compute the absolute value of packed signed 64-bit …","Compute the absolute value of packed signed 8-bit integers …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 64-byte immediate result shift …","Concatenate a and b into a 64-byte immediate result shift …","Concatenate pairs of 16-byte blocks in a and b into a …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low double-precision (64-bit) floating-point …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 4 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in the low 8 …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 8 …","Zero extend packed unsigned 8-bit integers in the low 4 …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Extract 128 bits (composed of 4 packed single-precision …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using zeromask …","Move packed 32-bit integers from a into dst using zeromask …","Move packed 64-bit integers from a into dst using zeromask …","Move packed 8-bit integers from a into dst using zeromask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle packed 8-bit integers in a according to shuffle …","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Compares packed 16-bit integers in a and b and returns …","Compares packed 32-bit integers in a and b and returns …","Compare packed signed 64-bit integers in a and b and …","Compares packed 8-bit integers in a and b and returns the …","Compares packed unsigned 16-bit integers in a and b and …","Compares packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compares packed unsigned 8-bit integers in a and b and …","Compares packed double-precision (64-bit) floating-point …","Compares packed single-precision (32-bit) floating-point …","Compares packed 16-bit integers in a and b and returns …","Compares packed 32-bit integers in a and b and returns …","Compare packed signed 64-bit integers in a and b and …","Compares packed 8-bit integers in a and b and returns the …","Compares packed unsigned 16-bit integers in a and b and …","Compares packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compares packed unsigned 8-bit integers in a and b and …","Compares packed double-precision (64-bit) floating-point …","Compares packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Creates mask from the most significant bit of each 8-bit …","Sets each bit of the returned mask based on the most …","Sets each bit of the returned mask based on the most …","Set each bit of mask register k based on the most …","Set each bit of mask register k based on the most …","Set each packed 16-bit integer in dst to all ones or all …","Set each packed 8-bit integer in dst to all ones or all …","Computes the sum of absolute differences (SADs) of …","Multiplies the low 32-bit integers from each packed 64-bit …","Multiplies the low unsigned 32-bit integers from each …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies the packed 16-bit integers in a and b producing","Multiplies the packed unsigned 16-bit integers in a and b …","Multiplies packed 16-bit integers in a and b producing …","Multiplies the packed 16-bit integers in a and b producing","Multiplies the packed 32-bit integers in a and b producing","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Computes the bitwise OR packed double-precision (64-bit) …","Computes the bitwise OR packed single-precision (32-bit) …","Computes the bitwise OR of 256 bits (representing integer …","Converts packed 16-bit integers from a and b to packed …","Converts packed 32-bit integers from a and b to packed …","Converts packed 16-bit integers from a and b to packed …","Converts packed 32-bit integers from a and b to packed …","Shuffles 256 bits (composed of 4 packed double-precision …","Shuffles 256 bits (composed of 8 packed single-precision …","Shuffles 128-bits (composed of integer data) selected by …","Shuffles 128-bits of integer data selected by imm8 from a …","Permutes 64-bit integers from a using control mask imm8.","Shuffles 64-bit floating-point elements in a across lanes …","Shuffles double-precision (64-bit) floating-point elements …","Shuffles single-precision (32-bit) floating-point elements …","Permutes packed 32-bit integers from a according to the …","Shuffles eight 32-bit floating-point elements in a across …","Shuffles double-precision (64-bit) floating-point elements …","Shuffles single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Computes the approximate reciprocal of packed …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rounds packed double-precision (64-bit) floating point …","Rounds packed single-precision (32-bit) floating point …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Computes the approximate reciprocal square root of packed …","Computes the absolute differences of packed unsigned 8-bit …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcasts 16-bit integer a to all elements of returned …","Broadcasts 32-bit integer a to all elements of returned …","Broadcasts 64-bit integer a to all elements of returned …","Broadcasts 8-bit integer a to all elements of returned …","Broadcasts double-precision (64-bit) floating-point value a…","Broadcasts single-precision (32-bit) floating-point value a…","Sets packed 16-bit integers in returned vector with the …","Sets packed 32-bit integers in returned vector with the …","Sets packed 64-bit integers in returned vector with the …","Sets packed 8-bit integers in returned vector with the …","Sets packed __m256 returned vector with the supplied …","Sets packed __m256d returned vector with the supplied …","Sets packed __m256i returned vector with the supplied …","Sets packed double-precision (64-bit) floating-point …","Sets packed single-precision (32-bit) floating-point …","Sets packed 16-bit integers in returned vector with the …","Sets packed 32-bit integers in returned vector with the …","Sets packed 64-bit integers in returned vector with the …","Sets packed 8-bit integers in returned vector with the …","Sets packed __m256 returned vector with the supplied …","Sets packed __m256d returned vector with the supplied …","Sets packed __m256i returned vector with the supplied …","Sets packed double-precision (64-bit) floating-point …","Sets packed single-precision (32-bit) floating-point …","Returns vector of type __m256d with all elements set to …","Returns vector of type __m256 with all elements set to …","Returns vector of type __m256i with all elements set to …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffles 32-bit integers in 128-bit lanes of a using the …","Shuffles bytes from a according to the content of b.","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffles double-precision (64-bit) floating-point elements …","Shuffles single-precision (32-bit) floating-point elements …","Shuffles 16-bit integers in the high 64 bits of 128-bit …","Shuffles 16-bit integers in the low 64 bits of 128-bit …","Negates packed 16-bit integers in a when the corresponding …","Negates packed 32-bit integers in a when the corresponding …","Negates packed 8-bit integers in a when the corresponding …","Shifts packed 16-bit integers in a left by count while …","Shifts packed 32-bit integers in a left by count while …","Shifts packed 64-bit integers in a left by count while …","Shifts packed 16-bit integers in a left by IMM8 while …","Shifts packed 32-bit integers in a left by IMM8 while …","Shifts packed 64-bit integers in a left by IMM8 while …","Shifts 128-bit lanes in a left by imm8 bytes while …","Shift packed 16-bit integers in a left by the amount …","Shifts packed 32-bit integers in a left by the amount …","Shifts packed 64-bit integers in a left by the amount …","Returns the square root of packed double-precision …","Returns the square root of packed single-precision …","Shifts packed 16-bit integers in a right by count while …","Shifts packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shifts packed 16-bit integers in a right by IMM8 while …","Shifts packed 32-bit integers in a right by IMM8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shifts packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shifts packed 16-bit integers in a right by count while …","Shifts packed 32-bit integers in a right by count while …","Shifts packed 64-bit integers in a right by count while …","Shifts packed 16-bit integers in a right by IMM8 while …","Shifts packed 32-bit integers in a right by IMM8 while …","Shifts packed 64-bit integers in a right by IMM8 while …","Shifts 128-bit lanes in a right by imm8 bytes while …","Shift packed 16-bit integers in a right by the amount …","Shifts packed 32-bit integers in a right by the amount …","Shifts packed 64-bit integers in a right by the amount …","Store 256-bits (composed of 8 packed 32-bit integers) from …","Store 256-bits (composed of 4 packed 64-bit integers) from …","Stores 256-bits (composed of 4 packed double-precision …","Stores 256-bits (composed of 8 packed single-precision …","Stores 256-bits of integer data from a into memory. …","Stores the high and low 128-bit halves (each composed of 4 …","Stores the high and low 128-bit halves (each composed of 2 …","Stores the high and low 128-bit halves (each composed of …","Store 256-bits (composed of 16 packed 16-bit integers) …","Store 256-bits (composed of 8 packed 32-bit integers) from …","Store 256-bits (composed of 4 packed 64-bit integers) from …","Store 256-bits (composed of 32 packed 8-bit integers) from …","Stores 256-bits (composed of 4 packed double-precision …","Stores 256-bits (composed of 8 packed single-precision …","Stores 256-bits of integer data from a into memory. …","Moves double-precision values from a 256-bit vector of …","Moves single-precision floating point values from a …","Moves integer data from a 256-bit integer vector to a …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtracts packed double-precision (64-bit) floating-point …","Subtracts packed single-precision (32-bit) floating-point …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing integer …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing integer …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing …","Computes the bitwise AND of 256 bits (representing integer …","Returns vector of type __m256d with indeterminate elements.","Returns vector of type __m256 with indeterminate elements. …","Returns vector of type __m256i with with indeterminate …","Unpacks and interleave 16-bit integers from the high half …","Unpacks and interleave 32-bit integers from the high half …","Unpacks and interleave 64-bit integers from the high half …","Unpacks and interleave 8-bit integers from the high half …","Unpacks and interleave double-precision (64-bit) …","Unpacks and interleave single-precision (32-bit) …","Unpacks and interleave 16-bit integers from the low half …","Unpacks and interleave 32-bit integers from the low half …","Unpacks and interleave 64-bit integers from the low half …","Unpacks and interleave 8-bit integers from the low half of …","Unpacks and interleave double-precision (64-bit) …","Unpacks and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Computes the bitwise XOR of packed double-precision …","Computes the bitwise XOR of packed single-precision …","Computes the bitwise XOR of 256 bits (representing integer …","Zeroes the contents of all XMM or YMM registers.","Zeroes the upper 128 bits of all YMM registers; the lower …","Constructs a 256-bit floating-point vector of [4 x double] …","Constructs a 256-bit floating-point vector of [8 x float] …","Constructs a 256-bit integer vector from a 128-bit integer …","Compute the absolute value of packed signed 16-bit …","Computes the absolute values of packed 32-bit integers in a…","Compute the absolute value of packed signed 64-bit …","Compute the absolute value of packed signed 8-bit integers …","Finds the absolute value of each packed double-precision …","Finds the absolute value of each packed single-precision …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Performs one round of an AES decryption flow on each …","Performs the last round of an AES decryption flow on each …","Performs one round of an AES encryption flow on each …","Performs the last round of an AES encryption flow on each …","Concatenate a and b into a 128-byte immediate result …","Concatenate a and b into a 128-byte immediate result …","Concatenate pairs of 16-byte blocks in a and b into a …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of 512 bits (composed of packed …","Compute the bitwise AND of 512 bits (representing integer …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of 512 bits (composed of packed …","Compute the bitwise NOT of 512 bits (representing integer …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Considers the input b as packed 64-bit integers and c as …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed double-precision (64-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcast the 4 packed 64-bit integers from a to all …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low 8-bits from input mask k to all 64-bit …","Broadcast the low 16-bits from input mask k to all 32-bit …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low double-precision (64-bit) floating-point …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Shift 128-bit lanes in a left by imm8 bytes while shifting …","Shift 128-bit lanes in a right by imm8 bytes while …","Cast vector of type __m128d to type __m512d; the upper 384 …","Cast vector of type __m256d to type __m512d; the upper 256 …","Cast vector of type __m512d to type __m128d. This …","Cast vector of type __m512d to type __m256d. This …","Cast vector of type __m512d to type __m512. This intrinsic …","Cast vector of type __m512d to type __m512i. This …","Cast vector of type __m128 to type __m512; the upper 384 …","Cast vector of type __m256 to type __m512; the upper 256 …","Cast vector of type __m512 to type __m128. This intrinsic …","Cast vector of type __m512 to type __m256. This intrinsic …","Cast vector of type __m512 to type __m512d. This intrinsic …","Cast vector of type __m512 to type __m512i. This intrinsic …","Cast vector of type __m128i to type __m512i; the upper 384 …","Cast vector of type __m256i to type __m512i; the upper 256 …","Cast vector of type __m512i to type __m512d. This …","Cast vector of type __m512i to type __m512. This intrinsic …","Cast vector of type __m512i to type __m128i. This …","Cast vector of type __m512i to type __m256i. This …","Performs a carry-less multiplication of two 64-bit …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for equality …","Compare packed 64-bit integers in a and b for equality …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed signed 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Performs element-by-element conversion of the lower half …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 8 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Performs element-by-element conversion of the lower half …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 8 …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Performs an element-by-element conversion of packed …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Performs element-by-element conversion of the lower half …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Copy the lower 32-bit integer in a to dst.","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Extract 128 bits (composed of 4 packed single-precision …","Extract 256 bits (composed of 4 packed double-precision …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Extract 256 bits (composed of 4 packed 64-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Gather 32-bit integers from memory using 32-bit indices. …","Gather 64-bit integers from memory using 32-bit indices. …","Gather double-precision (64-bit) floating-point elements …","Gather single-precision (32-bit) floating-point elements …","Scatter 32-bit integers from a into memory using 32-bit …","Scatter 64-bit integers from a into memory using 32-bit …","Scatter double-precision (64-bit) floating-point elements …","Scatter single-precision (32-bit) floating-point elements …","Gather 32-bit integers from memory using 64-bit indices. …","Gather 64-bit integers from memory using 64-bit indices. …","Gather double-precision (64-bit) floating-point elements …","Gather single-precision (32-bit) floating-point elements …","Scatter 32-bit integers from a into memory using 64-bit …","Scatter 64-bit integers from a into memory using 64-bit …","Scatter double-precision (64-bit) floating-point elements …","Scatter single-precision (32-bit) floating-point elements …","Copy a to dst then insert 128 bits (composed of 4 packed …","Copy a to dst then insert 256 bits (composed of 4 packed …","Copy a to dst then insert 128 bits (composed of 4 packed …","Copy a to dst then insert 256 bits (composed of 4 packed …","Converts integer mask into bitmask storing the result in …","Compute the bitwise AND of 16-bit masks a and b and store …","Compute the bitwise NOT of 16-bit masks a and then AND …","Copy 16-bit mask a to k.","Compute the bitwise NOT of 16-bit mask a and store the …","Compute the bitwise OR of 16-bit masks a and b and store …","Performs bitwise OR between k1 and k2 storing the result …","Unpack and interleave 8 bits from masks a and b and store …","Compute the bitwise XNOR of 16-bit masks a and b and …","Compute the bitwise XOR of 16-bit masks a and b and store …","Load 512-bits (composed of 16 packed 32-bit integers) from …","Load 512-bits (composed of 8 packed 64-bit integers) from …","Load 512-bits (composed of 8 packed double-precision …","Load 512-bits (composed of 16 packed single-precision …","Load 512-bits of integer data from memory into dst. …","Load 512-bits (composed of 32 packed 16-bit integers) from …","Load 512-bits (composed of 16 packed 32-bit integers) from …","Load 512-bits (composed of 8 packed 64-bit integers) from …","Load 512-bits (composed of 64 packed 8-bit integers) from …","Loads 512-bits (composed of 8 packed double-precision …","Loads 512-bits (composed of 16 packed single-precision …","Load 512-bits of integer data from memory into dst. …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiply packed signed 16-bit integers in a and b …","Vertically multiply each unsigned 8-bit integer from a …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Converts bit mask k1 into an integer value storing the …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Compute the absolute value of packed signed 16-bit …","Computes the absolute value of packed 32-bit integers in a…","Compute the absolute value of packed signed 64-bit …","Compute the absolute value of packed signed 8-bit integers …","Finds the absolute value of each packed double-precision …","Finds the absolute value of each packed single-precision …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 128-byte immediate result …","Concatenate a and b into a 128-byte immediate result …","Concatenate pairs of 16-byte blocks in a and b into a …","Performs element-by-element bitwise AND between packed …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Considers the input b as packed 64-bit integers and c as …","Blend packed 16-bit integers from a and b using control …","Blend packed 32-bit integers from a and b using control …","Blend packed 64-bit integers from a and b using control …","Blend packed 8-bit integers from a and b using control …","Blend packed double-precision (64-bit) floating-point …","Blend packed single-precision (32-bit) floating-point …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed double-precision (64-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcast the 4 packed 64-bit integers from a to all …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low double-precision (64-bit) floating-point …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for equality …","Compare packed 64-bit integers in a and b for equality …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed signed 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 32-bit integers in a to packed 16-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Performs element-by-element conversion of the lower half …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 8 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Performs element-by-element conversion of the lower half …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 8 …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Performs an element-by-element conversion of packed …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Performs element-by-element conversion of the lower half …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Extract 128 bits (composed of 4 packed single-precision …","Extract 256 bits (composed of 4 packed double-precision …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Extract 256 bits (composed of 4 packed 64-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Gather 32-bit integers from memory using 32-bit indices. …","Gather 64-bit integers from memory using 32-bit indices. …","Gather double-precision (64-bit) floating-point elements …","Gather single-precision (32-bit) floating-point elements …","Scatter 32-bit integers from a into memory using 32-bit …","Scatter 64-bit integers from a into memory using 32-bit …","Scatter double-precision (64-bit) floating-point elements …","Scatter single-precision (32-bit) floating-point elements …","Gather 32-bit integers from memory using 64-bit indices. …","Gather 64-bit integers from memory using 64-bit indices. …","Gather double-precision (64-bit) floating-point elements …","Gather single-precision (32-bit) floating-point elements …","Scatter 32-bit integers from a into memory using 64-bit …","Scatter 64-bit integers from a into memory using 64-bit …","Scatter double-precision (64-bit) floating-point elements …","Scatter single-precision (32-bit) floating-point elements …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 256 bits (composed of 4 packed …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 256 bits (composed of 4 packed …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using …","Move packed 32-bit integers from a to dst using writemask …","Move packed 64-bit integers from a to dst using writemask …","Move packed 8-bit integers from a into dst using writemask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","Multiplies elements in packed 64-bit integer vectors a and …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 32-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …"],"7":["Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Reduce the packed 32-bit integers in a by addition using …","Reduce the packed 64-bit integers in a by addition using …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by bitwise AND …","Reduce the packed 64-bit integers in a by addition using …","Reduce the packed signed 32-bit integers in a by maximum …","Reduce the packed signed 64-bit integers in a by maximum …","Reduce the packed unsigned 32-bit integers in a by maximum …","Reduce the packed unsigned 64-bit integers in a by maximum …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed signed 32-bit integers in a by maximum …","Reduce the packed signed 64-bit integers in a by maximum …","Reduce the packed unsigned 32-bit integers in a by maximum …","Reduce the packed signed 64-bit integers in a by maximum …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by multiplication …","Reduce the packed 64-bit integers in a by multiplication …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by bitwise OR using …","Reduce the packed 64-bit integers in a by bitwise OR using …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast 16-bit integer a to all elements of dst using …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle 8-bit integers in a within 128-bit lanes using the …","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Store packed 16-bit integers from a into memory using …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed 8-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Compute the absolute value of packed signed 16-bit …","Computes the absolute value of packed 32-bit integers in a…","Compute the absolute value of packed signed 64-bit …","Compute the absolute value of packed signed 8-bit integers …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 128-byte immediate result …","Concatenate a and b into a 128-byte immediate result …","Concatenate pairs of 16-byte blocks in a and b into a …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Broadcast the 4 packed single-precision (32-bit) …","Broadcast the 4 packed double-precision (64-bit) …","Broadcast the 4 packed 32-bit integers from a to all …","Broadcast the 4 packed 64-bit integers from a to all …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low double-precision (64-bit) floating-point …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed signed 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 8 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 8 …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Extract 128 bits (composed of 4 packed single-precision …","Extract 256 bits (composed of 4 packed double-precision …","Extract 128 bits (composed of 4 packed 32-bit integers) …","Extract 256 bits (composed of 4 packed 64-bit integers) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 256 bits (composed of 4 packed …","Copy a to tmp then insert 128 bits (composed of 4 packed …","Copy a to tmp then insert 256 bits (composed of 4 packed …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using zeromask …","Move packed 32-bit integers from a into dst using zeromask …","Move packed 64-bit integers from a into dst using zeromask …","Move packed 8-bit integers from a into dst using zeromask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle packed 8-bit integers in a according to shuffle …","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Set each bit of mask register k based on the most …","Set each bit of mask register k based on the most …","Set each packed 16-bit integer in dst to all ones or all …","Set each packed 8-bit integer in dst to all ones or all …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","Multiplies elements in packed 64-bit integer vectors a and …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Compute the bitwise OR of 512 bits (representing integer …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 32-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 64-bit integers in a within 256-bit lanes using …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 32-bit integers in a across lanes using the …","Shuffle 64-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Reduce the packed 32-bit integers in a by addition. …","Reduce the packed 64-bit integers in a by addition. …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by bitwise AND. …","Reduce the packed 64-bit integers in a by bitwise AND. …","Reduce the packed signed 32-bit integers in a by maximum. …","Reduce the packed signed 64-bit integers in a by maximum. …","Reduce the packed unsigned 32-bit integers in a by …","Reduce the packed unsigned 64-bit integers in a by …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed signed 32-bit integers in a by minimum. …","Reduce the packed signed 64-bit integers in a by minimum. …","Reduce the packed unsigned 32-bit integers in a by …","Reduce the packed unsigned 64-bit integers in a by …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by multiplication. …","Reduce the packed 64-bit integers in a by multiplication. …","Reduce the packed double-precision (64-bit) floating-point …","Reduce the packed single-precision (32-bit) floating-point …","Reduce the packed 32-bit integers in a by bitwise OR. …","Reduce the packed 64-bit integers in a by bitwise OR. …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Compute the absolute differences of packed unsigned 8-bit …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Broadcast 32-bit integer a to all elements of dst.","Broadcast 64-bit integer a to all elements of dst.","Broadcast 8-bit integer a to all elements of dst.","Broadcast 64-bit float a to all elements of dst.","Broadcast 32-bit float a to all elements of dst.","Set packed 32-bit integers in dst with the repeated 4 …","Set packed 64-bit integers in dst with the repeated 4 …","Set packed double-precision (64-bit) floating-point …","Set packed single-precision (32-bit) floating-point …","Set packed 16-bit integers in dst with the supplied values.","Sets packed 32-bit integers in dst with the supplied …","Set packed 64-bit integers in dst with the supplied values.","Set packed 8-bit integers in dst with the supplied values.","Set packed double-precision (64-bit) floating-point …","Sets packed 32-bit integers in dst with the supplied …","Set packed 32-bit integers in dst with the repeated 4 …","Set packed 64-bit integers in dst with the repeated 4 …","Set packed double-precision (64-bit) floating-point …","Set packed single-precision (32-bit) floating-point …","Sets packed 32-bit integers in dst with the supplied …","Set packed 64-bit integers in dst with the supplied values …","Set packed double-precision (64-bit) floating-point …","Sets packed 32-bit integers in dst with the supplied …","Return vector of type __m512 with all elements set to zero.","Return vector of type __m512i with all elements set to …","Returns vector of type __m512d with all elements set to …","Returns vector of type __m512 with all elements set to …","Returns vector of type __m512i with all elements set to …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle packed 8-bit integers in a according to shuffle …","Shuffle 128-bits (composed of 4 single-precision (32-bit) …","Shuffle 128-bits (composed of 2 double-precision (64-bit) …","Shuffle 128-bits (composed of 4 32-bit integers) selected …","Shuffle 128-bits (composed of 2 64-bit integers) selected …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Store 512-bits (composed of 16 packed 32-bit integers) …","Store 512-bits (composed of 8 packed 64-bit integers) from …","Store 512-bits (composed of 8 packed double-precision …","Store 512-bits of integer data from a into memory. …","Store 512-bits of integer data from a into memory. …","Store 512-bits (composed of 32 packed 16-bit integers) …","Store 512-bits (composed of 16 packed 32-bit integers) …","Store 512-bits (composed of 8 packed 64-bit integers) from …","Store 512-bits (composed of 64 packed 8-bit integers) from …","Stores 512-bits (composed of 8 packed double-precision …","Stores 512-bits (composed of 16 packed single-precision …","Store 512-bits of integer data from a into memory. …","Store 512-bits (composed of 8 packed double-precision …","Store 512-bits (composed of 16 packed single-precision …","Store 512-bits of integer data from a into memory using a …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Return vector of type __m512 with indeterminate elements. …","Return vector of type __m512i with indeterminate elements. …","Returns vector of type __m512d with indeterminate elements.","Returns vector of type __m512 with indeterminate elements. …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Compute the bitwise XOR of 512 bits (representing integer …","Cast vector of type __m128d to type __m512d; the upper 384 …","Cast vector of type __m256d to type __m512d; the upper 256 …","Cast vector of type __m128 to type __m512; the upper 384 …","Cast vector of type __m256 to type __m512; the upper 256 …","Cast vector of type __m128i to type __m512i; the upper 384 …","Cast vector of type __m256i to type __m512i; the upper 256 …","Computes the absolute value of each of the packed 16-bit …","Computes the absolute value of each of the packed 32-bit …","Computes the absolute value of packed 8-bit signed …","Adds packed 16-bit integers in a and b.","Adds packed 32-bit integers in a and b.","Adds packed 64-bit integers in a and b.","Adds packed 8-bit integers in a and b.","Adds packed double-precision (64-bit) floating-point …","Adds __m128 vectors.","Add the lower double-precision (64-bit) floating-point …","Add the lower single-precision (32-bit) floating-point …","Returns a new vector with the low element of a replaced by …","Adds the first component of a and b the other components …","Adds packed 16-bit integers in a and b using saturation.","Adds packed 8-bit integers in a and b using saturation.","Adds packed unsigned 16-bit integers in a and b using …","Adds packed unsigned 8-bit integers in a and b using …","Alternatively add and subtract packed double-precision …","Alternatively add and subtract packed single-precision …","Performs one round of an AES decryption flow on data …","Performs the last round of an AES decryption flow on data …","Performs one round of an AES encryption flow on data …","Performs the last round of an AES encryption flow on data …","Performs the InvMixColumns transformation on a.","Assist in expanding the AES cipher key.","Concatenate a and b into a 32-byte immediate result shift …","Concatenate a and b into a 32-byte immediate result shift …","Concatenate 16-byte blocks in a and b into a 32-byte …","Computes the bitwise AND of packed double-precision …","Bitwise AND of packed single-precision (32-bit) …","Computes the bitwise AND of 128 bits (representing integer …","Computes the bitwise NOT of a and then AND with b.","Bitwise AND-NOT of packed single-precision (32-bit) …","Computes the bitwise NOT of 128 bits (representing integer …","Averages packed unsigned 16-bit integers in a and b.","Averages packed unsigned 8-bit integers in a and b.","Considers the input b as packed 64-bit integers and c as …","Blend packed 16-bit integers from a and b using the mask …","Blends packed 32-bit integers from a and b using control …","Blend packed double-precision (64-bit) floating-point …","Blend packed single-precision (32-bit) floating-point …","Blend packed 8-bit integers from a and b using mask","Blend packed double-precision (64-bit) floating-point …","Blend packed single-precision (32-bit) floating-point …","Broadcasts a single-precision (32-bit) floating-point …","Broadcasts the low packed 8-bit integer from a to all …","Broadcasts the low packed 32-bit integer from a to all …","Broadcast the low 8-bits from input mask k to all 64-bit …","Broadcast the low 16-bits from input mask k to all 32-bit …","Broadcasts the low packed 64-bit integer from a to all …","Broadcasts the low double-precision (64-bit) …","Broadcasts the low single-precision (32-bit) …","Broadcasts the low packed 16-bit integer from a to all …","Shifts a left by IMM8 bytes while shifting in zeros.","Shifts a right by IMM8 bytes while shifting in zeros.","Casts a 128-bit floating-point vector of [2 x double] into …","Casts a 128-bit floating-point vector of [2 x double] into …","Casts a 128-bit floating-point vector of [4 x float] into …","Casts a 128-bit floating-point vector of [4 x float] into …","Casts a 128-bit integer vector into a 128-bit …","Casts a 128-bit integer vector into a 128-bit …","Round the packed double-precision (64-bit) floating-point …","Round the packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Invalidates and flushes the cache line that contains p …","Performs a carry-less multiplication of two 64-bit …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compares packed double-precision (64-bit) floating-point …","Compare packed double-precision (64-bit) floating-point …","Compares packed single-precision (32-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compares the lower double-precision (64-bit) …","Compare the lower double-precision (64-bit) floating-point …","Compares the lower single-precision (32-bit) …","Compare the lower single-precision (32-bit) floating-point …","Compares packed 16-bit integers in a and b for equality.","Compare packed signed 16-bit integers in a and b for …","Compares packed 32-bit integers in a and b for equality.","Compare packed 32-bit integers in a and b for equality …","Compares packed 64-bit integers in a and b for equality","Compare packed 64-bit integers in a and b for equality …","Compares packed 8-bit integers in a and b for equality.","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for equality.","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for equality. The …","Compares packed strings in a and b with lengths la and lb …","Compares packed strings in a and b with lengths la and lb …","Compares packed strings a and b with lengths la and lb …","Compares packed strings in a and b with lengths la and lb …","Compares packed strings in a and b with lengths la and lb …","Compares packed strings in a and b with lengths la and lb …","Compares packed strings in a and b with lengths la and lb …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for greater than or …","Compares packed 16-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compares packed 32-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compares packed 64-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compares packed 8-bit integers in a and b for greater-than.","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for greater than. …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compares packed strings with implicit lengths in a and b …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for less than or …","Compares packed 16-bit integers in a and b for less-than.","Compare packed signed 16-bit integers in a and b for …","Compares packed 32-bit integers in a and b for less-than.","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compares packed 8-bit integers in a and b for less-than.","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for less-than.","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for less than. The …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compares corresponding elements in a and b for not-equal.","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for inequality. The …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for …","Compares corresponding elements in a and b for …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Compares the lowest f32 of both inputs for not-less-than. …","Compares corresponding elements in a and b to see if …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Checks if the lowest f32 of both inputs are ordered. The …","Compares corresponding elements in a and b to see if …","Compares each of the four floats in a to the corresponding …","Returns a new vector with the low element of a replaced by …","Checks if the lowest f32 of both inputs are unordered. The …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compares the lower element of a and b for equality.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for …","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for greater-than.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for …","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for less-than.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for not-equal.","Compares two 32-bit floats from the low-order bits of a …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Starting with the initial value in crc return the …","Starting with the initial value in crc return the …","Starting with the initial value in crc return the …","Starting with the initial value in crc return the …","Convert the signed 32-bit integer b to a single-precision …","Convert the signed 64-bit integer b to a double-precision …","Convert the signed 64-bit integer b to a single-precision …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the signed 32-bit integer b to a single-precision …","Convert the signed 64-bit integer b to a double-precision …","Convert the signed 64-bit integer b to a single-precision …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the unsigned 32-bit integer b to a …","Convert the unsigned 64-bit integer b to a …","Convert the unsigned 64-bit integer b to a …","Alias for _mm_cvtsi32_ss.","Alias for _mm_cvtss_si32.","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Converts the lower two packed 32-bit integers in a to …","Converts packed 32-bit integers in a to packed …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 8 bytes of a …","Zeroes extend packed unsigned 16-bit integers in a to …","Zeroes extend packed unsigned 16-bit integers in a to …","Zeroes extend packed unsigned 32-bit integers in a to …","Convert packed unsigned 32-bit integers in a to packed …","Zeroes extend packed unsigned 8-bit integers in a to …","Zeroes extend packed unsigned 8-bit integers in a to …","Zeroes extend packed unsigned 8-bit integers in a to …","Convert the signed 32-bit integer b to a double-precision …","Convert the signed 32-bit integer b to a single-precision …","Convert the signed 64-bit integer b to a double-precision …","Convert the signed 64-bit integer b to a single-precision …","Convert packed single-precision (32-bit) floating-point …","Converts packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Converts packed double-precision (64-bit) floating-point …","Converts the 4 x 16-bit half-precision float values in the …","Converts packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Converts packed single-precision (32-bit) floating-point …","Converts the 4 x 32-bit float values in the 128-bit vector …","Returns the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Converts the lower double-precision (64-bit) …","Converts the lower double-precision (64-bit) …","Alias for _mm_cvtsd_si64","Converts the lower double-precision (64-bit) …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Returns the lowest element of a.","Returns the lowest element of a.","Returns the lowest element of a.","Returns a with its lower element replaced by b after …","Returns a vector whose lowest element is a and all higher …","Converts a 32 bit integer to a 32 bit float. The result …","Returns a with its lower element replaced by b after …","Returns a vector whose lowest element is a and all higher …","Converts a 64 bit integer to a 32 bit float. The result …","Returns a with its lower element replaced by b after …","Returns a vector whose lowest element is a and all higher …","Extracts the lowest 32 bit float from the input vector.","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Converts the lower single-precision (32-bit) …","Converts the lowest 32 bit float in the input vector to a …","Converts the lowest 32 bit float in the input vector to a …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Alias for _mm_cvttss_si32.","Converts packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Converts packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Converts the lower double-precision (64-bit) …","Converts the lower double-precision (64-bit) …","Alias for _mm_cvttsd_si64","Convert the lower double-precision (64-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Converts the lowest 32 bit float in the input vector to a …","Converts the lowest 32 bit float in the input vector to a …","Convert the lower single-precision (32-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Convert the unsigned 32-bit integer b to a …","Convert the unsigned 32-bit integer b to a …","Convert the unsigned 64-bit integer b to a …","Convert the unsigned 64-bit integer b to a …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divides __m128 vectors.","Divide the lower double-precision (64-bit) floating-point …","Divide the lower single-precision (32-bit) floating-point …","Returns a new vector with the low element of a replaced by …","Divides the first component of b by a the other …","Returns the dot product of two __m128d vectors.","Returns the dot product of two __m128 vectors.","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Returns the imm8 element of a.","Extracts an 32-bit integer from a selected with IMM8","Extracts an 64-bit integer from a selected with IMM1","Extracts an 8-bit integer from a selected with IMM8. …","Extracts a single-precision (32-bit) floating-point …","Extracts the bit range specified by y from the lower 64 …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Round the packed double-precision (64-bit) floating-point …","Round the packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiplies the lower double-precision (64-bit) …","Multiplies the lower single-precision (32-bit) …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiplies the lower double-precision (64-bit) …","Multiplies the lower single-precision (32-bit) …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiplies the lower double-precision (64-bit) …","Multiplies the lower single-precision (32-bit) …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiplies the lower double-precision (64-bit) …","Multiplies the lower single-precision (32-bit) …","Gets the unsigned 32-bit value of the MXCSR control and …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Horizontally adds the adjacent pairs of values contained …","Horizontally adds the adjacent pairs of values contained …","Horizontally adds adjacent pairs of double-precision …","Horizontally adds adjacent pairs of single-precision …","Horizontally adds the adjacent pairs of values contained …","Horizontally subtract the adjacent pairs of values …","Horizontally subtract the adjacent pairs of values …","Horizontally subtract adjacent pairs of double-precision …","Horizontally adds adjacent pairs of single-precision …","Horizontally subtract the adjacent pairs of values …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns a new vector where the imm8 element of a is …","Returns a copy of a with the 32-bit integer from i …","Returns a copy of a with the 64-bit integer from i …","Returns a copy of a with the 8-bit integer from i inserted …","Select a single value in b to store at some position in a …","Inserts the [length:0] bits of y into x at index.","Loads 128-bits of integer data from unaligned memory. This …","Performs a serializing operation on all load-from-memory …","Loads a double-precision (64-bit) floating-point element …","Construct a __m128 by duplicating the value read from p …","Load 128-bits (composed of 4 packed 32-bit integers) from …","Load 128-bits (composed of 2 packed 64-bit integers) from …","Loads 128-bits (composed of 2 packed double-precision …","Loads a double-precision (64-bit) floating-point element …","Loads four f32 values from <em>aligned</em> memory into a __m128. …","Alias for _mm_load1_ps","Loads a 64-bit double-precision value to the low element …","Loads 128-bits of integer data from memory into a new …","Construct a __m128 with the lowest element read from p and …","Loads a double-precision (64-bit) floating-point element …","Loads a double-precision value into the high-order bits of …","Loads 64-bit integer from memory into first element of …","Loads a double-precision value into the low-order bits of …","Loads 2 double-precision (64-bit) floating-point elements …","Loads four f32 values from aligned memory into a __m128 in …","Load 128-bits (composed of 8 packed 16-bit integers) from …","Load 128-bits (composed of 4 packed 32-bit integers) from …","Load 128-bits (composed of 2 packed 64-bit integers) from …","Load 128-bits (composed of 16 packed 8-bit integers) from …","Loads 128-bits (composed of 2 packed double-precision …","Loads four f32 values from memory into a __m128. There are …","Loads 128-bits of integer data from memory into a new …","Loads unaligned 64-bits of integer data from memory into …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiply packed unsigned 52-bit integers in each 64-bit …","Multiplies and then horizontally add signed 16 bit …","Multiplies corresponding pairs of packed 8-bit unsigned …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Compute the absolute value of packed signed 16-bit …","Compute the absolute value of packed signed 32-bit …","Compute the absolute value of packed signed 8-bit integers …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add the lower double-precision (64-bit) floating-point …","Add the lower single-precision (32-bit) floating-point …","Add the lower double-precision (64-bit) floating-point …","Add the lower single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 32-byte immediate result shift …","Concatenate a and b into a 32-byte immediate result shift …","Concatenate pairs of 16-byte blocks in a and b into a …","Performs element-by-element bitwise AND between packed …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Considers the input b as packed 64-bit integers and c as …","Blend packed 16-bit integers from a and b using control …","Blend packed 32-bit integers from a and b using control …","Blend packed 64-bit integers from a and b using control …","Blend packed 8-bit integers from a and b using control …","Blend packed double-precision (64-bit) floating-point …","Blend packed single-precision (32-bit) floating-point …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Compare packed signed 16-bit integers in a and b based on …","Compare packed signed 32-bit integers in a and b based on …","Compare packed signed 64-bit integers in a and b based on …","Compare packed signed 8-bit integers in a and b based on …","Compare packed unsigned 16-bit integers in a and b based …","Compare packed unsigned 32-bit integers in a and b based …","Compare packed unsigned 64-bit integers in a and b based …","Compare packed unsigned 8-bit integers in a and b based on …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for equality …","Compare packed 64-bit integers in a and b for equality …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed signed 32-bit integers in a and b for …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Compare packed signed 16-bit integers in a and b for …","Compare packed 32-bit integers in a and b for not-equal …","Compare packed signed 64-bit integers in a and b for …","Compare packed signed 8-bit integers in a and b for …","Compare packed unsigned 16-bit integers in a and b for …","Compare packed unsigned 32-bit integers in a and b for …","Compare packed unsigned 64-bit integers in a and b for …","Compare packed unsigned 8-bit integers in a and b for …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 32-bit integers in a to packed 16-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 2 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in the low 4 …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in the low 4 …","Zero extend packed unsigned 8-bit integers in the low 2 …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert the lower single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Divide the lower double-precision (64-bit) floating-point …","Divide the lower single-precision (32-bit) floating-point …","Divide the lower double-precision (64-bit) floating-point …","Divide the lower single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Returns values from slice at offsets determined by …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using …","Move packed 32-bit integers from a to dst using writemask …","Move packed 64-bit integers from a to dst using writemask …","Move packed 8-bit integers from a into dst using writemask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Move the lower double-precision (64-bit) floating-point …","Move the lower single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of the lower …","Compute the approximate reciprocal of the lower …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of the …","Compute the approximate reciprocal square root of the …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast 16-bit integer a to all elements of dst using …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle 8-bit integers in a within 128-bit lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Compute the square root of the lower double-precision …","Compute the square root of the lower single-precision …","Compute the square root of the lower double-precision …","Compute the square root of the lower single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Store packed 16-bit integers from a into memory using …","Store packed 32-bit integers from a into memory using …","Store packed 64-bit integers from a into memory using …","Store packed 8-bit integers from a into memory using …","Store packed double-precision (64-bit) floating-point …","Store packed single-precision (32-bit) floating-point …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract the lower double-precision (64-bit) …","Subtract the lower single-precision (32-bit) …","Subtract the lower double-precision (64-bit) …","Subtract the lower single-precision (32-bit) …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Loads packed 32-bit integers from memory pointed by …","Loads packed 64-bit integers from memory pointed by …","Loads packed double-precision (64-bit) floating-point …","Loads packed single-precision (32-bit) floating-point …","Conditionally store 8-bit integer elements from a into …","Stores packed 32-bit integers from a into memory pointed …","Stores packed 64-bit integers from a into memory pointed …","Stores packed double-precision (64-bit) floating-point …","Stores packed single-precision (32-bit) floating-point …","Compute the absolute value of packed signed 16-bit …","Compute the absolute value of packed signed 32-bit …","Compute the absolute value of packed signed 8-bit integers …","Add packed 16-bit integers in a and b and store the …","Add packed 32-bit integers in a and b and store the …","Add packed 64-bit integers in a and b and store the …","Add packed 8-bit integers in a and b and store the …","Add packed double-precision (64-bit) floating-point …","Add packed single-precision (32-bit) floating-point …","Add the lower double-precision (64-bit) floating-point …","Add the lower single-precision (32-bit) floating-point …","Add the lower double-precision (64-bit) floating-point …","Add the lower single-precision (32-bit) floating-point …","Add packed signed 16-bit integers in a and b using …","Add packed signed 8-bit integers in a and b using …","Add packed unsigned 16-bit integers in a and b using …","Add packed unsigned 8-bit integers in a and b using …","Concatenate a and b into a 32-byte immediate result shift …","Concatenate a and b into a 32-byte immediate result shift …","Concatenate pairs of 16-byte blocks in a and b into a …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise NOT of packed 32-bit integers in a and …","Compute the bitwise NOT of packed 64-bit integers in a and …","Average packed unsigned 16-bit integers in a and b and …","Average packed unsigned 8-bit integers in a and b and …","Broadcast the low packed 8-bit integer from a to all …","Broadcast the low packed 32-bit integer from a to all …","Broadcast the low packed 64-bit integer from a to all …","Broadcast the low single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Contiguously store the active 16-bit integers in a (those …","Contiguously store the active 32-bit integers in a (those …","Contiguously store the active 64-bit integers in a (those …","Contiguously store the active 8-bit integers in a (those …","Contiguously store the active double-precision (64-bit) …","Contiguously store the active single-precision (32-bit) …","Test each 32-bit element of a for equality with all other …","Test each 64-bit element of a for equality with all other …","Convert packed single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert the lower single-precision (32-bit) floating-point …","Sign extend packed 16-bit integers in a to packed 32-bit …","Sign extend packed 16-bit integers in a to packed 64-bit …","Convert packed 16-bit integers in a to packed 8-bit …","Convert packed 32-bit integers in a to packed 16-bit …","Sign extend packed 32-bit integers in a to packed 64-bit …","Convert packed 32-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed …","Convert packed 64-bit integers in a to packed 16-bit …","Convert packed 64-bit integers in a to packed 32-bit …","Convert packed 64-bit integers in a to packed 8-bit …","Sign extend packed 8-bit integers in a to packed 16-bit …","Sign extend packed 8-bit integers in a to packed 32-bit …","Sign extend packed 8-bit integers in the low 2 bytes of a …","Zero extend packed unsigned 16-bit integers in a to packed …","Zero extend packed unsigned 16-bit integers in the low 4 …","Zero extend packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in a to packed …","Zero extend packed unsigned 8-bit integers in th elow 4 …","Zero extend packed unsigned 8-bit integers in the low 2 …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed half-precision (16-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert the lower double-precision (64-bit) floating-point …","Convert packed signed 16-bit integers in a to packed 8-bit …","Convert packed signed 32-bit integers in a to packed …","Convert packed signed 32-bit integers in a to packed 8-bit …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed …","Convert packed signed 64-bit integers in a to packed 8-bit …","Convert the lower single-precision (32-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed double-precision (64-bit) floating-point …","Convert packed single-precision (32-bit) floating-point …","Convert packed double-precision (32-bit) floating-point …","Convert packed unsigned 16-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 32-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Convert packed unsigned 64-bit integers in a to packed …","Compute the sum of absolute differences (SADs) of …","Divide packed double-precision (64-bit) floating-point …","Divide packed single-precision (32-bit) floating-point …","Divide the lower double-precision (64-bit) floating-point …","Divide the lower single-precision (32-bit) floating-point …","Divide the lower double-precision (64-bit) floating-point …","Divide the lower single-precision (32-bit) floating-point …","Compute dot-product of BF16 (16-bit) floating-point pairs …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 4 adjacent pairs of unsigned 8-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Multiply groups of 2 adjacent pairs of signed 16-bit …","Load contiguous active 16-bit integers from a (those with …","Load contiguous active 32-bit integers from a (those with …","Load contiguous active 64-bit integers from a (those with …","Load contiguous active 8-bit integers from a (those with …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Load contiguous active 16-bit integers from unaligned …","Load contiguous active 32-bit integers from unaligned …","Load contiguous active 64-bit integers from unaligned …","Load contiguous active 8-bit integers from unaligned …","Load contiguous active double-precision (64-bit) …","Load contiguous active single-precision (32-bit) …","Fix up packed double-precision (64-bit) floating-point …","Fix up packed single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Fix up the lower double-precision (64-bit) floating-point …","Fix up the lower single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Convert the exponent of each packed double-precision …","Convert the exponent of each packed single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Convert the exponent of the lower double-precision …","Convert the exponent of the lower single-precision …","Normalize the mantissas of packed double-precision …","Normalize the mantissas of packed single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Normalize the mantissas of the lower double-precision …","Normalize the mantissas of the lower single-precision …","Performs an affine transformation on the packed bytes in x.","Performs an affine transformation on the inverted packed …","Performs a multiplication in GF(2^8) on the packed bytes. …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Load packed 16-bit integers from memory into dst using …","Load packed 32-bit integers from memory into dst using …","Load packed 64-bit integers from memory into dst using …","Load packed 8-bit integers from memory into dst using …","Load packed double-precision (64-bit) floating-point …","Load packed single-precision (32-bit) floating-point …","Counts the number of leading zero bits in each packed …","Counts the number of leading zero bits in each packed …","Multiply packed signed 16-bit integers in a and b …","Multiply packed unsigned 8-bit integers in a by packed …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 64-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare packed signed 16-bit integers in a and b and …","Compare packed signed 32-bit integers in a and b and …","Compare packed signed 8-bit integers in a and b and store …","Compare packed unsigned 16-bit integers in a and b and …","Compare packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compare packed unsigned 8-bit integers in a and b and …","Compare packed double-precision (64-bit) floating-point …","Compare packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Move packed 16-bit integers from a into dst using zeromask …","Move packed 32-bit integers from a into dst using zeromask …","Move packed 64-bit integers from a into dst using zeromask …","Move packed 8-bit integers from a into dst using zeromask …","Move packed double-precision (64-bit) floating-point …","Move packed single-precision (32-bit) floating-point …","Move the lower double-precision (64-bit) floating-point …","Move the lower single-precision (32-bit) floating-point …","Duplicate even-indexed double-precision (64-bit) …","Duplicate odd-indexed single-precision (32-bit) …","Duplicate even-indexed single-precision (32-bit) …","Multiply the low signed 32-bit integers from each packed …","Multiply the low unsigned 32-bit integers from each packed …","Multiply packed double-precision (64-bit) floating-point …","Multiply packed single-precision (32-bit) floating-point …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Multiply the packed signed 16-bit integers in a and b …","Multiply the packed unsigned 16-bit integers in a and b …","Multiply packed signed 16-bit integers in a and b …","Multiply the packed 16-bit integers in a and b producing …","Multiply the packed 32-bit integers in a and b producing …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Convert packed signed 16-bit integers from a and b to …","Convert packed signed 32-bit integers from a and b to …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of the lower …","Compute the approximate reciprocal of the lower …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of packed …","Compute the approximate reciprocal square root of the …","Compute the approximate reciprocal square root of the …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcast the low packed 16-bit integer from a to all …","Broadcast 32-bit integer a to all elements of dst using …","Broadcast 64-bit integer a to all elements of dst using …","Broadcast 8-bit integer a to all elements of dst using …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffle 32-bit integers in a within 128-bit lanes using …","Shuffle packed 8-bit integers in a according to shuffle …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in the high 64 bits of 128-bit …","Shuffle 16-bit integers in the low 64 bits of 128-bit …","Shift packed 16-bit integers in a left by count while …","Shift packed 32-bit integers in a left by count while …","Shift packed 64-bit integers in a left by count while …","Shift packed 16-bit integers in a left by imm8 while …","Shift packed 32-bit integers in a left by imm8 while …","Shift packed 64-bit integers in a left by imm8 while …","Shift packed 16-bit integers in a left by the amount …","Shift packed 32-bit integers in a left by the amount …","Shift packed 64-bit integers in a left by the amount …","Compute the square root of packed double-precision …","Compute the square root of packed single-precision …","Compute the square root of the lower double-precision …","Compute the square root of the lower single-precision …","Compute the square root of the lower double-precision …","Compute the square root of the lower single-precision …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shift packed 16-bit integers in a right by count while …","Shift packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shift packed 16-bit integers in a right by imm8 while …","Shift packed 32-bit integers in a right by imm8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shift packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtract packed single-precision (32-bit) floating-point …","Subtract the lower double-precision (64-bit) …","Subtract the lower single-precision (32-bit) …","Subtract the lower double-precision (64-bit) …","Subtract the lower single-precision (32-bit) …","Subtract packed signed 16-bit integers in b from packed …","Subtract packed signed 8-bit integers in b from packed …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Unpack and interleave 16-bit integers from the high half …","Unpack and interleave 32-bit integers from the high half …","Unpack and interleave 64-bit integers from the high half …","Unpack and interleave 8-bit integers from the high half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Unpack and interleave 16-bit integers from the low half of …","Unpack and interleave 32-bit integers from the low half of …","Unpack and interleave 64-bit integers from the low half of …","Unpack and interleave 8-bit integers from the low half of …","Unpack and interleave double-precision (64-bit) …","Unpack and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Compares packed 16-bit integers in a and b and returns …","Compares packed 32-bit integers in a and b and returns …","Compare packed signed 64-bit integers in a and b and …","Compares packed 8-bit integers in a and b and returns …"],"8":["Compares packed unsigned 16-bit integers in a and b and …","Compares packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compares packed unsigned 8-bit integers in a and b and …","Returns a new vector with the maximum values from …","Compares packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Returns a new vector with the low element of a replaced by …","Compares the first single-precision (32-bit) …","Performs a serializing operation on all load-from-memory …","Compares packed 16-bit integers in a and b and returns …","Compares packed 32-bit integers in a and b and returns …","Compares packed 8-bit integers in a and b and returns …","Compares packed unsigned 16-bit integers in a and b and …","Compares packed unsigned 32-bit integers in a and b and …","Compare packed unsigned 64-bit integers in a and b and …","Compares packed unsigned 8-bit integers in a and b and …","Returns a new vector with the minimum values from …","Compares packed single-precision (32-bit) floating-point …","Compare the lower double-precision (64-bit) floating-point …","Compare the lower single-precision (32-bit) floating-point …","Returns a new vector with the low element of a replaced by …","Compares the first single-precision (32-bit) …","Finds the minimum unsigned 16-bit element in the 128-bit __…","Returns a vector where the low element is extracted from a …","Constructs a 128-bit floating-point vector of [2 x double]…","Returns a __m128 with the first component from b and the …","Duplicate the low double-precision (64-bit) floating-point …","Duplicate odd-indexed single-precision (32-bit) …","Combine higher half of a and b. The higher half of b …","Duplicate even-indexed single-precision (32-bit) …","Combine lower half of a and b. The lower half of b …","Returns a mask of the most significant bit of each element …","Returns a mask of the most significant bit of each element …","Returns a mask of the most significant bit of each element …","Set each bit of mask register k based on the most …","Set each bit of mask register k based on the most …","Set each packed 16-bit integer in dst to all ones or all …","Set each packed 8-bit integer in dst to all ones or all …","Subtracts 8-bit unsigned integer values and computes the …","Multiplies the low 32-bit integers from each packed 64-bit …","Multiplies the low unsigned 32-bit integers from each …","Multiplies packed double-precision (64-bit) floating-point …","Multiplies __m128 vectors.","Multiply the lower double-precision (64-bit) …","Multiply the lower single-precision (32-bit) …","Returns a new vector with the low element of a replaced by …","Multiplies the first component of a and b the other …","Multiplies the packed 16-bit integers in a and b.","Multiplies the packed unsigned 16-bit integers in a and b.","Multiplies packed 16-bit signed integer values truncate …","Multiplies the packed 16-bit integers in a and b.","Multiplies the packed 32-bit integers in a and b …","For each 64-bit element in b select 8 unaligned bytes …","Compute the bitwise OR of packed 32-bit integers in a and …","Compute the bitwise OR of packed 64-bit integers in a and …","Computes the bitwise OR of a and b.","Bitwise OR of packed single-precision (32-bit) …","Computes the bitwise OR of 128 bits (representing integer …","Converts packed 16-bit integers from a and b to packed …","Converts packed 32-bit integers from a and b to packed …","Converts packed 16-bit integers from a and b to packed …","Converts packed 32-bit integers from a and b to packed …","Provides a hint to the processor that the code sequence is …","Shuffles double-precision (64-bit) floating-point elements …","Shuffles single-precision (32-bit) floating-point elements …","Shuffles double-precision (64-bit) floating-point elements …","Shuffles single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a and b across lanes using the …","Shuffle 32-bit integers in a and b across lanes using the …","Shuffle 64-bit integers in a and b across lanes using the …","Shuffle 8-bit integers in a and b across lanes using the …","Shuffle double-precision (64-bit) floating-point elements …","Shuffle single-precision (32-bit) floating-point elements …","Shuffle 16-bit integers in a across lanes using the …","Shuffle 8-bit integers in a across lanes using the …","For each packed 16-bit integer maps the value to the …","For each packed 32-bit integer maps the value to the …","For each packed 64-bit integer maps the value to the …","For each packed 8-bit integer maps the value to the number …","Fetch the cache line that contains address p using the …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of packed …","Compute the approximate reciprocal of the lower …","Compute the approximate reciprocal of the lower …","Returns the approximate reciprocal of packed …","Returns the approximate reciprocal of the first …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Rotate the bits in each packed 32-bit integer in a to the …","Rotate the bits in each packed 64-bit integer in a to the …","Round the packed double-precision (64-bit) floating-point …","Round the packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Round packed double-precision (64-bit) floating-point …","Round packed single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Round the lower double-precision (64-bit) floating-point …","Round the lower single-precision (32-bit) floating-point …","Compute the approximate reciprocal square root of the …","Compute the approximate reciprocal square root of the …","Returns the approximate reciprocal square root of packed …","Returns the approximate reciprocal square root of the …","Sum the absolute differences of packed unsigned 8-bit …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Scale the packed double-precision (64-bit) floating-point …","Scale the packed single-precision (32-bit) floating-point …","Broadcasts 16-bit integer a to all elements.","Broadcasts 32-bit integer a to all elements.","Broadcasts 64-bit integer a to all elements.","Broadcasts 8-bit integer a to all elements.","Broadcasts double-precision (64-bit) floating-point value …","Construct a __m128 with all element set to a.","Sets packed 16-bit integers with the supplied values.","Sets packed 32-bit integers with the supplied values.","Sets packed 64-bit integers with the supplied values from …","Sets packed 8-bit integers with the supplied values.","Sets packed double-precision (64-bit) floating-point …","Broadcasts double-precision (64-bit) floating-point value …","Construct a __m128 from four floating point values highest …","Alias for _mm_set1_ps","Copies double-precision (64-bit) floating-point element a …","Construct a __m128 with the lowest element set to a and …","Sets the MXCSR register with the 32-bit unsigned integer …","Sets packed 16-bit integers with the supplied values in …","Sets packed 32-bit integers with the supplied values in …","Sets packed 8-bit integers with the supplied values in …","Sets packed double-precision (64-bit) floating-point …","Construct a __m128 from four floating point values lowest …","Returns packed double-precision (64-bit) floating-point …","Construct a __m128 with all elements initialized to zero.","Returns a vector with all elements set to zero.","Performs a serializing operation on all non-temporal (“…","Performs an intermediate calculation for the next four …","Performs the final calculation for the next four SHA1 …","Calculate SHA1 state variable E after four rounds of …","Performs four rounds of SHA1 operation using an initial …","Performs an intermediate calculation for the next four …","Performs the final calculation for the next four SHA256 …","Performs 2 rounds of SHA256 operation using an initial …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in a and b producing an …","Concatenate packed 32-bit integers in a and b producing an …","Concatenate packed 64-bit integers in a and b producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Concatenate packed 16-bit integers in b and a producing an …","Concatenate packed 32-bit integers in b and a producing an …","Concatenate packed 64-bit integers in b and a producing an …","Shuffles 32-bit integers in a using the control in IMM8.","Shuffles bytes from a according to the content of b.","Constructs a 128-bit floating-point vector of [2 x double] …","Shuffles packed single-precision (32-bit) floating-point …","Shuffles 16-bit integers in the high 64 bits of a using …","Shuffles 16-bit integers in the low 64 bits of a using the …","Negates packed 16-bit integers in a when the corresponding …","Negates packed 32-bit integers in a when the corresponding …","Negates packed 8-bit integers in a when the corresponding …","Shifts packed 16-bit integers in a left by count while …","Shifts packed 32-bit integers in a left by count while …","Shifts packed 64-bit integers in a left by count while …","Shifts packed 16-bit integers in a left by IMM8 while …","Shifts packed 32-bit integers in a left by IMM8 while …","Shifts packed 64-bit integers in a left by IMM8 while …","Shifts a left by IMM8 bytes while shifting in zeros.","Shift packed 16-bit integers in a left by the amount …","Shifts packed 32-bit integers in a left by the amount …","Shifts packed 64-bit integers in a left by the amount …","Returns a new vector with the square root of each of the …","Returns the square root of packed single-precision …","Compute the square root of the lower double-precision …","Compute the square root of the lower single-precision …","Returns a new vector with the low element of a replaced by …","Returns the square root of the first single-precision …","Shifts packed 16-bit integers in a right by count while …","Shifts packed 32-bit integers in a right by count while …","Shift packed 64-bit integers in a right by count while …","Shifts packed 16-bit integers in a right by IMM8 while …","Shifts packed 32-bit integers in a right by IMM8 while …","Shift packed 64-bit integers in a right by imm8 while …","Shift packed 16-bit integers in a right by the amount …","Shifts packed 32-bit integers in a right by the amount …","Shift packed 64-bit integers in a right by the amount …","Shifts packed 16-bit integers in a right by count while …","Shifts packed 32-bit integers in a right by count while …","Shifts packed 64-bit integers in a right by count while …","Shifts packed 16-bit integers in a right by IMM8 while …","Shifts packed 32-bit integers in a right by IMM8 while …","Shifts packed 64-bit integers in a right by IMM8 while …","Shifts a right by IMM8 bytes while shifting in zeros.","Shift packed 16-bit integers in a right by the amount …","Shifts packed 32-bit integers in a right by the amount …","Shifts packed 64-bit integers in a right by the amount …","Stores the lower double-precision (64-bit) floating-point …","Stores the lowest 32 bit float of a repeated four times …","Store 128-bits (composed of 4 packed 32-bit integers) from …","Store 128-bits (composed of 2 packed 64-bit integers) from …","Stores 128-bits (composed of 2 packed double-precision …","Stores the lower double-precision (64-bit) floating-point …","Stores four 32-bit floats into <em>aligned</em> memory.","Alias for _mm_store1_ps","Stores the lower 64 bits of a 128-bit vector of …","Stores 128-bits of integer data from a into memory.","Stores the lowest 32 bit float of a into memory.","Stores the upper 64 bits of a 128-bit vector of …","Stores the lower 64-bit integer a to a memory location.","Stores the lower 64 bits of a 128-bit vector of …","Stores 2 double-precision (64-bit) floating-point elements …","Stores four 32-bit floats into <em>aligned</em> memory in reverse …","Store 128-bits (composed of 8 packed 16-bit integers) from …","Store 128-bits (composed of 4 packed 32-bit integers) from …","Store 128-bits (composed of 2 packed 64-bit integers) from …","Store 128-bits (composed of 16 packed 8-bit integers) from …","Stores 128-bits (composed of 2 packed double-precision …","Stores four 32-bit floats into memory. There are no …","Stores 128-bits of integer data from a into memory.","Stores a 128-bit floating point vector of [2 x double] to …","Stores a into the memory at mem_addr using a non-temporal …","Non-temporal store of a.0 into p.","Stores a 128-bit integer vector to a 128-bit aligned …","Stores a 32-bit integer value in the specified memory …","Stores a 64-bit integer value in the specified memory …","Non-temporal store of a.0 into p.","Subtracts packed 16-bit integers in b from packed 16-bit …","Subtract packed 32-bit integers in b from packed 32-bit …","Subtract packed 64-bit integers in b from packed 64-bit …","Subtracts packed 8-bit integers in b from packed 8-bit …","Subtract packed double-precision (64-bit) floating-point …","Subtracts __m128 vectors.","Subtract the lower double-precision (64-bit) …","Subtract the lower single-precision (32-bit) …","Returns a new vector with the low element of a replaced by …","Subtracts the first component of b from a the other …","Subtract packed 16-bit integers in b from packed 16-bit …","Subtract packed 8-bit integers in b from packed 8-bit …","Subtract packed unsigned 16-bit integers in b from packed …","Subtract packed unsigned 8-bit integers in b from packed …","Bitwise ternary logic that provides the capability to …","Bitwise ternary logic that provides the capability to …","Tests whether the specified bits in a 128-bit integer …","Tests whether the specified bits in a 128-bit integer …","Compute the bitwise AND of packed 16-bit integers in a and …","Compute the bitwise AND of packed 32-bit integers in a and …","Compute the bitwise AND of packed 64-bit integers in a and …","Compute the bitwise AND of packed 8-bit integers in a and …","Tests whether the specified bits in a 128-bit integer …","Computes the bitwise AND of 128 bits (representing …","Computes the bitwise AND of 128 bits (representing …","Tests whether the specified bits in a 128-bit integer …","Compute the bitwise NAND of packed 16-bit integers in a …","Compute the bitwise NAND of packed 32-bit integers in a …","Compute the bitwise NAND of packed 64-bit integers in a …","Compute the bitwise NAND of packed 8-bit integers in a and …","Computes the bitwise AND of 128 bits (representing …","Computes the bitwise AND of 128 bits (representing …","Tests whether the specified bits in a 128-bit integer …","Computes the bitwise AND of 128 bits (representing …","Computes the bitwise AND of 128 bits (representing …","Tests whether the specified bits in a 128-bit integer …","Counts the number of trailing least significant zero bits.","Counts the number of trailing least significant zero bits.","Compares the lower element of a and b for equality.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for …","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for greater-than.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for …","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for less-than.","Compares two 32-bit floats from the low-order bits of a …","Compares the lower element of a and b for not-equal.","Compares two 32-bit floats from the low-order bits of a …","Returns vector of type __m128d with indeterminate elements.","Returns vector of type __m128 with indeterminate elements. …","Returns vector of type __m128i with indeterminate elements.","Unpacks and interleave 16-bit integers from the high half …","Unpacks and interleave 32-bit integers from the high half …","Unpacks and interleave 64-bit integers from the high half …","Unpacks and interleave 8-bit integers from the high half …","The resulting __m128d element is composed by the low-order …","Unpacks and interleave single-precision (32-bit) …","Unpacks and interleave 16-bit integers from the low half …","Unpacks and interleave 32-bit integers from the low half …","Unpacks and interleave 64-bit integers from the low half …","Unpacks and interleave 8-bit integers from the low half of …","The resulting __m128d element is composed by the …","Unpacks and interleave single-precision (32-bit) …","Compute the bitwise XOR of packed 32-bit integers in a and …","Compute the bitwise XOR of packed 64-bit integers in a and …","Computes the bitwise XOR of a and b.","Bitwise exclusive OR of packed single-precision (32-bit) …","Computes the bitwise XOR of 128 bits (representing integer …","Unsigned multiply without affecting flags.","Unsigned multiply without affecting flags.","Scatter contiguous low order bits of a to the result at …","Scatter contiguous low order bits of a to the result at …","Gathers the bits of x specified by the mask into the …","Gathers the bits of x specified by the mask into the …","Counts the bits that are set.","Counts the bits that are set.","Read a hardware generated 16-bit random value and store …","Read a hardware generated 32-bit random value and store …","Read a hardware generated 64-bit random value and store …","Read a 16-bit NIST SP800-90B and SP800-90C compliant …","Read a 32-bit NIST SP800-90B and SP800-90C compliant …","Read a 64-bit NIST SP800-90B and SP800-90C compliant …","Reads the current value of the processor’s time-stamp …","Store 32-bit mask from a into memory.","Store 64-bit mask from a into memory.","Adds unsigned 32-bit integers a and b with unsigned 8-bit …","Adds unsigned 64-bit integers a and b with unsigned 8-bit …","Clears all bits below the least significant zero of x and …","Clears all bits below the least significant zero of x and …","Counts the number of trailing least significant zero bits.","Counts the number of trailing least significant zero bits.","Sets all bits below the least significant one of x and …","Sets all bits below the least significant one of x and …","Forces a restricted transactional memory (RTM) region to …","Retrieves the parameter passed to _xabort when _xbegin’s …","Specifies the start of a restricted transactional memory …","Specifies the end of a restricted transactional memory …","Reads the contents of the extended control register XCR …","Performs a full or partial restore of the enabled …","Performs a full or partial restore of the enabled …","Performs a full or partial restore of the enabled …","Performs a full or partial restore of the enabled …","Performs a full or partial save of the enabled processor …","Performs a full or partial save of the enabled processor …","Performs a full or partial save of the enabled processor …","Performs a full or partial save of the enabled processor …","Performs a full or partial save of the enabled processor …","Performs a full or partial save of the enabled processor …","Performs a full or partial save of the enabled processor …","Performs a full or partial save of the enabled processor …","Copies 64-bits from val to the extended control register (…","Queries whether the processor is executing in a …","Compares and exchange 16 bytes (128 bits) of data …","EAX register.","EBX register.","ECX register.","EDX register.","Does the host support the cpuid instruction?","A by-value array iterator.","The error type returned when a conversion from a slice to …","Returns a mutable slice of all elements that have not been …","Returns an immutable slice of all elements that have not …","Creates an iterator over T which returns no elements.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an array of type [T; N] where each element T is …","Converts a mutable reference to T into a mutable reference …","Converts a reference to T into a reference to an array of …","Calls U::from(self).","Calls U::from(self).","Creates a new iterator over the given array.","Creates an iterator over the elements in a …","Creates an array of type [T; N] by repeatedly cloning a …","Creates an array [T; N] where each fallible array element T…","U+0006","U+0026","U+0027","U+002A","U+0008","U+0007","U+0018","U+0041","U+0042","U+0043","U+0044","U+0045","U+0046","U+0047","U+0048","U+0049","U+004A","U+004B","U+004C","U+004D","U+004E","U+004F","U+0050","U+0051","U+0052","U+0053","U+0054","U+0055","U+0056","U+0057","U+0058","U+0059","U+005A","U+000D","One of the 128 Unicode characters from U+0000 through …","U+0009","U+005E","U+003A","U+002C","U+0040","U+0010","U+007F","U+0014","U+0011","U+0013","U+0012","U+0030","U+0031","U+0032","U+0033","U+0034","U+0035","U+0036","U+0037","U+0038","U+0039","U+0024","U+0019","U+0003","U+0004","U+0017","U+0005","U+003D","U+001B","An iterator over the escaped version of a byte.","U+0021","U+000C","U+002E","U+0060","U+003E","U+002D","U+001C","U+001F","U+001D","U+001E","U+007B","U+0028","U+005B","U+003C","U+000A","U+000B","U+005F","U+0015","U+0000 (The default variant)","U+0023","U+0025","U+002B","U+003F","U+0022","U+005C","U+007D","U+0029","U+005D","U+003B","U+000F","U+000E","U+0061","U+0062","U+0063","U+0064","U+0065","U+0066","U+0067","U+0068","U+0069","U+006A","U+006B","U+006C","U+006D","U+006E","U+006F","U+0070","U+0071","U+0072","U+0073","U+0074","U+0075","U+0076","U+0077","U+0078","U+0079","U+007A","U+002F","U+0020","U+0001","U+0002","U+001A","U+0016","U+007E","U+007C","Views this ASCII character as a one-code-unit UTF-8 str.","Returns the default value of Null","When passed the <em>number</em> 0 1 … 9 returns the <em>character</em> …","When passed the <em>number</em> 0 1 … 9 returns the <em>character</em> …","Returns an iterator that produces an escaped version of a …","Returns the argument unchanged.","Returns the argument unchanged.","Creates an ascii character from the byte b or returns None…","Creates an ASCII character from the byte b without …","Calls U::from(self).","Calls U::from(self).","Gets this ASCII character as a char Unicode Scalar Value.","Gets this ASCII character as a byte.","Asserts that an expression matches the provided pattern.","Asserts that an expression matches the provided pattern.","A trait for dealing with asynchronous iterators.","An async iterator that was created from iterator.","The type of the resulting iterator","Convert something into an async iterator","The type of items yielded by the async iterator.","The type of the item yielded by the iterator","Returns the argument unchanged.","Converts an iterator into an async iterator.","Calls U::from(self).","Converts self into an async iterator","Attempt to pull out the next value of this async iterator …","Returns the bounds on the remaining length of the async …","Returns the bounds on the remaining length of the async …","A trait for borrowing data.","A trait for mutably borrowing data.","Immutably borrows from an owned value.","Mutably borrows from an owned value.","An error returned by RefCell::try_borrow.","An error returned by RefCell::try_borrow_mut.","A mutable memory location.","A value which is initialized on the first access.","A cell which can nominally be written to only once.","Wraps a borrowed reference to a value in a RefCell box. A …","A mutable memory location with dynamically checked borrow …","A wrapper type for a mutably borrowed value from a …","UnsafeCell but Sync.","The core primitive for interior mutability in Rust.","Returns a &amp;[Cell&lt;T&gt;; N] from a &amp;Cell&lt;[T; N]&gt;","Returns a raw pointer to the underlying data in this cell.","Returns a raw pointer to the underlying data in this cell.","Returns a &amp;[Cell&lt;T&gt;] from a &amp;Cell&lt;[T]&gt;","Immutably borrows the wrapped value.","Mutably borrows the wrapped value.","Panics","Copies a Ref.","Panics","Panics","Creates a new lazy value using Default as the initializing …","Creates a Cell&lt;T&gt; with the Default value for T.","Creates a RefCell&lt;T&gt; with the Default value for T.","Creates an UnsafeCell with the Default value for T.","Creates an SyncUnsafeCell with the Default value for T.","Panics","Makes a new Ref for an optional component of the borrowed …","Makes a new RefMut for an optional component of the …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new OnceCell&lt;T&gt; which already contains the given …","Returns the argument unchanged.","Creates a new Cell&lt;T&gt; containing the given value.","Returns the argument unchanged.","Creates a new RefCell&lt;T&gt; containing the given value.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new UnsafeCell&lt;T&gt; containing the given value.","Creates a new SyncUnsafeCell&lt;T&gt; containing the given value.","Returns the argument unchanged.","Returns a &amp;Cell&lt;T&gt; from a &amp;mut T","Converts from &amp;mut T to &amp;mut UnsafeCell&lt;T&gt;.","Panics","Gets the reference to the underlying value.","Returns a copy of the contained value.","Gets a mutable pointer to the wrapped value.","Gets a mutable pointer to the wrapped value.","Gets the mutable reference to the underlying value.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Gets the mutable reference of the contents of the cell …","Gets the mutable reference of the contents of the cell …","Gets the contents of the cell initializing it with f if …","Gets the contents of the cell initializing it with f if …","Panics","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Consumes this LazyCell returning the stored value.","Consumes the cell returning the wrapped value.","Unwraps the value consuming the cell.","Consumes the RefCell returning the wrapped value.","Unwraps the value consuming the cell.","Unwraps the value consuming the cell.","Panics","Convert into a reference to the underlying data.","Convert into a mutable reference to the underlying data.","Panics","Makes a new Ref for a component of the borrowed data.","Makes a new RefMut for a component of the borrowed data …","Splits a Ref into multiple Refs for different components …","Splits a RefMut into multiple RefMuts for different …","Creates a new lazy value with the given initializing …","Creates a new empty cell.","Creates a new Cell containing the given value.","Creates a new RefCell containing value.","Constructs a new instance of UnsafeCell which will wrap …","Constructs a new instance of SyncUnsafeCell which will …","Panics","Gets a mutable pointer to the wrapped value. The …","Gets a mutable pointer to the wrapped value.","Replaces the contained value with val and returns the old …","Replaces the wrapped value with a new one returning the …","Replaces the wrapped value with a new one computed from f …","Sets the contents of the cell to value.","Sets the contained value.","Swaps the values of two Cells. Difference with …","Swaps the wrapped value of self with the wrapped value of …","Takes the value out of this OnceCell moving it back to an …","Takes the value of the cell leaving Default::default() in …","Takes the wrapped value leaving Default::default() in its …","Immutably borrows the wrapped value returning an error if …","Mutably borrows the wrapped value returning an error if …","Immutably borrows the wrapped value returning an error if …","Sets the contents of the cell to value if the cell was …","Undo the effect of leaked guards on the borrow state of …","Updates the contained value using a function and returns …","The error type returned when a conversion from u32 to char …","An iterator that decodes UTF-16 encoded code points from …","An error that can be returned when decoding UTF-16 code …","An iterator that yields the literal escape code of a char.","An iterator that yields the literal escape code of a char.","Returns an iterator that yields the hexadecimal Unicode …","The highest valid code point a char can have &#39;\\\\u{10FFFF}&#39;…","An error which can be returned when parsing a char.","U+FFFD REPLACEMENT CHARACTER (�) is used in Unicode to …","Returns an iterator that yields the lowercase equivalent …","Returns an iterator that yields the uppercase equivalent …","The error type returned when a checked char conversion …","The version of Unicode that the Unicode parts of char and …","Creates an iterator over the UTF-16 encoded code points in …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a digit in the given radix to a char. Use …","Converts a u32 to a char. Use char::from_u32 instead.","Converts a u32 to a char ignoring validity. Use …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the unpaired surrogate which caused this error.","A common trait for the ability to explicitly duplicate an …","Derive macro generating an impl of the trait Clone.","A generalization of Clone to dynamically-sized types …","Returns a copy of the value.","Performs copy-assignment from source.","Performs copy-assignment from self to dst.","Trait for comparisons corresponding to equivalence …","Derive macro generating an impl of the trait Eq.","An ordering where a compared value is equal to another.","An ordering where a compared value is greater than another.","An ordering where a compared value is less than another.","Trait for types that form a total order.","Derive macro generating an impl of the trait Ord. The …","An Ordering is the result of a comparison between two …","Trait for comparisons using the equality operator.","Derive macro generating an impl of the trait PartialEq. …","Trait for types that form a partial order.","Derive macro generating an impl of the trait PartialOrd. …","A helper struct for reverse ordering.","Restrict a value to a certain interval.","This method returns an Ordering between self and other.","This method tests for self and other values to be equal …","Returns the argument unchanged.","Returns the argument unchanged.","This method tests greater than or equal to (for self and …","This method tests greater than (for self and other) and is …","Calls U::from(self).","Calls U::from(self).","Returns true if the ordering is the Equal variant.","Returns true if the ordering is either the Greater or Equal…","Returns true if the ordering is the Greater variant.","Returns true if the ordering is either the Less or Equal …","Returns true if the ordering is the Less variant.","Returns true if the ordering is not the Equal variant.","This method tests less than or equal to (for self and other…","This method tests less than (for self and other) and is …","Compares and returns the maximum of two values.","Compares and returns the maximum of two values.","Returns the maximum of two values with respect to the …","Returns the element that gives the maximum value from the …","Compares and returns the minimum of two values.","Compares and returns the minimum of two values.","Returns the minimum of two values with respect to the …","Returns the element that gives the minimum value from the …","Compares and sorts two values returning minimum and …","Returns minimum and maximum values with respect to the …","Returns minimum and maximum values with respect to the …","This method tests for !=. The default implementation is …","This method returns an ordering between self and other …","Reverses the Ordering.","Chains two orderings.","Chains the ordering with the given function.","Used to do a cheap mutable-to-mutable reference conversion.","Used to do a cheap reference-to-reference conversion.","The type returned in the event of a conversion error.","The type returned in the event of a conversion error.","Supporting trait for inherent methods of f32 and f64 such …","Used to do value-to-value conversions while consuming the …","The error type for errors that can never happen.","A value-to-value conversion that consumes the input value. …","Simple and safe type conversions that may fail in a …","An attempted conversion that consumes self which may or …","Converts this type into a mutable reference of the …","Converts this type into a shared reference of the (usually …","Converts to this type from the input type.","Returns the argument unchanged.","The identity function.","Converts this type into the (usually inferred) input type.","Calls U::from(self).","Performs the conversion.","Performs the conversion.","A trait for giving a type a useful default value.","Derive macro generating an impl of the trait Default.","Returns the “default value” for a type.","Error is a trait representing the basic expectations for …","Request supports generic type-driven access to data. Its …","An iterator over an Error and its sources.","Forwards to the method defined on the type dyn Error.","Returns some mutable reference to the inner value if it is …","Forwards to the method defined on the type dyn Error.","Returns some reference to the inner value if it is of type …","Forwards to the method defined on the type dyn Error.","Forwards to the method defined on the type dyn Error.","Returns the argument unchanged.","Calls U::from(self).","Forwards to the method defined on the type dyn Error.","Forwards to the method defined on the type dyn Error.","Returns true if the inner type is the same as T.","Provides type based access to context intended for error …","Provide a reference. The referee type must be bounded by …","Provide a reference computed using a closure. The referee …","Provide a value or other type with only static lifetimes.","Provide a value or other type with only static lifetimes …","Request a reference of type T from the given impl Error.","Request a value of type T from the given impl Error.","The lower-level source of this error if any.","Returns an iterator starting with the current error and …","Check if the Request would be satisfied if provided with a …","Check if the Request would be satisfied if provided with a …","Basic mathematical constants.","Euler’s number (e)","The Euler-Mascheroni constant (γ)","1/π","1/sqrt(2)","1/sqrt(2π)","1/sqrt(3)","1/sqrt(π)","2/π","2/sqrt(π)","π/2","π/3","π/4","π/6","π/8","ln(10)","ln(2)","log10(2)","log10(e)","log2(10)","log2(e)","The golden ratio (φ)","Archimedes’ constant (π)","sqrt(2)","sqrt(3)","The full circle constant (τ)","Basic mathematical constants.","Euler’s number (e)","The Euler-Mascheroni constant (γ)","1/π","1/sqrt(2)","1/sqrt(2π)","1/sqrt(3)","1/sqrt(π)","2/π","2/sqrt(π)","π/2","π/3","π/4","π/6","π/8","ln(10)","ln(2)","log10(2)","log10(e)","log2(10)","log2(e)","The golden ratio (φ)","Archimedes’ constant (π)","sqrt(2)","sqrt(3)","The full circle constant (τ)","Approximate number of significant digits in base 10. Use …","Machine epsilon value for f32. Use f32::EPSILON instead.","Infinity (∞). Use f32::INFINITY instead.","Number of significant digits in base 2. Use …","Largest finite f32 value. Use f32::MAX instead.","Maximum possible power of 10 exponent. Use f32::MAX_10_EXP …","Maximum possible power of 2 exponent. Use f32::MAX_EXP …","Smallest finite f32 value. Use f32::MIN instead.","Minimum possible normal power of 10 exponent. Use …","One greater than the minimum possible normal power of 2 …","Smallest positive normal f32 value. Use f32::MIN_POSITIVE …","Not a Number (NaN). Use f32::NAN instead.","Negative infinity (−∞). Use f32::NEG_INFINITY instead.","The radix or base of the internal representation of f32. …","Basic mathematical constants.","Euler’s number (e)","The Euler-Mascheroni constant (γ)","1/π","1/sqrt(2)","1/sqrt(2π)","1/sqrt(3)","1/sqrt(π)","2/π","2/sqrt(π)","π/2","π/3","π/4","π/6","π/8","ln(10)","ln(2)","log10(2)","log10(e)","log2(10)","log2(e)","The golden ratio (φ)","Archimedes’ constant (π)","sqrt(2)","sqrt(3)","The full circle constant (τ)","Approximate number of significant digits in base 10. Use …","Machine epsilon value for f64. Use f64::EPSILON instead.","Infinity (∞). Use f64::INFINITY instead.","Number of significant digits in base 2. Use …","Largest finite f64 value. Use f64::MAX instead.","Maximum possible power of 10 exponent. Use f64::MAX_10_EXP …","Maximum possible power of 2 exponent. Use f64::MAX_EXP …","Smallest finite f64 value. Use f64::MIN instead.","Minimum possible normal power of 10 exponent. Use …","One greater than the minimum possible normal power of 2 …","Smallest positive normal f64 value. Use f64::MIN_POSITIVE …","Not a Number (NaN). Use f64::NAN instead.","Negative infinity (−∞). Use f64::NEG_INFINITY instead.","The radix or base of the internal representation of f64. …","Basic mathematical constants.","Euler’s number (e)","The Euler-Mascheroni constant (γ)","1/π","1/sqrt(2)","1/sqrt(2π)","1/sqrt(3)","1/sqrt(π)","2/π","2/sqrt(π)","π/2","π/3","π/4","π/6","π/8","ln(10)","ln(2)","log10(2)","log10(e)","log2(10)","log2(e)","The golden ratio (φ)","Archimedes’ constant (π)","sqrt(2)","sqrt(3)","The full circle constant (τ)","Representation of a borrowed C string.","Equivalent to C’s char type.","Equivalent to C’s double type.","Equivalent to C’s float type.","Equivalent to C’s signed int (int) type.","Equivalent to C’s signed long (long) type.","Equivalent to C’s signed long long (long long) type.","Equivalent to C’s ptrdiff_t type from stddef.h (or …","Equivalent to C’s signed char type.","Equivalent to C’s signed short (short) type.","Equivalent to C’s size_t type from stddef.h (or cstddef …","Equivalent to C’s ssize_t (on POSIX) or SSIZE_T (on …","CStr and its related types.","Equivalent to C’s unsigned char type.","Equivalent to C’s unsigned int type.","Equivalent to C’s unsigned long type.","Equivalent to C’s unsigned long long type.","Equivalent to C’s unsigned short type.","Equivalent to C’s void type when used as a pointer.","Returns the argument unchanged.","Calls U::from(self).","C’s “variable arguments”","An iterator over the bytes of a CStr without the nul …","Representation of a borrowed C string.","An error indicating that no nul byte was present.","An error indicating that a nul byte was not in the …","Returns the inner pointer to this C string.","Iterates over the bytes in this C string.","Returns the length of self. Like C’s strlen this does …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a C string wrapper from a byte slice with any …","Creates a C string wrapper from a byte slice with exactly …","Unsafely creates a C string wrapper from a byte slice.","Wraps a raw C string with a safe C string wrapper.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns true if self.to_bytes() has a length of 0.","Converts this C string to a byte slice.","Converts this C string to a byte slice containing the …","Yields a &amp;str slice if the CStr contains valid UTF-8.","A wrapper for a va_list","x86_64 ABI implementation of a va_list.","Advance to the next arg.","Convert a VaListImpl into a VaList that is …","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Copies the va_list at the current location.","Possible alignments returned by Formatter::align","This structure represents a safely precompiled version of …","b formatting.","Indication that contents should be center-aligned.","? formatting.","Derive macro generating an impl of the trait Debug.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","Format trait for an empty format {}.","Contains the error value","The error type which is returned from formatting a message …","Configuration for formatting.","Implements fmt::Debug and fmt::Display using a function.","Indication that contents should be left-aligned.","e formatting.","x formatting.","o formatting.","Contains the success value","p formatting.","The type returned by formatter methods.","Indication that contents should be right-aligned.","E formatting.","X formatting.","A trait for writing or formatting into Unicode-accepting …","Flag indicating what form of alignment was requested.","Determines if the # flag was specified.","Get the formatted string if it has no arguments to be …","Creates a DebugList builder designed to assist with …","Creates a DebugMap builder designed to assist with …","Creates a DebugSet builder designed to assist with …","Creates a DebugStruct builder designed to assist with …","Creates a DebugTuple builder designed to assist with …","Adds the contents of an iterator of entries to the set …","Adds the contents of an iterator of entries to the list …","Adds the contents of an iterator of entries to the map …","Adds a new entry to the set output.","Adds a new entry to the list output.","Adds a new entry to the map output.","Adds a new entry to the set output.","Adds a new entry to the list output.","Adds a new field to the generated struct output.","Adds a new field to the generated tuple struct output.","Adds a new field to the generated struct output.","Adds a new field to the generated tuple struct output.","Character used as ‘fill’ whenever there is alignment.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Marks the struct as non-exhaustive indicating to the …","Flags for formatting","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Adds the key part of a new entry to the map output.","Adds the key part of a new entry to the map output.","This function takes a string slice and emits it to the …","Performs the correct padding for an integer which has …","Optionally specified precision for numeric types. …","Determines if the 0 flag was specified.","Determines if the - flag was specified.","Determines if the + flag was specified.","Adds the value part of a new entry to the map output.","Adds the value part of a new entry to the map output.","Optionally specified integer width that the output should …","The write function takes an output stream and an Arguments…","Writes a char into this writer returning whether the …","Glue for usage of the write! macro with implementors of …","Writes some formatted information into this instance.","Writes a string slice into this writer returning whether …","Writes some data to the underlying buffer contained within …","Custom code within the asynchronous destructor.","A future returned by the async_drop_in_place.","A future returned by the AsyncDrop::async_drop to be part …","A future represents an asynchronous computation obtained …","Conversion into a Future.","Which kind of future are we turning this into?","The type of value produced on completion.","The output that the future will produce on completion.","Creates a future which never resolves representing a …","A Future that wraps a function returning Poll.","A future that is immediately ready with a value.","Asynchronously drops a value by running …","Constructs the asynchronous destructor for this type.","Creates the asynchronous destructor of the pointed-to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Creates a future from a value.","Consumes the Ready returning the wrapped value.","Polls multiple futures simultaneously returning a tuple …","Creates a future which never resolves representing a …","Attempt to resolve the future to a final value registering","Creates a future that wraps a function returning Poll.","Creates a future that is immediately ready with a value.","A trait for creating instances of Hasher.","Used to create a default BuildHasher instance for types …","A hashable type.","Derive macro generating an impl of the trait Hash.","A trait for hashing an arbitrary stream of bytes.","Type of the hasher that will be created.","An implementation of SipHash 2-4.","Creates a new hasher.","Returns the hash value for the values written so far.","Returns the argument unchanged.","Returns the argument unchanged.","Feeds this value into the given Hasher.","Calculates the hash of a single value.","Feeds a slice of this type into the given Hasher.","Calls U::from(self).","Calls U::from(self).","Creates a new BuildHasherDefault for Hasher H.","Creates a new SipHasher with the two initial keys set to 0.","Creates a SipHasher that is keyed off the provided keys.","Writes some data into this Hasher.","Writes a single i128 into this hasher.","Writes a single i16 into this hasher.","Writes a single i32 into this hasher.","Writes a single i64 into this hasher.","Writes a single i8 into this hasher.","Writes a single isize into this hasher.","Writes a length prefix into this hasher as part of being …","Writes a single str into this hasher.","Writes a single u128 into this hasher.","Writes a single u16 into this hasher.","Writes a single u32 into this hasher.","Writes a single u64 into this hasher.","Writes a single u8 into this hasher.","Writes a single usize into this hasher.","Makes a <em>soundness</em> promise to the compiler that cond holds.","An identity function that <em><strong>hints</strong></em> to the compiler to be …","An identity function that causes an unused_must_use …","Emits a machine instruction to signal the processor that …","Informs the compiler that the site which is calling this …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","Aborts the execution of the process.","Performs checked integer addition.","Lowers in MIR to Rvalue::Aggregate with …","Calculates the offset from a pointer potentially wrapping.","A guard for unsafe functions that cannot ever be executed …","A guard for std::mem::uninitialized. This will statically …","A guard for unsafe functions that cannot ever be executed …","Informs the optimizer that a condition is always true. If …","Bitwise and with the current value returning the previous …","Bitwise and with the current value returning the previous …","Bitwise and with the current value returning the previous …","Bitwise and with the current value returning the previous …","Bitwise and with the current value returning the previous …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","An atomic fence.","An atomic fence.","An atomic fence.","An atomic fence.","Loads the current value of the pointer.","Loads the current value of the pointer.","Loads the current value of the pointer.","Do NOT use this intrinsic; “unordered” operations do …","Maximum with the current value using a signed comparison.","Maximum with the current value using a signed comparison.","Maximum with the current value.","Maximum with the current value using a signed comparison.","Maximum with the current value using a signed comparison.","Minimum with the current value using a signed comparison.","Minimum with the current value using a signed comparison.","Minimum with the current value using a signed comparison.","Minimum with the current value using a signed comparison.","Minimum with the current value using a signed comparison.","Bitwise nand with the current value returning the …","Bitwise nand with the current value returning the …","Bitwise nand with the current value returning the …","Bitwise nand with the current value returning the …","Bitwise nand with the current value returning the …","Bitwise or with the current value returning the previous …","Bitwise or with the current value returning the previous …","Bitwise or with the current value returning the previous …","Bitwise or with the current value returning the previous …","Bitwise or with the current value returning the previous …","A compiler-only memory barrier.","A compiler-only memory barrier.","A compiler-only memory barrier.","A compiler-only memory barrier.","Stores the value at the specified memory location.","Stores the value at the specified memory location.","Stores the value at the specified memory location.","Do NOT use this intrinsic; “unordered” operations do …","Maximum with the current value using an unsigned …","Maximum with the current value using an unsigned …","Maximum with the current value using an unsigned …","Maximum with the current value using an unsigned …","Maximum with the current value using an unsigned …","Minimum with the current value using an unsigned …","Minimum with the current value using an unsigned …","Minimum with the current value using an unsigned …","Minimum with the current value using an unsigned …","Minimum with the current value using an unsigned …","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Stores the value at the specified memory location …","Stores the value at the specified memory location …","Stores the value at the specified memory location …","Stores the value at the specified memory location …","Stores the value at the specified memory location …","Bitwise xor with the current value returning the previous …","Bitwise xor with the current value returning the previous …","Bitwise xor with the current value returning the previous …","Bitwise xor with the current value returning the previous …","Bitwise xor with the current value returning the previous …","Subtract from the current value returning the previous …","Subtract from the current value returning the previous …","Subtract from the current value returning the previous …","Subtract from the current value returning the previous …","Subtract from the current value returning the previous …","Reverses the bits in an integer type T.","See documentation of std::hint::black_box for details.","Executes a breakpoint trap for inspection by a debugger.","Reverses the bytes in an integer type T.","Gets a reference to a static Location indicating where it …","Rust’s “try catch” construct for unwinding. Invokes …","Returns the smallest integer greater than or equal to an …","Returns the smallest integer greater than or equal to an …","Lexicographically compare [left left + bytes) and …","Allocates a block of memory at compile time. At runtime …","Deallocates a memory which allocated by …","Selects which function to call depending on the context.","Copies count * size_of::&lt;T&gt;() bytes from src to dst. The …","Copies count * size_of::&lt;T&gt;() bytes from src to dst. The …","Copies the sign from y to x for f32 values.","Copies the sign from y to x for f64 values.","Returns the cosine of an f32.","Returns the cosine of an f64.","Returns the number of leading unset bits (zeroes) in an …","Like ctlz but extra-unsafe as it returns undef when given …","Returns the number of bits set in an integer type T","Returns the number of trailing unset bits (zeroes) in an …","Like cttz but extra-unsafe as it returns undef when given …","Returns the value of the discriminant for the variant in …","Performs an exact division resulting in undefined …","Returns 2 raised to the power of an f32.","Returns 2 raised to the power of an f64.","Returns the exponential of an f32.","Returns the exponential of an f64.","Returns the absolute value of an f32.","Returns the absolute value of an f64.","Float addition that allows optimizations based on …","Float addition that allows optimizations based on …","Float division that allows optimizations based on …","Float division that allows optimizations based on …","Convert with LLVM’s fptoui/fptosi which may return …","Returns the largest integer less than or equal to an f32.","Returns the largest integer less than or equal to an f64.","Returns a * b + c for f32 values.","Returns a * b + c for f64 values.","Float multiplication that allows optimizations based on …","Float multiplication that allows optimizations based on …","Moves a value out of scope without running drop glue.","Float remainder that allows optimizations based on …","Float remainder that allows optimizations based on …","Float subtraction that allows optimizations based on …","Float subtraction that allows optimizations based on …","Returns whether the argument’s value is statically known …","Hints to the compiler that branch condition is likely to …","Returns the base 10 logarithm of an f32.","Returns the base 10 logarithm of an f64.","Returns the base 2 logarithm of an f32.","Returns the base 2 logarithm of an f64.","Returns the natural logarithm of an f32.","Returns the natural logarithm of an f64.","Returns the maximum of two f32 values.","Returns the maximum of two f64 values.","The minimum alignment of a type.","The required alignment of the referenced value.","Returns the minimum of two f32 values.","Returns the minimum of two f64 values.","Rustc internal tooling for hand-writing MIR.","Performs checked integer multiplication","Returns the nearest integer to an f32. Changing the …","Returns the nearest integer to an f64. Changing the …","Returns true if the actual type given as T requires drop …","Emits a !nontemporal store according to LLVM (see their …","Calculates the offset from a pointer.","Raises an f32 to an f32 power.","Raises an f64 to an f64 power.","Raises an f128 to an integer power.","Raises an f16 to an integer power.","Raises an f32 to an integer power.","Raises an f64 to an integer power.","The preferred alignment of a type.","The prefetch intrinsic is a hint to the code generator to …","The prefetch intrinsic is a hint to the code generator to …","The prefetch intrinsic is a hint to the code generator to …","The prefetch intrinsic is a hint to the code generator to …","See documentation of &lt;*const T&gt;::guaranteed_eq for details.","Masks out bits of the pointer according to a mask.","Lowers in MIR to Rvalue::UnaryOp with UnOp::PtrMetadata.","See documentation of &lt;*const T&gt;::offset_from for details.","See documentation of &lt;*const T&gt;::sub_ptr for details.","Determines whether the raw bytes of the two values are …","This is an implementation detail of crate::ptr::read and …","Returns the nearest integer to an f32. Changing the …","Returns the nearest integer to an f64. Changing the …","Performs rotate left.","Performs rotate right.","Returns the nearest integer to an f32. Rounds half-way …","Returns the nearest integer to an f64. Rounds half-way …","Returns the nearest integer to an f32. Rounds half-way …","Returns the nearest integer to an f64. Rounds half-way …","Magic intrinsic that derives its meaning from attributes …","Computes a + b saturating at numeric bounds.","Computes a - b saturating at numeric bounds.","SIMD compiler intrinsics.","Returns the sine of an f32.","Returns the sine of an f64.","The size of a type in bytes.","The size of the referenced value in bytes.","Returns the square root of an f32","Returns the square root of an f64","Performs checked integer subtraction","Does a three-way comparison between the two integer …","Reinterprets the bits of a value of one type as another …","Like transmute but even less checked at compile-time: …","Returns the integer part of an f32.","Returns the integer part of an f64.","Gets an identifier which is globally unique to the …","Gets a static string slice containing the name of a type.","Non-overlapping <em>typed</em> swap of a single value.","Returns whether we should perform some UB-checking at …","Performs a volatile load from the src pointer The pointer …","Performs a volatile store to the dst pointer. The pointer …","Returns the result of an unchecked addition resulting in …","Performs an unchecked division resulting in undefined …","Returns the result of an unchecked multiplication …","Returns the remainder of an unchecked division resulting …","Performs an unchecked left shift resulting in undefined …","Performs an unchecked right shift resulting in undefined …","Returns the result of an unchecked subtraction resulting …","Hints to the compiler that branch condition is likely to …","Informs the optimizer that this point in the code is not …","Returns the number of variants of the type T cast to a …","Equivalent to the appropriate llvm.memmove.p0i8.0i8.* …","Equivalent to the appropriate llvm.memcpy.p0i8.0i8.* …","Performs a volatile load from the src pointer.","Equivalent to the appropriate llvm.memset.p0i8.* …","Performs a volatile store to the dst pointer.","The intrinsic will return the alignment stored in that …","The intrinsic will return the size stored in that vtable.","Returns (a + b) mod 2N where N is the width of T in bits.","Returns (a * b) mod 2N where N is the width of T in bits.","Returns (a - b) mod 2N where N is the width of T in bits.","Sets count * size_of::&lt;T&gt;() bytes of memory starting at dst…","This is an implementation detail of crate::ptr::write and …","Unwinding is just not possible given the ABI of this …","Type representing basic blocks.","Call a function.","Emits a CastKind::PtrToPtr cast.","Emits a CastKind::Transmute cast.","A basic block that lies on an unwind path.","Gets the discriminant of a place.","Drop the contents of a place.","Access the field with the given index of some place.","We were already cleaning up for an ongoing unwind and a …","A non-cleanup basic block.","An unwind action that continues execution in a given basic …","An unwind action that continues unwinding.","A terminator that resumes the unwinding.","An unwind action that terminates the execution.","The reason we are terminating the process during unwinding.","An unwind action that triggers undefined behaviour.","Adds a variant projection with the given index to the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Macro for generating custom MIR.","Helper macro that allows you to treat a value expression …","Add two simd vectors elementwise.","Elementwise vector “and”.","Elementwise calculates the offset from a pointer vector …","Numerically cast a vector elementwise.","Truncate an integer vector to a bitmask.","Reverse bits of each element.","Swap bytes of each element.","Numerically cast a vector elementwise.","Cast a vector of pointers.","Round up each element to the next highest integer-valued …","Count the leading zeros of each element.","Count the number of ones in each element.","Count the trailing zeros of each element.","Divide lhs by rhs elementwise.","Tests elementwise equality of two vectors.","Expose a vector of pointers as a vector of addresses.","Extract an element from a vector.","Elementwise absolute value of a vector.","T must be a vector of floats.","T must be a vector of floats.","T must be a vector of floats.","T must be a vector of floats.","T must be a vector of floats.","T must be a vector of floats.","Round down each element to the next lowest integer-valued …","Computes (x*y) + z for each element but without any …","Elementwise maximum of two vectors.","Elementwise minimum of two vectors.","T must be a vector of floats.","Takes the square root of each element.","Read a vector of pointers.","Tests if x is greater than or equal to y elementwise.","Tests if x is greater than y elementwise.","Insert an element into a vector returning the updated …","Tests if x is less than or equal to y elementwise.","Tests if x is less than y elementwise.","Read a vector of pointers.","Write to a vector of pointers.","Multiply two simd vectors elementwise.","Tests elementwise inequality equality of two vectors.","Elementwise negation of a vector.","Elementwise vector “or”.","Add elements within a vector from left to right.","Add elements within a vector in arbitrary order. May also …","Check if all mask values are true.","Logical “and” all elements together.","Check if any mask value is true.","Return the maximum element of a vector.","Return the minimum element of a vector.","Multiply elements within a vector from left to right.","Multiply elements within a vector in arbitrary order. May …","Logical “or” all elements together.","Logical “exclusive or” all elements together.","Remainder of two vectors elementwise","Round each element to the closest integer-valued float. …","Add two simd vectors elementwise with saturation.","Subtract two simd vectors elementwise with saturation.","Write to a vector of pointers.","Select elements from a mask.","Select elements from a bitmask.","Elementwise vector left shift with UB on overflow.","Elementwise vector right shift with UB on overflow.","Shuffle two vectors by const indices.","Shuffle two vectors by const indices.","Subtract rhs from lhs elementwise.","Return the integer part of each element as an …","Create a vector of pointers from a vector of addresses.","Elementwise vector “exclusive or”.","A borrowed byte buffer which is incrementally filled and …","A writeable view of the unfilled portion of a BorrowedBuf.","Advance the cursor by asserting that n bytes have been …","Advance the cursor by asserting that n bytes have been …","Appends data to the cursor advancing position within its …","Returns a mutable reference to the whole cursor.","Returns the total capacity of the buffer.","Returns the available space in the cursor.","Clears the buffer resetting the filled region to empty.","Initializes all bytes in the cursor.","Returns a shared reference to the filled portion of the …","Returns a mutable reference to the filled portion of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the length of the initialized part of the buffer.","Returns a mutable reference to the initialized portion of …","Returns a shared reference to the initialized portion of …","Calls U::from(self).","Calls U::from(self).","Returns the length of the filled part of the buffer.","Reborrow this cursor by cloning it with a smaller lifetime.","Asserts that the first n bytes of the buffer are …","Asserts that the first n unfilled bytes of the cursor are …","Returns a cursor over the unfilled part of the buffer.","Returns a mutable reference to the uninitialized part of …","Returns the number of bytes written to this cursor since …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","An iterator over N elements of the iterator at a time.","Like Iterator::by_ref but requiring Sized so it can …","An iterator that links two iterators together in a chain.","An iterator that clones the elements of an underlying …","An iterator that copies the elements of an underlying …","An iterator that repeats endlessly.","An iterator able to yield elements from both ends.","An iterator that yields nothing.","An iterator that yields the current count and the element …","An iterator that knows its exact length.","Extend a collection with the contents of an iterator.","An iterator that filters the elements of iter with …","An iterator that uses f to both filter and map elements …","An iterator that maps each element to an iterator and …","An iterator that flattens one level of nesting in an …","An iterator where each iteration calls the provided …","Conversion from an Iterator.","An iterator that yields None forever after the underlying …","An iterator that always continues to yield None when …","An iterator that calls a function with a reference to each …","An iterator adapter that places a separator between all …","An iterator adapter that places a separator between all …","Which kind of iterator are we turning this into?","Conversion into an Iterator.","The type of the elements being iterated over.","The type of the elements being iterated over.","A trait for dealing with iterators.","An iterator that maps the values of iter with f.","An iterator that only accepts elements while predicate …","An iterator over the mapped windows of another iterator.","An iterator that yields an element exactly once.","An iterator that yields a single element of type A by …","An iterator with a peek() that returns an optional …","Trait to represent types that can be created by …","An iterator that repeats an element endlessly.","An iterator that repeats an element an exact number of …","An iterator that repeats elements of type A endlessly by …","A double-ended iterator with the direction inverted.","An iterator to maintain state while iterating another …","An iterator that skips over n elements of iter.","An iterator that rejects elements while predicate returns …","Objects that have a notion of <em>successor</em> and <em>predecessor</em> …","An iterator for stepping iterators by a custom amount.","A new iterator where each successive item is computed …","Trait to represent types that can be created by summing up …","An iterator that only iterates over the first n iterations …","An iterator that only accepts elements while predicate …","An iterator that reports an accurate length using …","A type that upholds all invariants of Step.","An iterator that iterates two other iterators …","Advances the iterator from the back by n elements.","Advances the iterator from the back by n elements.","Advances the iterator by n elements.","Advances the iterator by n elements.","Tests if every element of the iterator matches a predicate.","Tests if every element of the iterator matches a predicate.","Tests if any element of the iterator matches a predicate.","Tests if any element of the iterator matches a predicate.","Returns an iterator over N elements of the iterator at a …","Returns an iterator over N elements of the iterator at a …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Borrows an iterator rather than consuming it.","Borrows an iterator rather than consuming it.","Converts the arguments to iterators and links them …","Takes two iterators and creates a new iterator over both …","Takes two iterators and creates a new iterator over both …","Creates an iterator which clones all of its elements.","Creates an iterator which clones all of its elements.","Lexicographically compares the elements of this Iterator …","Lexicographically compares the elements of this Iterator …","Lexicographically compares the elements of this Iterator …","Lexicographically compares the elements of this Iterator …","Transforms an iterator into a collection.","Transforms an iterator into a collection.","Collects all the items from an iterator into a collection.","Collects all the items from an iterator into a collection.","Creates an iterator which copies all of its elements.","Creates an iterator which copies all of its elements.","Consumes the iterator counting the number of iterations …","Consumes the iterator counting the number of iterations …","Repeats an iterator endlessly.","Repeats an iterator endlessly.","Creates a Flatten iterator from the default value of I.","Creates a Chain from the default values for A and B.","Creates a Cloned iterator from the default value of I","Creates a Copied iterator from the default value of I","Creates an Enumerate iterator from the default value of I","Creates a Fuse iterator from the default value of I.","Creates a Rev iterator from the default value of I","Creates an iterator that yields nothing.","Creates an iterator which gives the current iteration …","Creates an iterator which gives the current iteration …","Determines if the elements of this Iterator are equal to …","Determines if the elements of this Iterator are equal to …","Determines if the elements of this Iterator are equal to …","Determines if the elements of this Iterator are equal to …","Extends a collection with the contents of an iterator.","Extends a collection with exactly one element.","Extends a collection with exactly one element.","Reserves capacity in a collection for the given number of …","Reserves capacity in a collection for the given number of …","Creates an iterator which uses a closure to determine if …","Creates an iterator which uses a closure to determine if …","Creates an iterator that both filters and maps.","Creates an iterator that both filters and maps.","Searches for an element of an iterator that satisfies a …","Searches for an element of an iterator that satisfies a …","Applies function to the elements of iterator and returns …","Applies function to the elements of iterator and returns …","Creates an iterator that works like map but flattens …","Creates an iterator that works like map but flattens …","Creates an iterator that flattens nested structure.","Creates an iterator that flattens nested structure.","Folds every element into an accumulator by applying an …","Folds every element into an accumulator by applying an …","Calls a closure on each element of an iterator.","Calls a closure on each element of an iterator.","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new iterator where each iteration calls the …","Creates a new iterator where each iteration calls the …","Creates a value from an iterator.","Creates an iterator which ends after the first None.","Creates an iterator which ends after the first None.","Determines if the elements of this Iterator are …","Determines if the elements of this Iterator are …","Determines if the elements of this Iterator are …","Determines if the elements of this Iterator are …","Does something with each element of an iterator passing …","Does something with each element of an iterator passing …","Creates a new iterator which places a copy of separator …","Creates a new iterator which places a copy of separator …","Creates a new iterator which places an item generated by …","Creates a new iterator which places an item generated by …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Creates an iterator from a value.","Returns an iterator over the remaining elements of the …","Returns true if the iterator is empty.","Returns true if the iterator is empty.","Checks if the elements of this iterator are partitioned …","Checks if the elements of this iterator are partitioned …","Checks if the elements of this iterator are sorted.","Checks if the elements of this iterator are sorted.","Checks if the elements of this iterator are sorted using …","Checks if the elements of this iterator are sorted using …","Checks if the elements of this iterator are sorted using …","Checks if the elements of this iterator are sorted using …","Consumes the iterator returning the last element.","Consumes the iterator returning the last element.","Determines if the elements of this Iterator are …","Determines if the elements of this Iterator are …","Returns the exact remaining length of the iterator.","Returns the exact remaining length of the iterator.","Determines if the elements of this Iterator are …","Determines if the elements of this Iterator are …","Takes a closure and creates an iterator which calls that …","Takes a closure and creates an iterator which calls that …","Creates an iterator that both yields elements based on a …","Creates an iterator that both yields elements based on a …","Calls the given function f for each contiguous window of …","Calls the given function f for each contiguous window of …","Returns the maximum element of an iterator.","Returns the maximum element of an iterator.","Returns the element that gives the maximum value with …","Returns the element that gives the maximum value with …","Returns the element that gives the maximum value from the …","Returns the element that gives the maximum value from the …","Returns the minimum element of an iterator.","Returns the minimum element of an iterator.","Returns the element that gives the minimum value with …","Returns the element that gives the minimum value with …","Returns the element that gives the minimum value from the …","Returns the element that gives the minimum value from the …","Determines if the elements of this Iterator are not equal …","Determines if the elements of this Iterator are not equal …","Advances the iterator and returns the next value.","Overflow Behavior","Removes and returns an element from the end of the …","Advances the iterator and returns an array containing the …","Advances the iterator and returns an array containing the …","Consume and return the next value of this iterator if a …","Consume and return the next item if it is equal to expected…","Returns the nth element of the iterator.","Returns the nth element of the iterator.","Returns the nth element from the end of the iterator.","Returns the nth element from the end of the iterator.","Creates an iterator that yields an element exactly once.","Creates an iterator that lazily generates a value exactly …","Lexicographically compares the PartialOrd elements of this …","Lexicographically compares the PartialOrd elements of this …","Lexicographically compares the elements of this Iterator …","Lexicographically compares the elements of this Iterator …","Consumes an iterator creating two collections from it.","Consumes an iterator creating two collections from it.","Reorders the elements of this iterator <em>in-place</em> according …","Reorders the elements of this iterator <em>in-place</em> according …","Returns a reference to the next() value without advancing …","Returns a mutable reference to the next() value without …","Creates an iterator which can use the peek and peek_mut …","Creates an iterator which can use the peek and peek_mut …","Searches for an element in an iterator returning its …","Searches for an element in an iterator returning its …","Method which takes an iterator and generates Self from the …","Iterates over the entire iterator multiplying all the …","Iterates over the entire iterator multiplying all the …","Reduces the elements to a single one by repeatedly …","Reduces the elements to a single one by repeatedly …","Creates a new iterator that endlessly repeats a single …","Creates a new iterator that repeats a single element a …","Creates a new iterator that repeats elements of type A …","Reverses an iterator’s direction.","Reverses an iterator’s direction.","Searches for an element of an iterator from the back that …","Searches for an element of an iterator from the back that …","An iterator method that reduces the iterator’s elements …","An iterator method that reduces the iterator’s elements …","Searches for an element in an iterator from the right …","Searches for an element in an iterator from the right …","An iterator adapter which like fold holds internal …","An iterator adapter which like fold holds internal …","Returns the bounds on the remaining length of the iterator.","Returns the bounds on the remaining length of the iterator.","Creates an iterator that skips the first n elements.","Creates an iterator that skips the first n elements.","Creates an iterator that skips elements based on a …","Creates an iterator that skips elements based on a …","Creates an iterator starting at the same point but …","Creates an iterator starting at the same point but …","Returns the number of <em>successor</em> steps required to get from …","Creates a new iterator where each successive item is …","Method which takes an iterator and generates Self from the …","Sums the elements of an iterator.","Sums the elements of an iterator.","Creates an iterator that yields the first n elements or …","Creates an iterator that yields the first n elements or …","Creates an iterator that yields elements based on a …","Creates an iterator that yields elements based on a …","Fallibly transforms an iterator into a collection short …","Fallibly transforms an iterator into a collection short …","Applies function to the elements of iterator and returns …","Applies function to the elements of iterator and returns …","An iterator method that applies a function as long as it …","An iterator method that applies a function as long as it …","An iterator method that applies a fallible function to …","An iterator method that applies a fallible function to …","Reduces the elements to a single one by repeatedly …","Reduces the elements to a single one by repeatedly …","This is the reverse version of Iterator::try_fold(): it …","This is the reverse version of Iterator::try_fold(): it …","Converts an iterator of pairs into a pair of containers.","Converts an iterator of pairs into a pair of containers.","Converts the arguments to iterators and zips them.","‘Zips up’ two iterators into a single iterator of …","‘Zips up’ two iterators into a single iterator of …","A marker for types which can be used as types of const …","Derive macro generating an impl of the trait ConstParamTy.","Types whose values can be duplicated simply by copying …","Derive macro generating an impl of the trait Copy.","A marker for types that can be dropped.","The type of the discriminant which must satisfy the trait …","Compiler-internal trait used to indicate the type of enum …","A common trait implemented by all function pointers.","Used to determine whether a type contains any UnsafeCell …","Zero-sized type used to mark things that “act like” …","A marker type which does not implement Unpin.","A marker for pointer-like types.","Types that can be transferred across thread boundaries.","Types with a constant size known at compile time.","Derive macro generating impls of traits related to smart …","Required trait for constants used in pattern matches.","Types for which it is safe to share references between …","A marker for tuple types.","Types that do not require any pinning guarantees.","Types that can be “unsized” to a dynamically-sized …","Returns the address of the function pointer.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Assume only that alignment conditions are met.","What transmutation safety conditions shall the compiler …","Are values of a type transmutable into values of another …","Opaque type representing the discriminant of an enum.","Assume only that lifetime conditions are met.","A wrapper to inhibit the compiler from automatically …","A wrapper type to construct uninitialized instances of T.","Do not assume that <em>you</em> have ensured any safety properties …","Assume only that safety conditions are met.","Assume only that dynamically-satisfiable validity …","Returns the ABI-required minimum alignment of a type in …","Returns the ABI-required minimum alignment of the type of …","Returns the ABI-required minimum alignment of the type of …","When true the compiler assumes that <em>you</em> are ensuring …","Assume both self and other_assumptions.","Extracts the values from an array of MaybeUninit …","Returns the contents of this MaybeUninit as a slice of …","Returns the contents of this MaybeUninit as a mutable …","Gets a mutable pointer to the contained value. Reading …","Gets a pointer to the contained value. Reading from this …","Extracts the value from the MaybeUninit&lt;T&gt; container. This …","Drops the contained value in place.","Gets a mutable (unique) reference to the contained value.","Reads the value from the MaybeUninit&lt;T&gt; container. The …","Gets a shared reference to the contained value.","Assume self excepting other_assumptions.","Clones the elements from src to this returning a mutable …","Bitwise-copies a value.","Copies the elements from src to this returning a mutable …","Returns a value uniquely identifying the enum variant in v.","Disposes of a value.","Manually drops the contained value. This is exactly …","Fills this with elements by cloning value returning a …","Fills this with elements yielded by an iterator until …","Fills this with elements returned by calling a closure …","Takes ownership and “forgets” about the value <strong>without </strong>…","Like forget but also accepts unsized values.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Extracts the value from the ManuallyDrop container.","When true the compiler assume that <em>you</em> are ensuring that …","Returns the ABI-required minimum alignment of a type in …","Returns the ABI-required minimum alignment of the type of …","Returns true if dropping values of type T matters.","Wrap a value to be manually dropped.","Creates a new MaybeUninit&lt;T&gt; initialized with the given …","Expands to the offset in bytes of a field from the …","Moves src into the referenced dest returning the previous …","When true the compiler assumes that <em>you</em> have ensured that …","Returns the size of a type in bytes.","Returns the size of the pointed-to value in bytes.","Returns the size of the pointed-to value in bytes.","Returns the contents of this slice of MaybeUninit as a …","Returns the contents of this mutable slice of MaybeUninit …","Gets a mutable pointer to the first element of the array.","Gets a pointer to the first element of the array.","Assuming all the elements are initialized get a mutable …","Assuming all the elements are initialized get a slice to …","Swaps the values at two mutable locations without …","Replaces dest with the default value of T returning the …","Takes the value from the ManuallyDrop&lt;T&gt; container out.","Reinterprets the bits of a value of one type as another …","Interprets src as having type &amp;Dst and then reads src …","Transposes a MaybeUninit&lt;[T; N]&gt; into a [MaybeUninit&lt;T&gt;; N]…","Creates a new MaybeUninit&lt;T&gt; in an uninitialized state.","Create a new array of MaybeUninit&lt;T&gt; items in an …","Bypasses Rust’s normal memory-initialization checks by …","When true the compiler assumes that <em>you</em> are ensuring that …","Returns the number of variants in the enum type T.","Sets the value of the MaybeUninit&lt;T&gt;.","Returns the value of type T represented by the all-zero …","Creates a new MaybeUninit&lt;T&gt; in an uninitialized state …","An error which can be returned when parsing an IP address …","Admin-Local scope.","The size of an IPv4 address in bits.","The size of an IPv6 address in bits.","An IPv4 address representing the broadcast address: …","Global scope.","Interface-Local scope.","An IP address either IPv4 or IPv6.","An IPv4 address.","An IPv6 address.","Scope of an IPv6 multicast address as defined in IETF RFC …","An IPv4 address with the address pointing to localhost: …","An IPv6 address representing localhost: ::1.","Link-Local scope.","Organization-Local scope.","Realm-Local scope.","Site-Local scope.","An internet socket address either IPv4 or IPv6.","An IPv4 socket address.","An IPv6 socket address.","An IPv4 address representing an unspecified address: …","An IPv6 address representing the unspecified address: ::","An IPv4 address.","An IPv4 socket address.","An IPv6 address.","An IPv6 socket address.","Returns the flow information associated with this address.","Creates an IpAddr::V6 from a sixteen element byte array.","Returns the argument unchanged.","Creates an IpAddr::V6 from an eight element 16-bit array.","Copies this address to a new IpAddr::V4.","Creates an IpAddr::V4 from a four element byte array.","Copies this address to a new IpAddr::V6.","Uses Ipv4Addr::from_bits to convert a host byte order u32 …","Creates an Ipv4Addr from a four element byte array.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an Ipv6Addr from a sixteen element byte array.","Uses Ipv6Addr::from_bits to convert a host byte order u128 …","Creates an Ipv6Addr from an eight element 16-bit array.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a SocketAddrV4 into a SocketAddr::V4.","Converts a tuple struct (Into&lt;IpAddr&gt; u16) into a …","Converts a SocketAddrV6 into a SocketAddr::V6.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a native byte order u32 into an IPv4 address.","Converts a native byte order u128 into an IPv6 address.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the IP address associated with this socket address.","Returns the IP address associated with this socket address.","Returns the IP address associated with this socket address.","Returns true if this address is in a range designated for …","Returns true if this address part of the 198.18.0.0/15 …","Returns true if this is an address reserved for …","Returns true if this is a broadcast address (…","Returns true if this address is in a range designated for …","Returns true if this address is in a range designated for …","Returns true if this is an address reserved for …","Returns true if the address appears to be globally …","Returns true if the address appears to be globally …","Returns true if the address appears to be globally …","Returns true if this address is an IPv4 address and false …","Returns true if the IP address in this SocketAddr is an …","Returns true if the address is an IPv4-mapped address (…","Returns true if this address is an IPv6 address and false …","Returns true if the IP address in this SocketAddr is an …","Returns true if the address is link-local (169.254.0.0/16).","Returns true if this is a loopback address.","Returns true if this is a loopback address (127.0.0.0/8).","Returns true if this is the loopback address (::1) as …","Returns true if this is a multicast address.","Returns true if this is a multicast address (224.0.0.0/4).","Returns true if this is a multicast address (ff00::/8).","Returns true if this is a private address.","Returns true if this address is reserved by IANA for …","Returns true if this address is part of the Shared Address …","Returns true if this is a unicast address as defined by …","Returns true if the address is a globally routable unicast …","Returns true if the address is a unicast address with …","Returns true if this is a unique local address (fc00::/7).","Returns true for the special ‘unspecified’ address.","Returns true for the special ‘unspecified’ address (…","Returns true for the special ‘unspecified’ address (::…","Returns the address’s multicast scope if the address is …","Creates a new IPv4 address from four eight-bit octets.","Creates a new IPv6 address from eight 16-bit segments.","Creates a new socket address from an IP address and a port …","Creates a new socket address from an IPv4 address and a …","Creates a new socket address from an IPv6 address a …","Returns the four eight-bit integers that make up this …","Returns the sixteen eight-bit integers the IPv6 address …","Parse an IP address from a slice of bytes.","Parse an IPv4 address from a slice of bytes.","Parse an IPv6 address from a slice of bytes.","Parse a socket address from a slice of bytes.","Parse an IPv4 socket address from a slice of bytes.","Parse an IPv6 socket address from a slice of bytes.","Returns the port number associated with this socket …","Returns the port number associated with this socket …","Returns the port number associated with this socket …","Returns the scope ID associated with this address.","Returns the eight 16-bit segments that make up this …","Changes the flow information associated with this socket …","Changes the IP address associated with this socket address.","Changes the IP address associated with this socket address.","Changes the IP address associated with this socket address.","Changes the port number associated with this socket …","Changes the port number associated with this socket …","Changes the port number associated with this socket …","Changes the scope ID associated with this socket address.","Converts an IPv4 address into a u32 representation using …","Converts an IPv6 address into a u128 representation using …","Converts this address to an IpAddr::V4 if it is an …","Converts this address to an IpAddr::V4 if it is an …","Converts this address to an IPv4 address if it is either …","Converts this address to an IPv4 address if it’s an …","Converts this address to an IPv4-compatible IPv6 address.","Converts this address to an IPv4-mapped IPv6 address.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Value being parsed is empty.","A classification of floating point numbers.","Positive or negative infinity which often results from …","Enum to store the various types of errors that can cause …","Contains an invalid digit in its context.","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","NaN (not a number): this value results from calculations …","Integer is too small to store in target integer type.","A value that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","A regular floating point number not any of the …","An error which can be returned when parsing a float.","An error which can be returned when parsing an integer.","Integer is too large to store in target integer type.","Provides intentionally-saturating arithmetic on T.","“Subnormal” or “denormal” floating point …","The error type returned when a checked integral type …","Provides intentionally-wrapped arithmetic on T.","Value was Zero","Positive or negative zero.","A marker trait for primitive types which can be zero.","Computes the absolute value of self. See i32::abs for …","Computes the absolute value of self. See i128::abs for …","Computes the absolute value of self. See isize::abs for …","Computes the absolute value of self. See i64::abs for …","Computes the absolute value of self. See i8::abs for …","Computes the absolute value of self. See i16::abs for …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Computes the absolute value of self wrapping around at …","Computes the absolute value of self wrapping around at …","Computes the absolute value of self wrapping around at …","Computes the absolute value of self wrapping around at …","Computes the absolute value of self wrapping around at …","Computes the absolute value of self wrapping around at …","Checked absolute value. Checks for overflow and returns …","Checked absolute value. Checks for overflow and returns …","Checked absolute value. Checks for overflow and returns …","Checked absolute value. Checks for overflow and returns …","Checked absolute value. Checks for overflow and returns …","Checked absolute value. Checks for overflow and returns …","Adds an unsigned integer to a non-zero value. Checks for …","Adds an unsigned integer to a non-zero value. Checks for …","Adds an unsigned integer to a non-zero value. Checks for …","Adds an unsigned integer to a non-zero value. Checks for …","Adds an unsigned integer to a non-zero value. Checks for …","Adds an unsigned integer to a non-zero value. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Converts NonZero&lt;u8&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;i32&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;i8&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;i16&gt; to NonZero&lt;i32&gt; losslessly.","Converts NonZero&lt;u32&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;u32&gt; to NonZero&lt;u128&gt; losslessly.","Converts NonZero&lt;i32&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;u32&gt; to NonZero&lt;u64&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;u128&gt; losslessly.","Converts NonZero&lt;i8&gt; to NonZero&lt;i16&gt; losslessly.","Converts NonZero&lt;i16&gt; to NonZero&lt;isize&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;u64&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;u16&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;usize&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;u32&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;u128&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;u64&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;i64&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;u64&gt; to NonZero&lt;u128&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;u64&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;i16&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;i32&gt; losslessly.","Converts NonZero&lt;i16&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;i32&gt; losslessly.","Converts NonZero&lt;u32&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;isize&gt; losslessly.","Converts NonZero&lt;i8&gt; to NonZero&lt;isize&gt; losslessly.","Converts NonZero&lt;i8&gt; to NonZero&lt;i32&gt; losslessly.","Converts NonZero&lt;i8&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;u32&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;i128&gt; losslessly.","Returns the argument unchanged.","Converts NonZero&lt;u16&gt; to NonZero&lt;usize&gt; losslessly.","Converts NonZero&lt;i16&gt; to NonZero&lt;i128&gt; losslessly.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts a reference to a non-zero mutable reference if …","Converts a mutable reference to a non-zero mutable …","Returns the contained value as a primitive type.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …"],"9":["Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Outputs the detailed cause of parsing an integer failing.","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Creates a non-zero if the given value is not zero.","Creates a non-zero without checking whether the value is …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Computes the absolute value of self with overflow …","Computes the absolute value of self with overflow …","Computes the absolute value of self with overflow …","Computes the absolute value of self with overflow …","Computes the absolute value of self with overflow …","Computes the absolute value of self with overflow …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Saturating absolute value see i64::saturating_abs.","Saturating absolute value see i8::saturating_abs.","Saturating absolute value see i128::saturating_abs.","Saturating absolute value see i32::saturating_abs.","Saturating absolute value see i16::saturating_abs.","Saturating absolute value see isize::saturating_abs.","Adds an unsigned integer to a non-zero value. Return …","Adds an unsigned integer to a non-zero value. Return …","Adds an unsigned integer to a non-zero value. Return …","Adds an unsigned integer to a non-zero value. Return …","Adds an unsigned integer to a non-zero value. Return …","Adds an unsigned integer to a non-zero value. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Saturating negation. Computes -self returning …","Saturating negation. Computes -self returning …","Saturating negation. Computes -self returning …","Saturating negation. Computes -self returning …","Saturating negation. Computes -self returning …","Saturating negation. Computes -self returning …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Attempts to convert u32 to NonZero&lt;u32&gt;.","Attempts to convert i128 to NonZero&lt;i128&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;u16&gt; to NonZero&lt;i16&gt;.","Attempts to convert u128 to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i64&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;i32&gt;.","Attempts to convert usize to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;u8&gt;.","Attempts to convert i32 to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;i128&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;usize&gt;.","Attempts to convert u8 to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i64&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;u16&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;u32&gt;.","Attempts to convert i8 to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;u8&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i128&gt;.","Attempts to convert u64 to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i128&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;i64&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;u32&gt;.","Attempts to convert i16 to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;i64&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;usize&gt;.","Attempts to convert u16 to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;u64&gt;.","Attempts to convert i64 to NonZero&lt;i64&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;u16&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;u16&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;u8&gt;.","Attempts to convert isize to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;i64&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u32&gt;.","Adds an unsigned integer to a non-zero value assuming …","Adds an unsigned integer to a non-zero value assuming …","Adds an unsigned integer to a non-zero value assuming …","Adds an unsigned integer to a non-zero value assuming …","Adds an unsigned integer to a non-zero value assuming …","Adds an unsigned integer to a non-zero value assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Wrapping absolute value see i32::wrapping_abs.","Wrapping absolute value see i128::wrapping_abs.","Wrapping absolute value see i16::wrapping_abs.","Wrapping absolute value see isize::wrapping_abs.","Wrapping absolute value see i8::wrapping_abs.","Wrapping absolute value see i64::wrapping_abs.","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","The addition operator +.","The addition assignment operator +=.","An async-aware version of the Fn trait.","An async-aware version of the FnMut trait.","An async-aware version of the FnOnce trait.","The bitwise AND operator &amp;.","The bitwise AND assignment operator &amp;=.","The bitwise OR operator |.","The bitwise OR assignment operator |=.","The bitwise XOR operator ^.","The bitwise XOR assignment operator ^=.","An endpoint of a range of keys.","Exit the operation without running subsequent phases.","Future returned by AsyncFnOnce::async_call_once.","Future returned by AsyncFnMut::async_call_mut and …","Trait that indicates that this is a pointer or a wrapper …","The coroutine completed with a return value.","Move on to the next phase of the operation as normal.","Used to tell an operation whether it should exit early or …","The trait implemented by builtin coroutine types.","The result of a coroutine resumption.","Used for immutable dereferencing operations like *v.","Used for mutable dereferencing operations like in *v = 1;.","Perma-unstable marker trait. Indicates that the type has a …","DispatchFromDyn is used in the implementation of object …","The division operator /.","The division assignment operator /=.","Custom code within the destructor.","An exclusive bound.","The version of the call operator that takes an immutable …","The version of the call operator that takes a mutable …","The version of the call operator that takes a by-value …","Used to specify which residuals can be converted into …","An inclusive bound.","Used for indexing operations (container[index]) in …","Used for indexing operations (container[index]) in mutable …","The multiplication operator *.","The multiplication assignment operator *=.","The unary negation operator -.","The unary logical negation operator !.","OneSidedRange is implemented for built-in range types that …","The resulting type after applying the + operator.","The resulting type after applying the - operator.","The resulting type after applying the - operator.","Output type of the called closure’s future.","The resulting type after applying the ! operator.","The returned type after the call operator is used.","The type of the value produced by ? when <em>not</em> …","The resulting type after applying the * operator.","The resulting type after applying the / operator.","The resulting type after applying the % operator.","The resulting type after applying the &amp; operator.","The resulting type after applying the | operator.","The resulting type after applying the ^ operator.","The resulting type after applying the &lt;&lt; operator.","The resulting type after applying the &gt;&gt; operator.","The returned type after indexing.","A (half-open) range bounded inclusively below and …","RangeBounds is implemented by Rust’s built-in range …","A range only bounded inclusively below (start..).","An unbounded range (..).","A range bounded inclusively below and above (start..=end).","A range only bounded exclusively above (..end).","A range only bounded inclusively above (..=end).","The remainder operator %.","The remainder assignment operator %=.","Allows retrieving the canonical type implementing Try that …","The type of the value passed to FromResidual::from_residual","The type of value this coroutine returns.","The left shift operator &lt;&lt;. Note that because this trait …","The left shift assignment operator &lt;&lt;=.","The right shift operator &gt;&gt;. Note that because this trait …","The right shift assignment operator &gt;&gt;=.","The subtraction operator -.","The subtraction assignment operator -=.","The resulting type after dereferencing.","The ? operator and try {} blocks.","The “return” type of this meta-function.","An infinite endpoint. Indicates that there is no bound in …","Implement FromResidual&lt;Yeet&lt;T&gt;&gt; on your type to enable …","The type of value this coroutine yields.","The coroutine suspended with a value.","Performs the + operation.","Performs the += operation.","Converts from &amp;mut Bound&lt;T&gt; to Bound&lt;&amp;mut T&gt;.","Converts from &amp;Bound&lt;T&gt; to Bound&lt;&amp;T&gt;.","Call the AsyncFn returning a future which may borrow from …","Call the AsyncFnMut returning a future which may borrow …","Call the AsyncFnOnce returning a future which may move …","Performs the &amp; operation.","Performs the &amp;= operation.","Performs the | operation.","Performs the |= operation.","Performs the ^ operation.","Performs the ^= operation.","Used in ? to decide whether the operator should produce a …","Converts the ControlFlow into an Option which is Some if …","Performs the call operation.","Performs the call operation.","Performs the call operation.","Map a Bound&lt;&amp;T&gt; to a Bound&lt;T&gt; by cloning the contents of …","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Converts the ControlFlow into an Option which is Some if …","Dereferences the value.","Mutably dereferences the value.","Performs the / operation.","Performs the /= operation.","Executes the destructor for this type.","Returns the upper bound of the range (inclusive).","The upper bound of the range (exclusive).","The upper bound of the range (exclusive).","The upper bound of the range (inclusive)","End index bound.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs the type from its Output type.","Constructs the type from a compatible Residual type.","Performs the indexing (container[index]) operation.","Performs the mutable indexing (container[index]) operation.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Destructures the RangeInclusive into (lower bound upper …","Returns true if this is a Break variant.","Returns true if this is a Continue variant.","Returns true if the range contains no items.","Returns true if the range contains no items.","Maps a Bound&lt;T&gt; to a Bound&lt;U&gt; by applying a function to …","Maps ControlFlow&lt;B C&gt; to ControlFlow&lt;T C&gt; by applying a …","Maps ControlFlow&lt;B C&gt; to ControlFlow&lt;B T&gt; by applying a …","Performs the * operation.","Performs the *= operation.","Performs the unary - operation.","Creates a new inclusive range. Equivalent to writing …","Performs the unary ! operation.","Performs the % operation.","Performs the %= operation.","Resumes the execution of this coroutine.","Performs the &lt;&lt; operation.","Performs the &lt;&lt;= operation.","Performs the &gt;&gt; operation.","Performs the &gt;&gt;= operation.","Returns the lower bound of the range (inclusive).","The lower bound of the range (inclusive).","The lower bound of the range (inclusive).","Start index bound.","Performs the - operation.","Performs the -= operation.","An iterator over the value in Some variant of an Option.","An iterator over a reference to the Some variant of an …","An iterator over a mutable reference to the Some variant …","No value.","The Option type. See the module level documentation for …","Some value of type T.","Returns None if the option is None otherwise returns optb.","Returns None if the option is None otherwise calls f with …","Converts from Option&lt;T&gt; (or &amp;Option&lt;T&gt;) to …","Converts from Option&lt;T&gt; (or &amp;mut Option&lt;T&gt;) to …","Converts from &amp;mut Option&lt;T&gt; to Option&lt;&amp;mut T&gt;.","Returns a mutable slice of the contained value if any. If …","Converts from Pin&lt;&amp;mut Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;mut T&gt;&gt;.","Converts from Pin&lt;&amp;Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;T&gt;&gt;.","Converts from &amp;Option&lt;T&gt; to Option&lt;&amp;T&gt;.","Returns a slice of the contained value if any. If this is …","Maps an Option&lt;&amp;mut T&gt; to an Option&lt;T&gt; by cloning the …","Maps an Option&lt;&amp;T&gt; to an Option&lt;T&gt; by cloning the contents …","Maps an Option&lt;&amp;mut T&gt; to an Option&lt;T&gt; by copying the …","Maps an Option&lt;&amp;T&gt; to an Option&lt;T&gt; by copying the contents …","Returns None.","Returns the contained Some value consuming the self value.","Returns None if the option is None otherwise calls …","Converts from Option&lt;Option&lt;T&gt;&gt; to Option&lt;T&gt;.","Converts from &amp;mut Option&lt;T&gt; to Option&lt;&amp;mut T&gt;","Converts from &amp;Option&lt;T&gt; to Option&lt;&amp;T&gt;.","Returns the argument unchanged.","Moves val into a new Some.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Takes each element in the Iterator: if it is None no …","Inserts value into the option if it is None then returns …","Inserts the default value into the option if it is None …","Inserts a value computed from f into the option if it is …","Inserts value into the option then returns a mutable …","Calls a function with a reference to the contained value …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns a consuming iterator over the possibly contained …","Returns true if the option is a None value.","Returns true if the option is a None or the value inside …","Returns true if the option is a Some value.","Returns true if the option is a Some and the value inside …","Returns an iterator over the possibly contained value.","Returns a mutable iterator over the possibly contained …","Maps an Option&lt;T&gt; to Option&lt;U&gt; by applying a function to a …","Returns the provided default result (if none) or applies …","Computes a default function result (if none) or applies a …","Transforms the Option&lt;T&gt; into a Result&lt;T E&gt; mapping …","Transforms the Option&lt;T&gt; into a Result&lt;T E&gt; mapping …","Returns the option if it contains a value otherwise …","Returns the option if it contains a value otherwise calls …","Takes each element in the Iterator: if it is a None no …","Replaces the actual value in the option by the value given …","Takes each element in the Iterator: if it is a None no …","Takes the value out of the option leaving a None in its …","Takes the value out of the option but only if the …","Transposes an Option of a Result into a Result of an Option…","Returns the contained Some value consuming the self value.","Returns the contained Some value or a provided default.","Returns the contained Some value or a default.","Returns the contained Some value or computes it from a …","Returns the contained Some value consuming the self value","Unzips an option containing a tuple of two options.","Returns Some if exactly one of self optb is Some …","Zips self with another Option.","Zips self and another Option with function f.","A simple wrapper around a type to assert that it is unwind …","A struct containing information about the location of a …","A struct providing information about a panic.","A message that was given to the panic!() macro.","A marker trait representing types where a shared reference …","A marker trait which represents “panic safe” types in …","Get the formatted message if it has no arguments to be …","Returns the source location of the caller of this …","Returns whether the panic handler is allowed to unwind the …","Returns the column from which the panic originated.","Returns the name of the source file from which the panic …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the line number from which the panic originated.","Returns information about the location from which the …","The message that was given to the panic! macro.","Returns the payload associated with the panic.","This function is used instead of panic_fmt in const eval.","The underlying implementation of core’s panic! macro …","The entry point for panicking with a formatted message.","Like panic but without unwinding and track_caller to …","Like panic_fmt but for non-unwinding panics.","Like panic_nounwind but also inhibits showing a backtrace.","This exists solely for the 2015 edition panic! macro to …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","This is a panic called with a message that’s a result of …","A pointer which pins its pointee in place.","Gets Pin&lt;&amp;mut T&gt; to the underlying pinned value from this …","Gets a mutable reference to the pinned value this Pin&lt;Ptr&gt; …","Gets a shared reference to the pinned value this Pin …","Returns the argument unchanged.","Gets a mutable reference to the data inside of this Pin.","Gets a shared reference out of a pin.","Gets a mutable reference to the data inside of this Pin.","Calls U::from(self).","Unwraps this Pin&lt;Ptr&gt; returning the underlying pointer.","Unwraps this Pin&lt;Ptr&gt; returning the underlying Ptr.","Converts this Pin&lt;&amp;mut T&gt; into a Pin&lt;&amp;T&gt; with the same …","Constructs a new pin by mapping the interior value.","Construct a new pin by mapping the interior value.","Construct a new Pin&lt;Ptr&gt; around a pointer to some data of …","Construct a new Pin&lt;Ptr&gt; around a reference to some data …","Constructs a Pin&lt;&amp;mut T&gt; by pinning a value: T locally.","Assigns a new value to the memory location pointed to by …","Get a pinning mutable reference from a static mutable …","Get a pinning reference from a &amp;&#39;static reference.","The 2015 version of the core prelude.","The 2018 version of the core prelude.","The 2021 version of the core prelude.","The 2024 version of the core prelude.","The first version of the prelude of The Rust Standard …","Attribute macro applied to a function to register it as a …","Attribute macro applied to a function to turn it into a …","Keeps the item it’s applied to if the passed path is …","Expands all #[cfg] and #[cfg_attr] attributes in the code …","Unstable placeholder for deref patterns.","Attribute macro used to apply derive macros.","Attribute macro used to apply derive macros for …","Attribute macro applied to a static to register it as a …","Attribute macro applied to a function to turn it into a …","An implementation detail of the #[test] and #[bench] …","Unstable placeholder for type ascription.","Attribute macro applied to a function to register it as a …","Attribute macro applied to a function to turn it into a …","Keeps the item it’s applied to if the passed path is …","Expands all #[cfg] and #[cfg_attr] attributes in the code …","Unstable placeholder for deref patterns.","Attribute macro used to apply derive macros.","Attribute macro used to apply derive macros for …","Attribute macro applied to a static to register it as a …","Attribute macro applied to a function to turn it into a …","An implementation detail of the #[test] and #[bench] …","Unstable placeholder for type ascription.","A type storing a usize which is a power of two and thus …","The metadata for a Dyn = dyn SomeTrait trait object type.","The smallest possible alignment 1.","The type for metadata in pointers and references to Self.","*mut T but non-zero and covariant.","Provides the pointer metadata type of any pointed-to type.","Pointers to types implementing this trait alias are …","Adds an offset to a pointer (convenience for …","Gets the “address” portion of the pointer.","Compares the <em>addresses</em> of the two pointers for equality …","Create a const raw pointer to a place without creating an …","Create a mut raw pointer to a place without creating an …","Returns the alignment of the type associated with this …","Computes the offset that needs to be applied to the …","Returns a unique reference to the value. If the value may …","Returns a raw pointer to the slice’s buffer.","Returns a non-null pointer to the slice’s buffer.","Returns the alignment as a NonZero&lt;usize&gt;.","Acquires the underlying *mut pointer.","Returns a shared reference to the value. If the value may …","Returns a unique references to the value. In contrast to …","Returns a shared references to the value. In contrast to …","Returns a shared reference to a slice of possibly …","Returns a unique reference to a slice of possibly …","Returns the alignment as a usize.","Calculates the offset from a pointer in bytes (convenience …","Calculates the offset from a pointer in bytes.","Calculates the distance between two pointers. The returned …","Calculates the offset from a pointer in bytes (convenience …","Casts to a pointer of another type.","Copies count * size_of::&lt;T&gt;() bytes from src to dst. The …","Copies count * size_of&lt;T&gt; bytes from src to self. The …","Copies count * size_of&lt;T&gt; bytes from src to self. The …","Copies count * size_of::&lt;T&gt;() bytes from src to dst. The …","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Creates a new pointer that is dangling but well-aligned.","Creates a new NonNull that is dangling but well-aligned.","Creates a new pointer that is dangling but well-aligned.","Executes the destructor (if any) of the pointed-to value.","Executes the destructor (if any) of the pointed-to value.","Compares raw pointers for equality.","Returns the argument unchanged.","Converts a &amp;mut T to a NonNull&lt;T&gt;.","Returns the argument unchanged.","Converts a &amp;T to a NonNull&lt;T&gt;.","Returns the argument unchanged.","Convert a mutable reference to a raw pointer.","Forms a (possibly-wide) raw pointer from a data pointer …","Performs the same functionality as std::ptr::from_raw_parts…","Performs the same functionality as from_raw_parts except …","Convert a reference to a raw pointer.","Returns a raw pointer to an element or subslice without …","Hash a raw pointer.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns whether the pointer is properly aligned for T.","Returns whether the pointer is aligned to align.","Returns true if the non-null raw slice has a length of 0.","Returns the size and alignment together as a Layout","Returns the length of a non-null raw slice.","Returns the base-2 logarithm of the alignment.","Creates a new pointer by mapping self’s address to a new …","Returns a bit mask that can be used to match this …","Extract the metadata component of a pointer.","Creates a new NonNull if ptr is non-null.","Creates an Alignment from a usize or returns None if it’…","Creates a new NonNull.","Creates an Alignment from a power-of-two usize.","Creates a null raw pointer.","Creates a null mutable raw pointer.","Returns the alignment for a type.","Adds an offset to a pointer.","Calculates the distance between two pointers. The returned …","Reads the value from src without moving it. This leaves the","Reads the value from self without moving it. This leaves …","Reads the value from src without moving it. This leaves the","Reads the value from self without moving it. This leaves …","Performs a volatile read of the value from src without …","Performs a volatile read of the value from self without …","Moves src into the pointed dst returning the previous dst …","Replaces the value at self with src returning the old …","Returns the size of the type associated with this vtable.","Forms a raw slice from a pointer and a length.","Creates a non-null raw slice from a thin pointer and a …","Forms a raw mutable slice from a pointer and a length.","Subtracts an offset from a pointer (convenience for …","Calculates the distance between two pointers <em>where it’s </em>…","Swaps the values at two mutable locations of the same …","Swaps the values at two mutable locations of the same …","Swaps count * size_of::&lt;T&gt;() bytes between the two regions …","Decompose a (possibly wide) pointer into its data pointer …","Creates a new pointer with the given address.","Convert an address back to a pointer picking up a …","Convert an address back to a mutable pointer picking up a …","Creates a pointer with the given address and no provenance.","Creates a pointer with the given address and no provenance.","Overwrites a memory location with the given value without …","Overwrites a memory location with the given value without …","Sets count * size_of::&lt;T&gt;() bytes of memory starting at dst…","Invokes memset on the specified pointer setting …","Overwrites a memory location with the given value without …","Overwrites a memory location with the given value without …","Performs a volatile write of a memory location with the …","Performs a volatile write of a memory location with the …","An endpoint of a range of keys.","An exclusive bound.","An inclusive bound.","By-value Range iterator.","By-value RangeFrom iterator.","By-value RangeInclusive iterator.","OneSidedRange is implemented for built-in range types that …","A (half-open) range bounded inclusively below and …","RangeBounds is implemented by Rust’s built-in range …","A range only bounded inclusively below (start..).","An unbounded range (..).","A range bounded inclusively below and above (start..=end).","A range only bounded exclusively above (..end).","A range only bounded inclusively above (..=end).","Objects that have a notion of <em>successor</em> and <em>predecessor</em> …","An infinite endpoint. Indicates that there is no bound in …","Returns the value that would be obtained by taking the …","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","The upper bound of the range (exclusive).","The upper bound of the range (inclusive)","The upper bound of the range (exclusive).","The upper bound of the range (inclusive).","End index bound.","Returns the value that would be obtained by taking the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns true if the range contains no items.","Returns true if the range contains no items.","Create an iterator over the elements within this range.","Create an iterator over the elements within this range.","Create an iterator over the elements within this range.","Legacy range types","Returns the remainder of the range being iterated over.","Returns the remainder of the range being iterated over.","Returns the remainder of the range being iterated over.","The lower bound of the range (inclusive).","The lower bound of the range (inclusive).","The lower bound of the range (inclusive).","Start index bound.","Returns the number of <em>successor</em> steps required to get from …","A (half-open) range bounded inclusively below and …","A range only bounded inclusively below (start..).","A range bounded inclusively below and above (start..=end).","The upper bound of the range (exclusive).","The lower bound of the range (inclusive).","The lower bound of the range (inclusive).","Contains the error value","An iterator over the value in a Ok variant of a Result.","An iterator over a reference to the Ok variant of a Result.","An iterator over a mutable reference to the Ok variant of …","Contains the success value","Result is a type that represents either success (Ok) or …","Returns res if the result is Ok otherwise returns the Err …","Calls op if the result is Ok otherwise returns the Err …","Converts from Result&lt;T E&gt; (or &amp;Result&lt;T E&gt;) to …","Converts from Result&lt;T E&gt; (or &amp;mut Result&lt;T E&gt;) to …","Converts from &amp;mut Result&lt;T E&gt; to Result&lt;&amp;mut T &amp;mut E&gt;.","Converts from &amp;Result&lt;T E&gt; to Result&lt;&amp;T &amp;E&gt;.","Maps a Result&lt;&amp;mut T E&gt; to a Result&lt;T E&gt; by cloning the …","Maps a Result&lt;&amp;T E&gt; to a Result&lt;T E&gt; by cloning the …","Maps a Result&lt;&amp;T E&gt; to a Result&lt;T E&gt; by copying the …","Maps a Result&lt;&amp;mut T E&gt; to a Result&lt;T E&gt; by copying the …","Converts from Result&lt;T E&gt; to Option&lt;E&gt;.","Returns the contained Ok value consuming the self value.","Returns the contained Err value consuming the self value.","Converts from Result&lt;Result&lt;T E&gt; E&gt; to Result&lt;T E&gt;","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Takes each element in the Iterator: if it is an Err no …","Calls a function with a reference to the contained value …","Calls a function with a reference to the contained value …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the contained Err value but never panics.","Returns a consuming iterator over the possibly contained …","Returns the contained Ok value but never panics.","Returns true if the result is Err.","Returns true if the result is Err and the value inside of …","Returns true if the result is Ok.","Returns true if the result is Ok and the value inside of …","Returns an iterator over the possibly contained value.","Returns a mutable iterator over the possibly contained …","Maps a Result&lt;T E&gt; to Result&lt;U E&gt; by applying a function …","Maps a Result&lt;T E&gt; to Result&lt;T F&gt; by applying a function …","Returns the provided default (if Err) or applies a …","Maps a Result&lt;T E&gt; to U by applying fallback function …","Converts from Result&lt;T E&gt; to Option&lt;T&gt;.","Returns res if the result is Err otherwise returns the Ok …","Calls op if the result is Err otherwise returns the Ok …","Takes each element in the Iterator: if it is an Err no …","Takes each element in the Iterator: if it is an Err no …","Transposes a Result of an Option into an Option of a Result…","Returns the contained Ok value consuming the self value.","Returns the contained Err value consuming the self value.","Returns the contained Err value consuming the self value …","Returns the contained Ok value or a provided default.","Returns the contained Ok value or a default","Returns the contained Ok value or computes it from a …","Returns the contained Ok value consuming the self value …","The number of bytes in a bitmask with this many lanes.","This type reinterpreted as bytes.","Map from the elements of the input vector to the output …","Number of elements in this vector.","Specifies the number of lanes in a SIMD vector as a type.","A SIMD vector mask for N elements of width specified by …","The mask element type corresponding to this element type.","Marker trait for types that may be used as SIMD mask …","A SIMD vector with the shape of [T; N] but the operations …","Supporting trait for Simd::cast.  Typically doesn’t need …","Marker trait for types that may be used as SIMD vector …","Statically guarantees that a lane count is marked as …","Create a vector from the elements of another vector.","Convert SIMD vectors to vectors of bytes","Returns true if all elements are set or false otherwise.","Returns true if any element is set or false otherwise.","Returns an array reference containing the entire SIMD …","Returns a mutable array reference containing the entire …","Converts the mask to a mask of any other element size.","Traits for comparing and ordering vectors.","Create a new vector from the elements of first and second.","Create a new vector from the elements of first and second.","Create a new mask from the elements of first and second.","Create a new mask from the elements of first and second.","Writes a SIMD vector to the first N elements of a slice.","Deinterleave two vectors.","A SIMD vector with one element of type f32.","A SIMD vector with 16 elements of type f32.","A SIMD vector with two elements of type f32.","A SIMD vector with 32 elements of type f32.","A SIMD vector with four elements of type f32.","A SIMD vector with 64 elements of type f32.","A SIMD vector with eight elements of type f32.","A SIMD vector with one element of type f64.","A SIMD vector with 16 elements of type f64.","A SIMD vector with two elements of type f64.","A SIMD vector with 32 elements of type f64.","A SIMD vector with four elements of type f64.","A SIMD vector with 64 elements of type f64.","A SIMD vector with eight elements of type f64.","Find the index of the first set element.","A Simd&lt;T N&gt; has a debug format like the one for [T]:","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an array of bools to a SIMD mask.","Converts an array to a SIMD vector.","Create an integer value from its representation as a byte …","Create a mask from a bitmask.","Create a mask from a bitmask vector.","Converts a vector of integers to a mask where 0 …","Converts a vector of integers to a mask where 0 …","Create an integer value from its representation as a byte …","Create a native endian integer value from its memory …","Converts a slice to a SIMD vector containing slice[..N].","Reads from potentially discontiguous indices in slice to …","Reads from indices in slice to construct a SIMD vector. If …","Read elementwise from pointers into a SIMD vector.","Reads from indices in slice to construct a SIMD vector. …","Conditionally read elementwise from pointers into a SIMD …","Reads from indices in slice to construct a SIMD vector. …","A SIMD vector with one element of type i16.","A SIMD vector with 16 elements of type i16.","A SIMD vector with two elements of type i16.","A SIMD vector with 32 elements of type i16.","A SIMD vector with four elements of type i16.","A SIMD vector with 64 elements of type i16.","A SIMD vector with eight elements of type i16.","A SIMD vector with one element of type i32.","A SIMD vector with 16 elements of type i32.","A SIMD vector with two elements of type i32.","A SIMD vector with 32 elements of type i32.","A SIMD vector with four elements of type i32.","A SIMD vector with 64 elements of type i32.","A SIMD vector with eight elements of type i32.","A SIMD vector with one element of type i64.","A SIMD vector with 16 elements of type i64.","A SIMD vector with two elements of type i64.","A SIMD vector with 32 elements of type i64.","A SIMD vector with four elements of type i64.","A SIMD vector with 64 elements of type i64.","A SIMD vector with eight elements of type i64.","A SIMD vector with one element of type i8.","A SIMD vector with 16 elements of type i8.","A SIMD vector with two elements of type i8.","A SIMD vector with 32 elements of type i8.","A SIMD vector with four elements of type i8.","A SIMD vector with 64 elements of type i8.","A SIMD vector with eight elements of type i8.","Interleave two vectors.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","A SIMD vector with one element of type isize.","A SIMD vector with 16 elements of type isize.","A SIMD vector with two elements of type isize.","A SIMD vector with 32 elements of type isize.","A SIMD vector with four elements of type isize.","A SIMD vector with 64 elements of type isize.","A SIMD vector with eight elements of type isize.","Returns the number of elements in this SIMD vector.","Reads contiguous elements from slice. Elements are read so …","Reads contiguous elements from slice. Elements are read so …","Reads contiguous elements from slice. Each element is read …","Reads contiguous elements from slice. Each element is read …","Reads contiguous elements starting at ptr. Each element is …","Reads contiguous elements from slice. Each element is read …","A SIMD mask with one element for vectors with 16-bit …","A SIMD mask with 16 elements for vectors with 16-bit …","A SIMD mask with two elements for vectors with 16-bit …","A SIMD mask with 32 elements for vectors with 16-bit …","A SIMD mask with four elements for vectors with 16-bit …","A SIMD mask with 64 elements for vectors with 16-bit …","A SIMD mask with eight elements for vectors with 16-bit …","A SIMD mask with one element for vectors with 32-bit …","A SIMD mask with 16 elements for vectors with 32-bit …","A SIMD mask with two elements for vectors with 32-bit …","A SIMD mask with 32 elements for vectors with 32-bit …","A SIMD mask with four elements for vectors with 32-bit …","A SIMD mask with 64 elements for vectors with 32-bit …","A SIMD mask with eight elements for vectors with 32-bit …","A SIMD mask with one element for vectors with 64-bit …","A SIMD mask with 16 elements for vectors with 64-bit …","A SIMD mask with two elements for vectors with 64-bit …","A SIMD mask with 32 elements for vectors with 64-bit …","A SIMD mask with four elements for vectors with 64-bit …","A SIMD mask with 64 elements for vectors with 64-bit …","A SIMD mask with eight elements for vectors with 64-bit …","A SIMD mask with one element for vectors with 8-bit …","A SIMD mask with 16 elements for vectors with 8-bit …","A SIMD mask with two elements for vectors with 8-bit …","A SIMD mask with 32 elements for vectors with 8-bit …","A SIMD mask with four elements for vectors with 8-bit …","A SIMD mask with 64 elements for vectors with 8-bit …","A SIMD mask with eight elements for vectors with 8-bit …","A SIMD mask with one element for vectors with …","A SIMD mask with 16 elements for vectors with …","A SIMD mask with two elements for vectors with …","A SIMD mask with 32 elements for vectors with …","A SIMD mask with four elements for vectors with …","A SIMD mask with 64 elements for vectors with …","A SIMD mask with eight elements for vectors with …","Traits for vectors with numeric elements.","The portable SIMD prelude.","Traits for vectors of pointers.","Resize a vector.","Reverse the order of the elements in the vector.","Rotates the vector such that the first OFFSET elements of …","Rotates the vector such that the first self.len() - OFFSET …","Writes the values in a SIMD vector to potentially …","Write pointers elementwise into a SIMD vector.","Writes values from a SIMD vector to multiple potentially …","Conditionally write pointers elementwise into a SIMD …","Writes values from a SIMD vector to multiple potentially …","Choose elements from two vectors.","Choose elements from two masks.","Sets the value of the specified element.","Sets the value of the specified element.","Constructs a new SIMD vector by copying elements from …","Construct a mask by setting all elements to the given …","Constructs a new SIMD vector with all elements set to the …","Conditionally write contiguous elements to slice. The …","Conditionally write contiguous elements starting from ptr. …","Conditionally write contiguous elements to slice. The …","Create a new vector from the elements of vector.","Create a new vector from the elements of vector.","Swizzle a vector of bytes according to the index vector. …","Create a new mask from the elements of mask.","Create a new mask from the elements of mask.","Tests the value of the specified element.","Tests the value of the specified element.","Converts a SIMD mask to an array of bools.","Converts a SIMD vector to an array.","Return the memory representation of this integer as a byte …","Create a bitmask from a mask.","Create a bitmask vector from a mask.","Converts the mask to a vector of integers where 0 …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","A SIMD vector with one element of type u16.","A SIMD vector with 16 elements of type u16.","A SIMD vector with two elements of type u16.","A SIMD vector with 32 elements of type u16.","A SIMD vector with four elements of type u16.","A SIMD vector with 64 elements of type u16.","A SIMD vector with eight elements of type u16.","A SIMD vector with one element of type u32.","A SIMD vector with 16 elements of type u32.","A SIMD vector with two elements of type u32.","A SIMD vector with 32 elements of type u32.","A SIMD vector with four elements of type u32.","A SIMD vector with 64 elements of type u32.","A SIMD vector with eight elements of type u32.","A SIMD vector with one element of type u64.","A SIMD vector with 16 elements of type u64.","A SIMD vector with two elements of type u64.","A SIMD vector with 32 elements of type u64.","A SIMD vector with four elements of type u64.","A SIMD vector with 64 elements of type u64.","A SIMD vector with eight elements of type u64.","A SIMD vector with one element of type u8.","A SIMD vector with 16 elements of type u8.","A SIMD vector with two elements of type u8.","A SIMD vector with 32 elements of type u8.","A SIMD vector with four elements of type u8.","A SIMD vector with 64 elements of type u8.","A SIMD vector with eight elements of type u8.","A SIMD vector with one element of type usize.","A SIMD vector with 16 elements of type usize.","A SIMD vector with two elements of type usize.","A SIMD vector with 32 elements of type usize.","A SIMD vector with four elements of type usize.","A SIMD vector with 64 elements of type usize.","A SIMD vector with eight elements of type usize.","The mask type returned by each comparison.","Parallel Ord.","Parallel PartialEq.","Parallel PartialOrd.","Restrict each element to a certain interval.","Test if each element is equal to the corresponding element …","Test if each element is greater than or equal to the …","Test if each element is greater than the corresponding …","Test if each element is less than or equal to the …","Test if each element is less than the corresponding …","Returns the element-wise maximum with other.","Returns the element-wise minimum with other.","Test if each element is equal to the corresponding element …","Bit representation of this SIMD vector type.","A SIMD vector with a different element type.","A SIMD vector with a different element type.","A SIMD vector with a different element type.","Mask type used for manipulating this SIMD vector type.","Mask type used for manipulating this SIMD vector type.","Scalar type contained by this SIMD vector type.","Scalar type contained by this SIMD vector type.","Scalar type contained by this SIMD vector type.","Operations on SIMD vectors of floats.","Operations on SIMD vectors of signed integers.","Operations on SIMD vectors of unsigned integers.","A SIMD vector of unsigned integers with the same element …","Produces a vector where every element has the absolute …","Lanewise absolute value implemented in Rust. Every …","Performs elementwise conversion of this vector’s …","Performs elementwise conversion of this vector’s …","Performs elementwise conversion of this vector’s …","Returns each element with the magnitude of self and the …","Raw transmutation from an unsigned integer vector type …","Returns true for each element if its value is neither …","Returns true for each element if its value is positive …","Returns true for each element if its value is NaN.","Returns true for each negative element and false if it is …","Returns true for each element if its value is neither …","Returns true for each positive element and false if it is …","Returns true for each element if it has a negative sign …","Returns true for each element if it has a positive sign …","Returns true for each element if its value is subnormal.","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Takes the reciprocal (inverse) of each element 1/x.","Returns the cumulative bitwise “and” across the …","Returns the cumulative bitwise “and” across the …","Returns the maximum element in the vector.","Returns the maximum element in the vector.","Returns the maximum element in the vector.","Returns the minimum element in the vector.","Returns the minimum element in the vector.","Returns the minimum element in the vector.","Returns the cumulative bitwise “or” across the …","Returns the cumulative bitwise “or” across the …","Reducing multiply.  Returns the product of the elements of …","Returns the product of the elements of the vector with …","Returns the product of the elements of the vector with …","Returns the sum of the elements of the vector.","Returns the sum of the elements of the vector with …","Returns the sum of the elements of the vector with …","Returns the cumulative bitwise “xor” across the …","Returns the cumulative bitwise “xor” across the …","Reverses the order of bits in each elemnent. The least …","Reverses the order of bits in each elemnent. The least …","Lanewise saturating absolute value implemented in Rust. …","Lanewise saturating add.","Lanewise saturating add.","Lanewise saturating negation implemented in Rust. As …","Lanewise saturating subtract.","Lanewise saturating subtract.","Replaces each element with a number that represents its …","Returns numbers representing the sign of each element.","Restrict each element to a certain interval unless it is …","Returns the maximum of each element.","Returns the minimum of each element.","Reverses the byte order of each element.","Reverses the byte order of each element.","Raw transmutation to an unsigned integer vector type with …","Converts each element from radians to degrees.","Rounds toward zero and converts to the same-width integer …","Converts each element from degrees to radians.","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Wrapping negation.","Vector of const pointers with the same number of elements.","Vector of const pointers with the same number of elements.","Vector of constant pointers to the same type.","Vector of isize with the same number of elements.","Vector of isize with the same number of elements.","Mask type used for manipulating this SIMD vector type.","Mask type used for manipulating this SIMD vector type.","Vector of mutable pointers to the same type.","Operations on SIMD vectors of constant pointers.","Operations on SIMD vectors of mutable pointers.","Vector of usize with the same number of elements.","Vector of usize with the same number of elements.","Gets the “address” portion of the pointer.","Gets the “address” portion of the pointer.","Casts to a pointer of another type.","Casts to a pointer of another type.","Changes constness without changing the type.","Changes constness without changing the type.","Exposes the “provenance” part of the pointer for …","Exposes the “provenance” part of the pointer for …","Returns true for each element that is null.","Returns true for each element that is null.","Creates a new pointer with the given address.","Creates a new pointer with the given address.","Convert an address back to a pointer picking up a …","Convert an address back to a pointer picking up a …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","An iterator over a slice in (non-overlapping) chunks (N …","An iterator over a slice in (non-overlapping) mutable …","A windowed iterator over a slice in overlapping chunks (N …","An iterator over slice in (non-overlapping) chunks …","An iterator over slice in (non-overlapping) mutable chunks …","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) mutable …","An iterator over a slice in (non-overlapping) mutable …","An iterator over the escaped version of a byte slice.","The error type returned by get_many_mut&lt;N&gt;.","The element type of the slice being matched on.","Immutable slice iterator","Mutable slice iterator.","The output type returned by methods.","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) mutable …","An iterator over a slice in (non-overlapping) mutable …","An iterator over subslices separated by elements that …","An iterator over the subslices of the vector which are …","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","A helper trait used for indexing operations.","Patterns in slices - currently only used by strip_prefix …","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","An iterator over the mutable subslices of the vector which …","An iterator over the mutable subslices of the vector which …","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","An iterator over overlapping subslices of length size.","Views the underlying data as a mutable subslice of the …","Currently the consumers of SlicePattern need a slice.","Views the underlying data as a subslice of the original …","Views the underlying data as a subslice of the original …","Returns a slice which contains items not yet handled by …","Creates an empty slice iterator.","Creates an empty slice iterator.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a reference to T into a slice of length 1 …","Forms a mutable slice from a pointer range.","Forms a slice from a pointer range.","Forms a slice from a pointer and a length.","Performs the same functionality as from_raw_parts except …","Converts a reference to T into a slice of length 1 …","Returns a shared reference to the output at this location …","Returns a mutable reference to the output at this …","Returns a pointer to the output at this location without …","Returns a mutable pointer to the output at this location …","Returns a shared reference to the output at this location …","Returns a mutable reference to the output at this …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Views the underlying data as a subslice of the original …","Pure Rust memchr implementation taken from rust-memchr","Performs bounds-checking of a range.","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Performs bounds-checking of a range without panicking.","Returns the first index matching the byte x in text.","Returns the last index matching the byte x in text.","An iterator over the bytes of a string slice.","An iterator over the chars of a string slice and their …","An iterator over the chars of a string slice.","An iterator of u16 over the string encoded as UTF-16.","The associated error which can be returned from parsing.","The return type of str::escape_debug.","The return type of str::escape_default.","The return type of str::escape_unicode.","Parse a value from a string","An iterator over the lines of a string as string slices.","Created with the method lines_any.","Created with the method match_indices.","Created with the method matches.","An error returned when parsing a bool using from_str fails","Created with the method rmatch_indices.","Created with the method rmatches.","Created with the method rsplit.","Created with the method rsplitn.","Created with the method rsplit_terminator.","Created with the method split.","An iterator over the non-ASCII-whitespace substrings of a …","An iterator over the substrings of a string terminated by …","Created with the method splitn.","Created with the method split_terminator.","An iterator over the non-whitespace substrings of a string","An item returned by the Utf8Chunks iterator.","An iterator used to decode a slice of mostly UTF-8 bytes …","Errors which can occur when attempting to interpret a …","Views the underlying data as a subslice of the original …","Views the underlying data as a subslice of the original …","Provides more information about the failure:","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an &amp;str from a pointer and a length.","Creates an &amp;mut str from a pointer and a length.","Parses a string s to return a value of this type.","Converts a slice of bytes to a string slice.","Converts a mutable slice of bytes to a mutable string …","Converts a slice of bytes to a string slice without …","Converts a slice of bytes to a string slice without …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the invalid sequence that caused a failure.","Reads the next code point out of a byte iterator (assuming …","Returns the byte position of the next character or the …","The string Pattern API.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns the remaining lines of the split string.","Returns remainder of the split string","Returns remainder of the split string.","Given a first byte determines how many bytes are in this …","Returns the next validated UTF-8 substring.","Returns the index in the given string up to which valid …","Associated type for &lt;&amp;[char; N] as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;[char; N] as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;F as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;char as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;&amp;[char] as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Expresses that every byte of the haystack has been …","A marker trait to express that a ReverseSearcher can be …","Expresses that a match of the pattern has been found at …","A string pattern.","Expresses that haystack[a..b] has been rejected as a …","A reverse searcher for a string pattern.","Result of calling Searcher::next() or …","A searcher for a string pattern.","Associated searcher for this pattern","Associated type for &lt;&amp;str as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Getter for the underlying string to be searched in","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Constructs the associated searcher from self and the …","Checks whether the pattern matches anywhere in the haystack","Checks whether the pattern matches at the front of the …","Checks whether the pattern matches at the back of the …","Performs the next search step starting from the front.","Performs the next search step starting from the back.","Finds the next Match result. See next().","Finds the next Match result. See next_back().","Finds the next Reject result. See next() and next_match().","Finds the next Reject result. See next_back().","Removes the pattern from the front of haystack if it …","Removes the pattern from the back of haystack if it …","Exclusive provides only <em>mutable</em> access also referred to …","Atomic types","Returns the argument unchanged.","Build a <em>mutable</em> reference to an Exclusive&lt;T&gt; from a <em>mutable</em>…","Build a <em>pinned mutable</em> reference to an Exclusive&lt;T&gt; from a …","Get exclusive access to the underlying value.","Get pinned exclusive access to the underlying value.","Calls U::from(self).","Unwrap the value contained in the Exclusive","Wrap a value in an Exclusive","An AtomicBool initialized to false.","An AtomicIsize initialized to 0.","An AtomicUsize initialized to 0.","Has the effects of both Acquire and Release together: For …","When coupled with a load if the loaded value was written …","A boolean type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","A raw pointer type which can be safely shared between …","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","Atomic memory orderings","No ordering constraints only atomic operations.","When coupled with a store all previous operations become …","Like Acquire/Release/AcqRel (for load store and …","Returns a mutable pointer to the underlying bool.","Returns a mutable pointer to the underlying pointer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Stores a value into the bool if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the bool if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the bool if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","A compiler memory fence.","Creates an AtomicBool initialized to false.","Creates a null AtomicPtr&lt;T&gt;.","An atomic fence.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Logical “and” with a boolean value.","Performs a bitwise “and” operation on the address of …","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Offsets the pointer’s address by adding val <em>bytes</em> …","Offsets the pointer’s address by subtracting val <em>bytes</em> …","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Logical “nand” with a boolean value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Logical “not” with a boolean value.","Logical “or” with a boolean value.","Performs a bitwise “or” operation on the address of …","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Offsets the pointer’s address by adding val (in units of …","Offsets the pointer’s address by subtracting val (in …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Logical “xor” with a boolean value.","Performs a bitwise “xor” operation on the address of …","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Returns the argument unchanged.","Converts a bool into an AtomicBool.","Converts a *mut T into an AtomicPtr&lt;T&gt;.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an i8 into an AtomicI8.","Returns the argument unchanged.","Converts an u8 into an AtomicU8.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an i16 into an AtomicI16.","Converts an u16 into an AtomicU16.","Returns the argument unchanged.","Converts an i32 into an AtomicI32.","Returns the argument unchanged.","Converts an u32 into an AtomicU32.","Returns the argument unchanged.","Converts an i64 into an AtomicI64.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an u64 into an AtomicU64.","Returns the argument unchanged.","Converts an isize into an AtomicIsize.","Returns the argument unchanged.","Converts an usize into an AtomicUsize.","Get atomic access to a &amp;mut bool.","Get atomic access to a pointer.","Get atomic access to a &amp;mut i8.","Get atomic access to a &amp;mut u8.","Get atomic access to a &amp;mut i16.","Get atomic access to a &amp;mut u16.","Get atomic access to a &amp;mut i32.","Get atomic access to a &amp;mut u32.","Get atomic access to a &amp;mut i64.","Get atomic access to a &amp;mut u64.","Get atomic access to a &amp;mut isize.","Get atomic access to a &amp;mut usize.","Get atomic access to a &amp;mut [bool] slice.","Get atomic access to a slice of pointers.","Get atomic access to a &amp;mut [i8] slice.","Get atomic access to a &amp;mut [u8] slice.","Get atomic access to a &amp;mut [i16] slice.","Get atomic access to a &amp;mut [u16] slice.","Get atomic access to a &amp;mut [i32] slice.","Get atomic access to a &amp;mut [u32] slice.","Get atomic access to a &amp;mut [i64] slice.","Get atomic access to a &amp;mut [u64] slice.","Get atomic access to a &amp;mut [isize] slice.","Get atomic access to a &amp;mut [usize] slice.","Creates a new AtomicBool from a pointer.","Creates a new AtomicPtr from a pointer.","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Returns a mutable reference to the underlying bool.","Returns a mutable reference to the underlying pointer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Get non-atomic access to a &amp;mut [AtomicBool] slice.","Get non-atomic access to a &amp;mut [AtomicPtr] slice.","Get non-atomic access to a &amp;mut [AtomicI8] slice","Get non-atomic access to a &amp;mut [AtomicU8] slice","Get non-atomic access to a &amp;mut [AtomicI16] slice","Get non-atomic access to a &amp;mut [AtomicU16] slice","Get non-atomic access to a &amp;mut [AtomicI32] slice","Get non-atomic access to a &amp;mut [AtomicU32] slice","Get non-atomic access to a &amp;mut [AtomicI64] slice","Get non-atomic access to a &amp;mut [AtomicU64] slice","Get non-atomic access to a &amp;mut [AtomicIsize] slice","Get non-atomic access to a &amp;mut [AtomicUsize] slice","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Loads a value from the bool.","Loads a value from the pointer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Creates a new AtomicBool.","Creates a new AtomicPtr.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Signals the processor that it is inside a busy-wait …","Stores a value into the bool.","Stores a value into the pointer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the bool returning the previous value.","Stores a value into the pointer returning the previous …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","The context of an asynchronous task.","A Builder used to construct a Context instance with …","A LocalWaker is analogous to a Waker but it does not …","Represents that a value is not ready yet.","Indicates whether a value is available or if the current …","A RawWaker allows the implementor of a task executor to …","A virtual function pointer table (vtable) that specifies …","Represents that a value is immediately ready.","A Waker is a handle for waking up a task by notifying its …","Get a reference to the underlying RawWaker.","Get a reference to the underlying RawWaker.","Builds the Context.","Assigns a clone of source to self unless …","Get the data pointer used to create this RawWaker.","Returns a reference to the extension data for the current …","This method is used to set the value for the extension …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Moves the value into a Poll::Ready to make a Poll&lt;T&gt;.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a ContextBuilder from an existing Context.","Creates a new Waker from RawWaker.","Creates a new LocalWaker from RawWaker.","Create a new Context from a &amp;Waker.","Create a ContextBuilder from a Waker.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns true if the poll is a Pending value.","Returns true if the poll is a Poll::Ready value.","Returns a reference to the LocalWaker for the current task.","This method is used to set the value for the local waker …","Maps a Poll&lt;T&gt; to Poll&lt;U&gt; by applying a function to a …","Maps a Poll::Ready&lt;Result&lt;T E&gt;&gt; to …","Maps a Poll::Ready&lt;Option&lt;Result&lt;T E&gt;&gt;&gt; to …","Maps a Poll&lt;Option&lt;Result&lt;T E&gt;&gt;&gt; to …","Maps a Poll&lt;Result&lt;T E&gt;&gt; to Poll&lt;Result&lt;U E&gt;&gt; by …","Creates a new RawWaker from the provided data pointer and …","Creates a new RawWakerVTable from the provided clone wake","Returns a reference to a Waker that does nothing when used.","Creates a new LocalWaker that does nothing when wake is …","Extracts the successful type of a Poll&lt;T&gt;.","Get the vtable pointer used to create this RawWaker.","Wake up the task associated with this Waker.","Wake up the task associated with this LocalWaker.","Wake up the task associated with this Waker without …","Wake up the task associated with this LocalWaker without …","Returns a reference to the Waker for the current task.","This method is used to set the value for the waker on …","Returns true if this Waker and another Waker would awake …","Returns true if this LocalWaker and another LocalWaker …","A Duration type to represent a span of time typically …","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","An error which can be returned when converting a …","A duration of zero time.","Computes the absolute difference between self and other.","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the number of milliseconds contained by this …","Returns the number of milliseconds contained by this …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this Duration …","Returns the number of seconds contained by this Duration …","Checked Duration addition. Computes self + other …","Checked Duration division. Computes self / other …","Checked Duration multiplication. Computes self * other …","Checked Duration subtraction. Computes self - other …","Divide Duration by Duration and return f32.","Divide Duration by Duration and return f64.","Divide Duration by f32.","Divide Duration by f64.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new Duration from the specified number of days.","Creates a new Duration from the specified number of hours.","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of whole …","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of weeks.","Calls U::from(self).","Calls U::from(self).","Returns true if this Duration spans no time.","Multiplies Duration by f32.","Multiplies Duration by f64.","Creates a new Duration from the specified number of whole …","Saturating Duration addition. Computes self + other …","Saturating Duration multiplication. Computes self * other …","Saturating Duration subtraction. Computes self - other …","Returns the fractional part of this Duration in whole …","Returns the fractional part of this Duration in whole …","Returns the fractional part of this Duration in …","The checked version of from_secs_f32.","The checked version of from_secs_f64.","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","Check that the preconditions of an unsafe function are …","Checking library UB is always enabled when UB-checking is …","The version of Unicode that the Unicode parts of char and …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …"]}],["proc_macro",{"0":["A support library for macro authors when defining new …","A Punct token cannot join with the following token to form …","{ ... }","[ ... ]","Describes how a sequence of token trees is delimited.","A structure representing a diagnostic message and …","An error.","Error returned from TokenStream::expand_expr.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A help message.","An identifier (ident).","An identifier.","A Punct token can join with the following token to form a …","An enum representing a diagnostic level.","Error returned from TokenStream::from_str.","A literal string (&quot;hello&quot;) byte string (b&quot;hello&quot;) …","A literal character (&#39;a&#39;) string (&quot;hello&quot;) number (2.3) …","Trait implemented by types that can be converted into a …","∅ ... ∅ An invisible delimiter that may for example …","A note.","( ... )","A Punct is a single punctuation character such as + - or #…","A single punctuation character (+  $ etc.).","The source file of a given Span.","Indicates whether a Punct token can join with the …","A region of source code along with macro expansion …","The main type provided by this crate representing an …","A single token or a delimited sequence of token trees …","A warning.","Returns the value of this punctuation character as char.","Byte character literal.","Returns the span’s byte position range in the source …","Byte string literal.","C string literal.","The span of the invocation of the current procedural macro.","Character literal.","Returns an iterator over the children diagnostics of self.","The one-indexed column of the source file where the span …","A span that resolves at the macro definition site.","Returns the delimiter of this Group","Emit the diagnostic.","Creates an empty span pointing to directly after this span.","Compares two spans to see if they’re equal.","Adds a new child diagnostic message to self with the …","Creates a new Diagnostic with the given message at the span","Parses this TokenStream as an expression and attempts to …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Adds a new child diagnostic message to self with the …","Creates a new Diagnostic with the given message at the span","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Converts self into a Vec&lt;Span&gt;.","Determines whether proc_macro has been made accessible to …","Checks if this TokenStream is empty.","Returns true if this source file is a real source file …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new span encompassing self and other.","Returns the diagnostic level for self.","The one-indexed line of the source file where the span …","Creates a new span with the same name resolution behavior …","Returns the message in self.","A span that represents macro_rules hygiene and sometimes …","Creates a new diagnostic with the given level and message.","Returns an empty TokenStream containing no token trees.","Creates a new Group with the given delimiter and token …","Creates a new Punct from the given character and spacing. …","Creates a new Ident with the given string as well as the …","Same as Ident::new but creates a raw identifier (r#ident).","Adds a new child diagnostic message to self with the …","Creates a new Diagnostic with the given message at the span","The Span for the tokens in the previous macro expansion …","Gets the path to this source file.","Quote a TokenStream into a TokenStream. This is the actual …","quote!(..) accepts arbitrary tokens and expands into a …","Quote a Span into a TokenStream. This is needed to …","Creates a new span with the same line/column information …","Sets the level in self to level.","Sets the message in self to message.","Configures the span for <em>only this token</em>.","Configures the span for this Group’s delimiters but not …","Configure the span for this punctuation character.","Configures the span of this Ident possibly changing its …","Configures the span associated for this literal.","Sets the Spans in self to spans.","The span for the origin source code that self was …","The original source file into which this span points.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character …","Returns the span of this tree delegating to the span …","Returns the span for the delimiters of this token stream …","Returns the span for this punctuation character.","Returns the span of this Ident encompassing the entire …","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Adds a new child diagnostics message to self with the …","Adds a new child diagnostics message to self with the …","Adds a new child diagnostics message to self with the …","Returns the span pointing to the opening delimiter of this …","Adds a new child diagnostics message to self with the …","Creates a new diagnostic with the given level and message …","Returns the Spans in self.","Creates an empty span pointing to directly before this …","Returns the TokenStream of tokens that are delimited in …","String literal.","Returns a Span that is a subset of self.span() containing …","Public implementation details for the TokenStream type …","Tracked access to environment variables.","Tracked access to additional files.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Adds a new child diagnostic message to self with the …","Creates a new Diagnostic with the given message at the span","An iterator over TokenStream’s TokenTrees. The iteration …","Returns the argument unchanged.","Calls U::from(self).","Retrieve an environment variable and add it to build …","Track a file explicitly."]}],["std",{"0":["The Rust Standard Library","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","The size of this integer type in bits.","Approximate number of significant digits in base 10.","Approximate number of significant digits in base 10.","Approximate number of significant digits in base 10.","Approximate number of significant digits in base 10.","Machine epsilon value for f16.","Machine epsilon value for f32.","Machine epsilon value for f64.","Machine epsilon value for f128.","Infinity (∞).","Infinity (∞).","Infinity (∞).","Infinity (∞).","Number of significant digits in base 2.","Number of significant digits in base 2.","Number of significant digits in base 2.","Number of significant digits in base 2.","The highest valid code point a char can have &#39;\\\\u{10FFFF}&#39;.","Largest finite f16 value.","Largest finite f32 value.","Largest finite f64 value.","Largest finite f128 value.","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","The largest value that can be represented by this integer …","Maximum x for which 10x is normal.","Maximum x for which 10x is normal.","Maximum x for which 10x is normal.","Maximum x for which 10x is normal.","Maximum possible power of 2 exponent.","Maximum possible power of 2 exponent.","Maximum possible power of 2 exponent.","Maximum possible power of 2 exponent.","The lowest valid code point a char can have &#39;\\\\0&#39;.","Smallest finite f16 value.","Smallest finite f32 value.","Smallest finite f64 value.","Smallest finite f128 value.","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The smallest value that can be represented by this integer …","Minimum x for which 10x is normal.","Minimum x for which 10x is normal.","Minimum x for which 10x is normal.","Minimum x for which 10x is normal.","One greater than the minimum possible normal power of 2 …","One greater than the minimum possible normal power of 2 …","One greater than the minimum possible normal power of 2 …","One greater than the minimum possible normal power of 2 …","Smallest positive normal f16 value.","Smallest positive normal f32 value.","Smallest positive normal f64 value.","Smallest positive normal f128 value.","Not a Number (NaN).","Not a Number (NaN).","Not a Number (NaN).","Not a Number (NaN).","Negative infinity (−∞).","Negative infinity (−∞).","Negative infinity (−∞).","Negative infinity (−∞).","The radix or base of the internal representation of f16.","The radix or base of the internal representation of f32.","The radix or base of the internal representation of f64.","The radix or base of the internal representation of f128.","U+FFFD REPLACEMENT CHARACTER (�) is used in Unicode to …","The implementing type within a trait or impl block or the …","The version of Unicode that the Unicode parts of char and …","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","The positive difference of two numbers.","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Inverse hyperbolic cosine function.","Adds an offset to a pointer (convenience for …","Adds an offset to a pointer (convenience for …","Gets the “address” portion of the pointer.","Gets the “address” portion of the pointer.","Computes the offset that needs to be applied to the …","Computes the offset that needs to be applied to the …","Transmute the slice to a slice of another type ensuring …","Transmute the mutable slice to a mutable slice of another …","Memory allocation APIs.","Utilities for dynamic typing or type reflection.","SIMD and vendor intrinsics module.","A fixed-size array denoted [T; N] for the element type T…","Utilities for the array primitive type.","Returns an iterator over N elements of the slice at a …","Returns an iterator over N elements of the slice at a …","Returns an iterator over overlapping windows of N elements …","Cast between types or rename an import.","Returns Some if the value is within the ASCII range or …","Converts this array of bytes into a array of ASCII …","If this slice is_ascii returns it as a slice of ASCII …","If this string slice is_ascii returns it as a slice of …","If the value of this byte is within the ASCII range …","Converts this array of bytes into a array of ASCII …","Converts this slice of bytes into a slice of ASCII …","Views this slice of ASCII characters as a slice of u8 …","Converts a string slice to a byte slice. To convert the …","Converts a mutable string slice to a mutable byte slice.","Splits the slice into a slice of N-element arrays …","Splits the slice into a slice of N-element arrays …","Splits the slice into a slice of N-element arrays …","Splits the slice into a slice of N-element arrays …","Takes a &amp;[[T; N]] and flattens it to a &amp;[T].","Takes a &amp;mut [[T; N]] and flattens it to a &amp;mut [T].","Returns None if the pointer is null or else returns a …","Returns a raw pointer to the array’s buffer.","Returns a raw pointer to the slice’s buffer.","Returns an unsafe mutable pointer to the slice’s buffer.","Converts a mutable string slice to a raw pointer.","Returns the two unsafe mutable pointers spanning the slice.","Returns a raw pointer to a mutable slice containing the …","Returns a mutable slice containing the entire array. …","Returns a unique reference to the value behind the pointer.","Returns a raw pointer to the array’s buffer.","Returns a raw pointer to the slice’s buffer.","Returns a raw pointer to the slice’s buffer.","Converts a string slice to a raw pointer.","Returns the two raw pointers spanning the slice.","Splits the slice into a slice of N-element arrays …","Splits the slice into a slice of N-element arrays …","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Returns a shared reference to the value behind the pointer.","Returns a shared reference to the value behind the pointer.","Split a slice into a prefix a middle of aligned SIMD …","Split a mutable slice into a mutable prefix a middle of …","Returns a raw pointer to a slice containing the entire …","Returns a slice containing the entire array. Equivalent to …","Views this slice of ASCII characters as a UTF-8 str.","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Returns None if the pointer is null or else returns a …","Operations on ASCII strings and characters.","Computes the arcsine of a number. Return value is in …","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Inverse hyperbolic sine function.","Asserts that a boolean expression is true at runtime.","Asserts that two expressions are equal to each other …","Unstable module containing the unstable assert_matches …","Asserts that two expressions are not equal to each other …","Return a Future instead of blocking the current thread.","Composable asynchronous iteration.","Computes the arctangent of a number. Return value is in …","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of self (y) and other…","Computes the four quadrant arctangent of self (y) and other…","Inverse hyperbolic tangent function.","Inverse hyperbolic tangent function.","Suspend execution until the result of a Future is ready.","Support for capturing a stack backtrace of an OS thread","Binary searches this slice for a given element. If the …","Binary searches this slice with a comparator function.","Binary searches this slice with a key extraction function.","The boolean type.","A module for working with borrowed data.","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and returns a tuple …","Calculates self − rhs − borrow and returns a tuple …","Calculates self − rhs − borrow and returns a tuple …","Calculates self − rhs − borrow and returns a tuple …","Calculates self − rhs − borrow and returns a tuple …","Calculates self − rhs − borrow and checks for overflow.","Calculates self − rhs − borrow and returns a tuple …","The Box&lt;T&gt; type for heap allocation.","Exit early from a loop or labelled block.","Calculates the offset from a pointer in bytes (convenience …","Calculates the offset from a pointer in bytes (convenience …","Calculates the offset from a pointer in bytes.","Calculates the offset from a pointer in bytes.","Calculates the distance between two pointers. The returned …","Calculates the distance between two pointers. The returned …","Calculates the offset from a pointer in bytes (convenience …","Calculates the offset from a pointer in bytes (convenience …","An iterator over the bytes of a string slice.","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and returns a tuple …","Calculates self + rhs + carry and returns a tuple …","Calculates self + rhs + carry and returns a tuple …","Calculates self + rhs + carry and returns a tuple …","Calculates self + rhs + carry and returns a tuple …","Calculates self + rhs + carry and checks for overflow.","Calculates self + rhs + carry and returns a tuple …","Calculates the “full multiplication” self * rhs + carry","Calculates the “full multiplication” self * rhs + carry","Calculates the “full multiplication” self * rhs + carry","Calculates the “full multiplication” self * rhs + carry","Calculates the “full multiplication” self * rhs + carry","Casts to a pointer of another type.","Casts to a pointer of another type.","Changes constness without changing the type.","Changes constness without changing the type.","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as a signed …","Returns the bit pattern of self reinterpreted as an …","Returns the bit pattern of self reinterpreted as an …","Returns the bit pattern of self reinterpreted as an …","Returns the bit pattern of self reinterpreted as an …","Returns the bit pattern of self reinterpreted as an …","Returns the bit pattern of self reinterpreted as an …","Returns the cube root of a number.","Returns the cube root of a number.","Returns the smallest integer greater than or equal to self.","Returns the smallest integer greater than or equal to self.","Finds the closest x not below index where …","Shareable mutable containers.","Evaluates boolean combinations of configuration flags at …","A macro for defining #[cfg] match-like statements.","A character type.","Utilities for the char primitive type.","Returns an iterator over the chars of a string slice and …","Returns an iterator over the chars of a string slice.","Checked absolute value. Computes self.abs() returning None…","Checked absolute value. Computes self.abs() returning None…","Checked absolute value. Computes self.abs() returning None…","Checked absolute value. Computes self.abs() returning None…","Checked absolute value. Computes self.abs() returning None…","Checked absolute value. Computes self.abs() returning None…","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked integer addition. Computes self + rhs returning …","Checked addition with a signed integer. Computes self + rhs…","Checked addition with a signed integer. Computes self + rhs…","Checked addition with a signed integer. Computes self + rhs…","Checked addition with a signed integer. Computes self + rhs…","Checked addition with a signed integer. Computes self + rhs…","Checked addition with a signed integer. Computes self + rhs…","Checked addition with an unsigned integer. Computes …","Checked addition with an unsigned integer. Computes …","Checked addition with an unsigned integer. Computes …","Checked addition with an unsigned integer. Computes …","Checked addition with an unsigned integer. Computes …","Checked addition with an unsigned integer. Computes …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked integer division. Computes self / rhs returning …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Checked Euclidean division. Computes self.div_euclid(rhs) …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked integer multiplication. Computes self * rhs …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None unless …","Checked negation. Computes -self returning None unless …","Checked negation. Computes -self returning None unless …","Checked negation. Computes -self returning None unless …","Checked negation. Computes -self returning None unless …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None unless …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","If rhs is positive calculates the smallest value greater …","Calculates the smallest value greater than or equal to self…","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked exponentiation. Computes self.pow(exp) returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked integer remainder. Computes self % rhs returning …","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked Euclidean remainder. Computes self.rem_euclid(rhs)…","Checked Euclidean modulo. Computes self.rem_euclid(rhs) …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift left. Computes self &lt;&lt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked shift right. Computes self &gt;&gt; rhs returning None …","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs returning","Checked integer subtraction. Computes self - rhs returning","Checked integer subtraction. Computes self - rhs returning","Checked integer subtraction. Computes self - rhs returning","Checked integer subtraction. Computes self - rhs returning","Checked integer subtraction. Computes self - rhs …","Checked integer subtraction. Computes self - rhs returning","Checked subtraction with an unsigned integer. Computes …","Checked subtraction with an unsigned integer. Computes …","Checked subtraction with an unsigned integer. Computes …","Checked subtraction with an unsigned integer. Computes …","Checked subtraction with an unsigned integer. Computes …","Checked subtraction with an unsigned integer. Computes …","Returns an iterator over the slice producing …","Returns an iterator over the slice producing …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Restrict a value to a certain interval unless it is NaN.","Restrict a value to a certain interval unless it is NaN.","Restrict a value to a certain interval unless it is NaN.","Restrict a value to a certain interval unless it is NaN.","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","The Clone trait for types that cannot be ‘implicitly …","Copies the elements from src into self.","Utilities for comparing and ordering values.","Collection types.","Expands to the column number at which it was invoked.","Causes compilation to fail with the given error message …","Flattens a slice of T into a single value Self::Output.","Concatenates literals into a static string slice.","Concatenates literals into a byte slice.","Concatenates identifiers into one identifier.","Flattens a slice of T into a single value Self::Output …","Compile-time constants compile-time evaluable functions …","Same as format_args but can be used in some const …","Returns true if the slice contains an element with the …","Returns true if the given pattern matches a sub-slice of …","Skip to the next iteration of a loop.","Traits for conversions between types.","Copies count * size_of&lt;T&gt; bytes from src to self. The …","Copies count * size_of&lt;T&gt; bytes from src to self. The …","Copies all elements from src into self using a memcpy.","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Copies elements from one part of the slice to another part …","Returns a number composed of the magnitude of self and the …","Returns a number composed of the magnitude of self and the …","Computes the cosine of a number (in radians).","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Hyperbolic cosine function.","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","A Rust binary or library.","Prints and returns the value of a given expression for …","Asserts that a boolean expression is true at runtime.","Asserts that two expressions are equal to each other.","Asserts that two expressions are not equal to each other.","Creates an iterator over the UTF-16 encoded code points in …","The Default trait for types with a default value.","Returns the default value of false","Returns the default value of \\\\x00","Returns the default value of ()","Creates a mutable empty slice.","Creates an empty slice.","Creates an empty mutable str","Creates an empty str","Returns the default value of 0.0","Returns the default value of 0.0","Returns the default value of 0.0","Returns the default value of 0.0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","Returns the default value of 0","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","This operation rounds towards zero truncating any …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates Euclidean division the matching method for …","Calculates Euclidean division the matching method for …","Calculates the quotient of Euclidean division of self by …","Calculates the quotient of Euclidean division of self by …","Calculates the quotient of Euclidean division of self by …","Calculates the quotient of Euclidean division of self by …","Calculates the quotient of Euclidean division of self by …","Performs Euclidean division.","Performs Euclidean division.","Performs Euclidean division.","Performs Euclidean division.","Performs Euclidean division.","Calculates the quotient of Euclidean division of self by …","Performs Euclidean division.","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Calculates the quotient of self and rhs rounding the …","Executes the destructor (if any) of the pointed-to value.","dyn is a prefix of a trait object’s type.","Borrows each element mutably and returns an array of …","Borrows each element and returns an array of references …","What expression to evaluate when an if condition evaluates …","Encodes this character as UTF-16 into the provided u16 …","Returns an iterator of u16 over the string encoded as …","Encodes this character as UTF-8 into the provided byte …","Returns true if needle is a suffix of the slice or equal …","Returns true if the given pattern matches a suffix of this …","A type that can be any one of several variants.","Inspection and manipulation of the process’s environment.","Inspects an environment variable at compile time.","Prints to the standard error.","Prints to the standard error with a newline.","Checks that two values are an ASCII case-insensitive match.","Checks that two slices are an ASCII case-insensitive match.","Checks that two strings are an ASCII case-insensitive …","Checks that two values are an ASCII case-insensitive match.","Interfaces for working with Errors.","Returns an iterator that produces an escaped version of …","Returns an iterator that produces an escaped version of a …","Returns an iterator that yields the literal escape code of …","Return an iterator that escapes each char in self with …","Returns an iterator that yields the literal escape code of …","Return an iterator that escapes each char in self with …","Returns an iterator that yields the hexadecimal Unicode …","Return an iterator that escapes each char in self with …","Returns e^(self) (the exponential function).","Returns e^(self) (the exponential function).","Returns 2^(self).","Returns 2^(self).","Returns e^(self) - 1 in a way that is accurate even if the …","Returns e^(self) - 1 in a way that is accurate even if the …","Exposes the “provenance” part of the pointer for …","Exposes the “provenance” part of the pointer for …","Allows to extend a tuple of collections that also …","Link to or import external code.","A 128-bit floating point type (specifically the “…","Constants for the f128 double-precision floating point …","A 16-bit floating point type (specifically the “binary16…","Constants for the f16 double-precision floating point type.","A 32-bit floating point type (specifically the “binary32…","Constants for the f32 single-precision floating point type.","A 64-bit floating point type (specifically the “binary64…","Constants for the f64 double-precision floating point type.","A value of type bool representing logical <strong>false</strong>.","Utilities related to FFI bindings.","Expands to the file name in which it was invoked.","Fills self with elements by cloning value.","Fills self with elements returned by calling a closure …","Returns the byte index of the first character of this …","Returns the first element of the slice or None if it is …","Return an array reference to the first N items in the …","Return a mutable array reference to the first N items in …","Returns a mutable pointer to the first element of the …","Returns the largest integer less than or equal to self.","Returns the largest integer less than or equal to self.","Finds the closest x not exceeding index where …","Utilities for formatting and printing Strings.","A function or function pointer.","Function pointers like fn(usize) -&gt; bool.","Iteration with in trait implementation with impl or …","Creates a String using interpolation of runtime …","Constructs parameters for the other string-formatting …","Same as format_args but adds a newline in the end.","Returns the fractional part of self.","Returns the fractional part of self.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a u8 into a char.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts i16 to f32 losslessly.","Converts i8 to f32 losslessly.","Returns the argument unchanged.","Converts a bool to f32 losslessly. The resulting value is …","Converts u16 to f32 losslessly.","Converts u8 to f32 losslessly.","Converts f16 to f64 losslessly.","Converts f32 to f64 losslessly.","Returns the argument unchanged.","Converts u32 to f64 losslessly.","Converts a bool to f64 losslessly. The resulting value is …","Converts i16 to f64 losslessly.","Converts i32 to f64 losslessly.","Converts i8 to f64 losslessly.","Converts u8 to f64 losslessly.","Converts u16 to f64 losslessly.","Converts f16 to f128 losslessly.","Converts f32 to f128 losslessly.","Returns the argument unchanged.","Converts f64 to f128 losslessly.","Returns the argument unchanged.","Converts a bool to i8 losslessly. The resulting value is 0 …","Returns the argument unchanged.","Converts a bool to i16 losslessly. The resulting value is 0…","Converts u8 to i16 losslessly.","Converts i8 to i16 losslessly.","Converts u16 to i32 losslessly.","Converts i16 to i32 losslessly.","Converts i8 to i32 losslessly.","Converts a bool to i32 losslessly. The resulting value is 0…","Converts u8 to i32 losslessly.","Returns the argument unchanged.","Returns the argument unchanged.","Converts u16 to i64 losslessly.","Converts u8 to i64 losslessly.","Converts u32 to i64 losslessly.","Converts i16 to i64 losslessly.","Converts i8 to i64 losslessly.","Converts i32 to i64 losslessly.","Converts a bool to i64 losslessly. The resulting value is 0…","Converts i8 to i128 losslessly.","Converts u8 to i128 losslessly.","Converts i32 to i128 losslessly.","Returns the argument unchanged.","Converts i64 to i128 losslessly.","Converts u16 to i128 losslessly.","Converts u32 to i128 losslessly.","Converts i16 to i128 losslessly.","Converts a bool to i128 losslessly. The resulting value is …","Converts u64 to i128 losslessly.","Converts a bool to u8 losslessly. The resulting value is 0 …","Returns the argument unchanged.","Converts a bool to u16 losslessly. The resulting value is 0…","Returns the argument unchanged.","Converts u8 to u16 losslessly.","Returns the argument unchanged.","Converts a bool to u32 losslessly. The resulting value is 0…","Converts a char into a u32.","Converts u8 to u32 losslessly.","Uses Ipv4Addr::to_bits to convert an IPv4 address to a …","Converts u16 to u32 losslessly.","Converts u16 to u64 losslessly.","Returns the argument unchanged.","Converts a bool to u64 losslessly. The resulting value is 0…","Converts u8 to u64 losslessly.","Converts u32 to u64 losslessly.","Converts a char into a u64.","Converts u32 to u128 losslessly.","Converts a char into a u128.","Converts a bool to u128 losslessly. The resulting value is …","Uses Ipv6Addr::to_bits to convert an IPv6 address to a …","Returns the argument unchanged.","Converts u16 to u128 losslessly.","Converts u8 to u128 losslessly.","Converts u64 to u128 losslessly.","Converts a bool to isize losslessly. The resulting value …","Returns the argument unchanged.","Converts u8 to isize losslessly.","Converts i16 to isize losslessly.","Converts i8 to isize losslessly.","Returns the argument unchanged.","Converts u8 to usize losslessly.","Converts u16 to usize losslessly.","Converts a bool to usize losslessly. The resulting value …","Returns the argument unchanged.","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create an integer value from its representation as a byte …","Create a native endian integer value from its …","Raw transmutation from u16.","Raw transmutation from u32.","Raw transmutation from u64.","Raw transmutation from u128.","Converts a digit in the given radix to a char.","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create a native endian integer value from its …","Create an integer value from its representation as a byte …","Create a native endian integer value from its …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create a floating point value from its representation as a …","Create an integer value from its memory representation as …","Create an integer value from its memory representation as …","Create an integer value from its memory representation as …","Create an integer value from its memory representation as …","Create an integer value from its memory representation as …","Create a native endian integer value from its memory …","Create a native endian integer value from its memory …","Create a native endian integer value from its memory …","Create a native endian integer value from its memory …","Create a native endian integer value from its memory …","Create an integer value from its memory representation as …","Create a native endian integer value from its memory …","Parse a bool from a string.","Converts a string in base 10 to a float. Accepts an …","Converts a string in base 10 to a float. Accepts an …","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a u32 to a char.","Converts a u32 to a char ignoring validity.","Filesystem manipulation operations.","Asynchronous basic functionality.","Gamma function.","Gamma function.","Returns a reference to an element or subslice depending on …","Returns a subslice of str.","Returns mutable references to many indices at once.","Returns mutable references to many indices at once …","Returns a mutable reference to an element or subslice …","Returns a mutable subslice of str.","Returns a raw pointer to an element or subslice without …","Returns a reference to an element or subslice without …","Returns an unchecked subslice of str.","Returns a raw pointer to an element or subslice without …","Returns a mutable reference to an element or subslice …","Returns a mutable unchecked subslice of str.","Returns whether two pointers are guaranteed to be equal.","Returns whether two pointers are guaranteed to be equal.","Returns whether two pointers are guaranteed to be inequal.","Returns whether two pointers are guaranteed to be inequal.","Generic hashing support.","Hints to compiler that affects how code should be emitted …","Compute the distance between the origin and a point (x y) …","Compute the distance between the origin and a point (x y) …","The 128-bit signed integer type.","Redundant constants module for the i128 primitive type.","The 16-bit signed integer type.","Redundant constants module for the i16 primitive type.","The 32-bit signed integer type.","Redundant constants module for the i32 primitive type.","The 64-bit signed integer type.","Redundant constants module for the i64 primitive type.","The 8-bit signed integer type.","Redundant constants module for the i8 primitive type.","Evaluate a block if a condition holds.","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Implement some functionality for a type.","Iterate over a series of values with for.","Parses a file as an expression or an item according to the …","Includes a file as a reference to a byte array.","Includes a UTF-8 encoded file as a string.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Converts a Box&lt;str&gt; into a Box&lt;[u8]&gt; without copying or …","Creates a consuming iterator that is one that moves each …","Converts a Box&lt;str&gt; into a String without copying or …","Converts self into a vector without clones or allocation.","Compiler intrinsics.","Traits helpers and type definitions for core I/O …","Returns whether the pointer is properly aligned for T.","Returns whether the pointer is properly aligned for T.","Returns whether the pointer is aligned to align.","Returns whether the pointer is aligned to align.","Returns true if this char has the Alphabetic property.","Returns true if this char satisfies either is_alphabetic() …","Checks if the value is within the ASCII range.","Checks if all bytes in this slice are within the ASCII …","Checks if all characters in this string are within the …","Checks if the value is within the ASCII range.","Checks if the value is an ASCII alphabetic character:","Checks if the value is an ASCII alphabetic character:","Checks if the value is an ASCII alphanumeric character:","Checks if the value is an ASCII alphanumeric character:","Checks if the value is an ASCII control character: U+0000 …","Checks if the value is an ASCII control character: U+0000 …","Checks if the value is an ASCII decimal digit: U+0030 ‘0…","Checks if the value is an ASCII decimal digit: U+0030 ‘0…","Checks if the value is an ASCII graphic character: U+0021 …","Checks if the value is an ASCII graphic character: U+0021 …","Checks if the value is an ASCII hexadecimal digit:","Checks if the value is an ASCII hexadecimal digit:","Checks if the value is an ASCII lowercase character: …","Checks if the value is an ASCII lowercase character: …","Checks if the value is an ASCII octal digit: U+0030 ‘0’…","Checks if the value is an ASCII octal digit: U+0030 ‘0’…","Checks if the value is an ASCII punctuation character:","Checks if the value is an ASCII punctuation character:","Checks if the value is an ASCII uppercase character: …","Checks if the value is an ASCII uppercase character: …","Checks if the value is an ASCII whitespace character: …","Checks if the value is an ASCII whitespace character: …","Checks that index-th byte is the first byte in a UTF-8 …","Checks whether the pattern matches anywhere in the haystack","Returns true if this char has the general category for …","Checks if a char is a digit in the given radix.","Returns true if the raw slice has a length of 0.","Returns true if the raw slice has a length of 0.","Returns true if the slice has a length of 0.","Returns true if self has a length of zero bytes.","Returns true if this number is neither infinite nor NaN.","Returns true if this number is neither infinite nor NaN.","Returns true if this number is neither infinite nor NaN.","Returns true if this number is neither infinite nor NaN.","Returns true if this value is positive infinity or …","Returns true if this value is positive infinity or …","Returns true if this value is positive infinity or …","Returns true if this value is positive infinity or …","Returns true if this char has the Lowercase property.","Returns true if this value is NaN.","Returns true if this value is NaN.","Returns true if this value is NaN.","Returns true if this value is NaN.","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if the number is neither zero infinite …","Returns true if the number is neither zero infinite …","Returns true if the number is neither zero infinite …","Returns true if the number is neither zero infinite …","Returns true if the pointer is null.","Returns true if the pointer is null.","Returns true if this char has one of the general …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Checks whether the pattern matches at the front of the …","Returns true if self has a negative sign including -0.0 …","Returns true if self has a negative sign including -0.0 …","Returns true if self has a negative sign including -0.0 …","Returns true if self has a negative sign including -0.0 …","Returns true if self has a positive sign including +0.0 …","Returns true if self has a positive sign including +0.0 …","Returns true if self has a positive sign including +0.0 …","Returns true if self has a positive sign including +0.0 …","Checks if the elements of this slice are sorted.","Checks if the elements of this slice are sorted using the …","Checks if the elements of this slice are sorted using the …","Returns true if the number is subnormal.","Returns true if the number is subnormal.","Returns true if the number is subnormal.","Returns true if the number is subnormal.","Checks whether the pattern matches at the back of the …","Returns true if this char has the Uppercase property.","Checks if the value is a Unicode surrogate code point …","Returns true if this char has the White_Space property.","A macro to test at <em>runtime</em> whether a CPU feature is …","The pointer-sized signed integer type.","Redundant constants module for the isize primitive type.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Composable external iteration.","Returns an iterator over the slice.","Returns an iterator that allows modifying each value.","Flattens a slice of T into a single value Self::Output …","Returns the last element of the slice or None if it is …","Return an array reference to the last N items in the slice.","Return a mutable array reference to the last N items in …","Returns a mutable reference to the last item in the slice …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the length of a raw slice.","Returns the length of a raw slice.","Returns the number of elements in the slice.","Returns the length of self.","Returns the number of 16-bit code units this char would …","Returns the number of bytes this char would need if …","Bind a value to a variable.","Expands to the line number on which it was invoked.","An iterator over the lines of a string as string slices.","An iterator over the lines of a string.","Returns the natural logarithm of the number.","Returns the natural logarithm of the number.","Returns ln(1+n) (natural logarithm) more accurately than if","Returns ln(1+n) (natural logarithm) more accurately than if","Natural logarithm of the absolute value of the gamma …","Natural logarithm of the absolute value of the gamma …","Returns the logarithm of the number with respect to an …","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the base 2 logarithm of the number.","Prints passed tokens into the standard output.","Loop indefinitely.","Converts this type to its ASCII lower case equivalent …","Converts this slice to its ASCII lower case equivalent …","Converts this string to its ASCII lower case equivalent …","Converts this value to its ASCII lower case equivalent …","Converts this type to its ASCII upper case equivalent …","Converts this slice to its ASCII upper case equivalent …","Converts this string to its ASCII upper case equivalent …","Converts this value to its ASCII upper case equivalent …","Returns an array of the same size as self with function f …","Creates a new pointer by mapping self’s address to a new …","Creates a new pointer by mapping self’s address to a new …","Primitive traits and types representing basic properties …","Masks out bits of the pointer according to a mask.","Masks out bits of the pointer according to a mask.","Control flow based on pattern matching.","An iterator over the disjoint matches of a pattern within …","An iterator over the disjoint matches of a pattern within …","Returns whether the given expression matches the provided …","Returns the maximum of the two numbers ignoring NaN.","Returns the maximum of the two numbers ignoring NaN.","New code should prefer to use i8::MAX instead.","New code should prefer to use i16::MAX instead.","New code should prefer to use i32::MAX instead.","New code should prefer to use i64::MAX instead.","New code should prefer to use i128::MAX instead.","New code should prefer to use u8::MAX instead.","New code should prefer to use u16::MAX instead.","New code should prefer to use u32::MAX instead.","New code should prefer to use u64::MAX instead.","New code should prefer to use u128::MAX instead.","New code should prefer to use isize::MAX instead.","New code should prefer to use usize::MAX instead.","Returns the maximum of the two numbers propagating NaN.","Returns the maximum of the two numbers propagating NaN.","Basic functions for dealing with memory.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Returns the minimum of the two numbers ignoring NaN.","Returns the minimum of the two numbers ignoring NaN.","New code should prefer to use i8::MIN instead.","New code should prefer to use i16::MIN instead.","New code should prefer to use i32::MIN instead.","New code should prefer to use i64::MIN instead.","New code should prefer to use i128::MIN instead.","New code should prefer to use u8::MIN instead.","New code should prefer to use u16::MIN instead.","New code should prefer to use u32::MIN instead.","New code should prefer to use u64::MIN instead.","New code should prefer to use u128::MIN instead.","New code should prefer to use isize::MIN instead.","New code should prefer to use usize::MIN instead.","Returns the minimum of the two numbers propagating NaN.","Returns the minimum of the two numbers propagating NaN.","Organize code into modules.","Expands to a string that represents the current module …","Capture a closure’s environment by value.","Fused multiply-add. Computes (self * a) + b with only one …","Fused multiply-add. Computes (self * a) + b with only one …","A mutable variable reference or pointer.","Networking primitives for TCP/UDP communication.","The ! type also called “never”.","Returns the greatest number less than self.","Returns the greatest number less than self.","Returns the greatest number less than self.","Returns the greatest number less than self.","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","If rhs is positive calculates the smallest value greater …","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","Calculates the smallest value greater than or equal to self…","If rhs is positive calculates the smallest value greater …","Calculates the smallest value greater than or equal to self…","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the least number greater than self.","Returns the least number greater than self.","Returns the least number greater than self.","Returns the least number greater than self.","Additional functionality for numerics.","Adds an offset to a pointer.","Adds an offset to a pointer.","Calculates the distance between two pointers. The returned …","Calculates the distance between two pointers. The returned …","Overloadable operators.","Optional values.","Optionally inspects an environment variable at compile …","OS-specific functionality.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Computes the absolute value of self.","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with a signed rhs","Calculates self + rhs with an unsigned rhs","Calculates self + rhs with an unsigned rhs","Calculates self + rhs with an unsigned rhs","Calculates self + rhs with an unsigned rhs","Calculates self + rhs with an unsigned rhs","Calculates self + rhs with an unsigned rhs","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the divisor when self is divided by rhs.","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the quotient of Euclidean division …","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Calculates the multiplication of self and rhs.","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self in an overflowing fashion.","Negates self in an overflowing fashion.","Negates self in an overflowing fashion.","Negates self in an overflowing fashion.","Negates self in an overflowing fashion.","Negates self overflowing if this is equal to the minimum …","Negates self in an overflowing fashion.","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Calculates the remainder when self is divided by rhs.","Overflowing Euclidean remainder. Calculates …","Overflowing Euclidean remainder. Calculates …","Overflowing Euclidean remainder. Calculates …","Overflowing Euclidean remainder. Calculates …","Overflowing Euclidean remainder. Calculates …","Calculates the remainder self.rem_euclid(rhs) as if by …","Calculates the remainder self.rem_euclid(rhs) as if by …","Calculates the remainder self.rem_euclid(rhs) as if by …","Calculates the remainder self.rem_euclid(rhs) as if by …","Calculates the remainder self.rem_euclid(rhs) as if by …","Overflowing Euclidean remainder. Calculates …","Calculates the remainder self.rem_euclid(rhs) as if by …","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self left by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Shifts self right by rhs bits.","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs","Calculates self - rhs with an unsigned rhs","Calculates self - rhs with an unsigned rhs","Calculates self - rhs with an unsigned rhs","Calculates self - rhs with an unsigned rhs","Calculates self - rhs with an unsigned rhs","Calculates self - rhs with an unsigned rhs","Panic support in the standard library.","Panics the current thread.","Parses this string slice into another type.","Moves all consecutive repeated elements to the end of the …","Moves all but the first of consecutive elements to the end …","Moves all but the first of consecutive elements to the end …","Returns the index of the partition point according to the …","Helper module for exporting the pattern_type macro","Cross-platform path manipulation.","Types that pin data to a location in memory.","Raw unsafe pointers *const T and *mut T.","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises a number to a floating point power.","Raises a number to a floating point power.","Raises a number to an integer power.","Raises a number to an integer power.","Raises a number to an integer power.","Raises a number to an integer power.","The Rust Prelude","This module reexports the primitive types to allow usage …","Prints to the standard output.","Prints to the standard output with a newline.","A module for working with processes.","Manually manage memory through raw pointers.","Make an item visible to others.","Single-threaded reference-counting pointers. ‘Rc’ …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Returns an iterator over chunk_size elements of the slice …","Reads the value from self without moving it. This leaves …","Reads the value from self without moving it. This leaves …","Reads the value from self without moving it. This leaves …","Reads the value from self without moving it. This leaves …","Performs a volatile read of the value from self without …","Performs a volatile read of the value from self without …","Takes the reciprocal (inverse) of a number 1/x.","Takes the reciprocal (inverse) of a number 1/x.","Takes the reciprocal (inverse) of a number 1/x.","Takes the reciprocal (inverse) of a number 1/x.","Bind by reference during pattern matching.","References &amp;T and &amp;mut T.","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","This operation satisfies n % d == n - (n / d) * d and …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","Calculates the least nonnegative remainder of …","Calculates the least remainder of self (mod rhs).","Calculates the least remainder of self (mod rhs).","Calculates the least remainder of self (mod rhs).","Calculates the least remainder of self (mod rhs).","Calculates the least remainder of self (mod rhs).","Calculates the least nonnegative remainder of …","Calculates the least remainder of self (mod rhs).","Creates a vector by copying a slice n times.","Creates a new String by repeating a string n times.","Replaces the value at self with src returning the old …","Replaces all matches of a pattern with another string.","Replaces first N matches of a pattern with another string.","Error handling with the Result type.","Return a value from a function.","Reverses the order of elements in the slice in place.","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Reverses the order of bits in the integer. The least …","Returns the byte index for the first character of the last …","An iterator over the disjoint matches of a pattern within …","An iterator over the disjoint matches of a pattern within …","Rotates the slice in-place such that the first mid …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Rotates the slice in-place such that the first …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Returns the nearest integer to self. If a value is …","Returns the nearest integer to self. If a value is …","Returns the nearest integer to a number. Rounds half-way …","Returns the nearest integer to a number. Rounds half-way …","Returns an iterator over subslices separated by elements …","An iterator over substrings of the given string slice …","Divides one mutable array reference into two at an index …","Divides one array reference into two at an index from the …","Returns an iterator over mutable subslices separated by …","Splits the slice on the last element that matches the …","Splits the string on the last occurrence of the specified …","An iterator over substrings of self separated by …","Returns an iterator over subslices separated by elements …","An iterator over substrings of this string slice …","Returns an iterator over subslices separated by elements …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating integer addition. Computes self + rhs …","Saturating addition with a signed integer. Computes …","Saturating addition with a signed integer. Computes …","Saturating addition with a signed integer. Computes …","Saturating addition with a signed integer. Computes …","Saturating addition with a signed integer. Computes …","Saturating addition with a signed integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating addition with an unsigned integer. Computes …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer division. Computes self / rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer multiplication. Computes self * rhs …","Saturating integer negation. Computes -self returning MAX …","Saturating integer negation. Computes -self returning MAX …","Saturating integer negation. Computes -self returning MAX …","Saturating integer negation. Computes -self returning MAX …","Saturating integer negation. Computes -self returning MAX …","Saturating integer negation. Computes -self returning MAX …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer exponentiation. Computes self.pow(exp) …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating integer subtraction. Computes self - rhs …","Saturating subtraction with an unsigned integer. Computes …","Saturating subtraction with an unsigned integer. Computes …","Saturating subtraction with an unsigned integer. Computes …","Saturating subtraction with an unsigned integer. Computes …","Saturating subtraction with an unsigned integer. Computes …","Saturating subtraction with an unsigned integer. Computes …","Reorder the slice such that the element at index after the …","Reorder the slice with a comparator function such that the …","Reorder the slice with a key extraction function such that …","The receiver of a method or the current module.","Returns a number that represents the sign of self.","Returns a number that represents the sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Portable SIMD module.","Computes the sine of a number (in radians).","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number …","Simultaneously computes the sine and cosine of the number …","Hyperbolic sine function.","Hyperbolic sine function.","A dynamically-sized view into a contiguous sequence [T]. …","Utilities for the slice primitive type.","Creates a string slice from another string slice …","Creates a string slice from another string slice …","Sorts the slice preserving initial order of equal …","Sorts the slice with a comparison function preserving …","Sorts the slice with a key extraction function preserving …","Sorts the slice with a key extraction function preserving …","Sorts the slice of floats.","Sorts the slice of floats.","Sorts the slice <strong>without</strong> preserving the initial order of …","Sorts the slice with a comparison function <strong>without</strong> …","Sorts the slice with a key extraction function <strong>without</strong> …","Returns an iterator over subslices separated by elements …","An iterator over substrings of this string slice …","Divides one mutable array reference into two at an index.","Divides one array reference into two at an index.","Splits a string slice by ASCII whitespace.","Divides one slice into two at an index.","Divide one string slice into two at an index.","Divides one slice into two at an index returning None if …","Divide one string slice into two at an index.","Divides one mutable raw slice into two at an index.","Divides one mutable slice into two at an index.","Divide one mutable string slice into two at an index.","Divides one mutable slice into two at an index returning …","Divide one mutable string slice into two at an index.","Divides one mutable raw slice into two at an index …","Divides one mutable slice into two at an index without …","Divides one slice into two at an index without doing …","Returns the first and all the rest of the elements of the …","Return an array reference to the first N items in the …","Return a mutable array reference to the first N items in …","Returns the first and all the rest of the elements of the …","Returns an iterator over subslices separated by elements …","An iterator over substrings of this string slice …","Returns an iterator over mutable subslices separated by …","Returns the last and all the rest of the elements of the …","Return an array reference to the last N items in the slice …","Return a mutable array reference to the last N items in …","Returns the last and all the rest of the elements of the …","Returns an iterator over mutable subslices separated by …","Splits the slice on the first element that matches the …","Splits the string on the first occurrence of the specified …","An iterator over substrings of the given string slice …","Splits a string slice by whitespace.","Returns an iterator over subslices separated by elements …","An iterator over substrings of the given string slice …","Returns an iterator over mutable subslices separated by …","Returns the square root of a number.","Returns the square root of a number.","Returns true if needle is a prefix of the slice or equal …","Returns true if the given pattern matches a prefix of this …","A static item is a value which is valid for the entire …","String slices.","Utilities for the str primitive type.","Strict absolute value. Computes self.abs() panicking if …","Strict absolute value. Computes self.abs() panicking if …","Strict absolute value. Computes self.abs() panicking if …","Strict absolute value. Computes self.abs() panicking if …","Strict absolute value. Computes self.abs() panicking if …","Strict absolute value. Computes self.abs() panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict integer addition. Computes self + rhs panicking if …","Strict addition with a signed integer. Computes self + rhs","Strict addition with a signed integer. Computes self + rhs","Strict addition with a signed integer. Computes self + rhs","Strict addition with a signed integer. Computes self + rhs","Strict addition with a signed integer. Computes self + rhs","Strict addition with a signed integer. Computes self + rhs","Strict addition with an unsigned integer. Computes …","Strict addition with an unsigned integer. Computes …","Strict addition with an unsigned integer. Computes …","Strict addition with an unsigned integer. Computes …","Strict addition with an unsigned integer. Computes …","Strict addition with an unsigned integer. Computes …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs. Strict …","Strict integer division. Computes self / rhs. Strict …","Strict integer division. Computes self / rhs. Strict …","Strict integer division. Computes self / rhs. Strict …","Strict integer division. Computes self / rhs. Strict …","Strict integer division. Computes self / rhs panicking if …","Strict integer division. Computes self / rhs. Strict …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict Euclidean division. Computes self.div_euclid(rhs) …","Strict Euclidean division. Computes self.div_euclid(rhs). …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict integer multiplication. Computes self * rhs …","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking unless self == 0…","Strict negation. Computes -self panicking unless self == 0…","Strict negation. Computes -self panicking unless self == 0…","Strict negation. Computes -self panicking unless self == 0…","Strict negation. Computes -self panicking unless self == 0…","Strict negation. Computes -self panicking if self == MIN.","Strict negation. Computes -self panicking unless self == 0…","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict exponentiation. Computes self.pow(exp) panicking if","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs. Strict …","Strict integer remainder. Computes self % rhs. Strict …","Strict integer remainder. Computes self % rhs. Strict …","Strict integer remainder. Computes self % rhs. Strict …","Strict integer remainder. Computes self % rhs. Strict …","Strict integer remainder. Computes self % rhs panicking if","Strict integer remainder. Computes self % rhs. Strict …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict Euclidean remainder. Computes self.rem_euclid(rhs) …","Strict Euclidean modulo. Computes self.rem_euclid(rhs). …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift left. Computes self &lt;&lt; rhs panicking if rhs …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict shift right. Computes self &gt;&gt; rhs panicking rhs is …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict integer subtraction. Computes self - rhs panicking …","Strict subtraction with an unsigned integer. Computes …","Strict subtraction with an unsigned integer. Computes …","Strict subtraction with an unsigned integer. Computes …","Strict subtraction with an unsigned integer. Computes …","Strict subtraction with an unsigned integer. Computes …","Strict subtraction with an unsigned integer. Computes …","A UTF-8–encoded growable string.","Stringifies its arguments.","Returns a subslice with the prefix removed.","Returns a string slice with the prefix removed.","Removes the pattern from the front of haystack if it …","Returns a subslice with the suffix removed.","Returns a string slice with the suffix removed.","Removes the pattern from the back of haystack if it …","A type that is composed of other types.","Subtracts an offset from a pointer (convenience for …","Subtracts an offset from a pointer (convenience for …","Calculates the distance between two pointers <em>where it’s </em>…","Calculates the distance between two pointers <em>where it’s </em>…","The parent of the current module.","Swaps the values at two mutable locations of the same …","Swaps two elements in the slice.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Swaps two elements in the slice without doing bounds …","Swaps all elements in self with those in other.","Useful synchronization primitives.","Removes the subslice corresponding to the given range and …","Removes the first element of the slice and returns a …","Removes the first element of the slice and returns a …","Removes the last element of the slice and returns a …","Removes the last element of the slice and returns a mutable","Removes the subslice corresponding to the given range and …","Computes the tangent of a number (in radians).","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Hyperbolic tangent function.","Types and Traits for working with asynchronous tasks.","Returns Some(f()) if the bool is true or None otherwise.","Returns Some(t) if the bool is true or None otherwise.","Native threads.","Declare a new thread local storage key of type …","Temporal quantification.","Makes a copy of the value in its ASCII lower case …","Returns a vector containing a copy of this slice where …","Returns a copy of this string where each character is …","Makes a copy of the value in its ASCII lower case …","Makes a copy of the value in its ASCII upper case …","Returns a vector containing a copy of this slice where …","Returns a copy of this string where each character is …","Makes a copy of the value in its ASCII upper case …","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Raw transmutation to u16.","Raw transmutation to u32.","Raw transmutation to u64.","Raw transmutation to u128.","Converts radians to degrees.","Converts radians to degrees.","Converts radians to degrees.","Converts radians to degrees.","Converts a char to a digit in the given radix.","Rounds toward zero and converts to any primitive integer …","Rounds toward zero and converts to any primitive integer …","Rounds toward zero and converts to any primitive integer …","Rounds toward zero and converts to any primitive integer …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Returns an iterator that yields the lowercase mapping of …","Returns the lowercase equivalent of this string slice as …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this floating point …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Converts degrees to radians.","Converts degrees to radians.","Converts degrees to radians.","Converts degrees to radians.","Decompose a (possibly wide) pointer into its data pointer …","Decompose a (possibly wide) pointer into its data pointer …","Returns an iterator that yields the uppercase mapping of …","Returns the uppercase equivalent of this string slice as …","Copies self into a new Vec.","Copies self into a new Vec with an allocator.","Indicates unfinished code.","Return the ordering between self and other.","Return the ordering between self and other.","Return the ordering between self and other.","Return the ordering between self and other.","Enables or disables tracing functionality used for …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","A common interface for a group of types.","Transposes a [MaybeUninit&lt;T&gt;; N] into a MaybeUninit&lt;[T; N]&gt;…","Returns a string slice with leading and trailing …","Returns a byte slice with leading and trailing ASCII …","Returns a string slice with leading and trailing ASCII …","Returns a byte slice with trailing ASCII whitespace bytes …","Returns a string slice with trailing ASCII whitespace …","Returns a byte slice with leading ASCII whitespace bytes …","Returns a string slice with leading ASCII whitespace …","Returns a string slice with trailing whitespace removed."],"1":["Returns a string slice with all suffixes that match a …","Returns a string slice with leading whitespace removed.","Returns a string slice with all prefixes that match a …","Returns a string slice with all prefixes and suffixes that …","Returns a string slice with trailing whitespace removed.","Returns a string slice with all suffixes that match a …","Returns a string slice with leading whitespace removed.","Returns a string slice with all prefixes that match a …","A value of type bool representing logical <strong>true</strong>.","Returns the integer part of self. This means that …","Returns the integer part of self. This means that …","Unwraps a result or propagates its error.","Gets the entire contents of the Vec&lt;T&gt; as an array if its …","Tries to convert an &amp;OsStr to a &amp;str.","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Tries to convert a char into a u8.","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Tries to convert a char into a u16.","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","Try to create the target number type from a source number …","A fallible function f applied to each element on array self…","A finite heterogeneous sequence (T U ..).","Define an alias for an existing type.","The 128-bit unsigned integer type.","Redundant constants module for the u128 primitive type.","The 16-bit unsigned integer type.","Redundant constants module for the u16 primitive type.","The 32-bit unsigned integer type.","Redundant constants module for the u32 primitive type.","The 64-bit unsigned integer type.","Redundant constants module for the u64 primitive type.","The 8-bit unsigned integer type.","Redundant constants module for the u8 primitive type.","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer addition. Computes self + rhs assuming …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked integer multiplication. Computes self * rhs …","Unchecked negation. Computes -self assuming overflow …","Unchecked negation. Computes -self assuming overflow …","Unchecked negation. Computes -self assuming overflow …","Unchecked negation. Computes -self assuming overflow …","Unchecked negation. Computes -self assuming overflow …","Unchecked negation. Computes -self assuming overflow …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift left. Computes self &lt;&lt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked shift right. Computes self &gt;&gt; rhs assuming that …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Unchecked integer subtraction. Computes self - rhs …","Indicates unimplemented code by panicking with a message …","The Rust equivalent of a C-style union.","The () type also called “unit”.","Indicates unreachable code.","Code or interfaces whose memory safety cannot be verified …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Import or rename items from other crates or modules.","The pointer-sized unsigned integer type.","Redundant constants module for the usize primitive type.","Creates an iterator over the contiguous valid UTF-8 ranges …","A contiguous growable array type with heap-allocated …","Creates a Vec containing the arguments.","Add constraints that must be upheld to use an item.","Loop while a condition is upheld.","Calculates the complete product self * rhs without the …","Calculates the complete product self * rhs without the …","Calculates the complete product self * rhs without the …","Calculates the complete product self * rhs without the …","Calculates the complete product self * rhs without the …","Returns an iterator over all contiguous windows of length …","Creates a new pointer with the given address.","Creates a new pointer with the given address.","Use the pointer value in a new pointer of another type.","Use the pointer value in a new pointer of another type.","Wrapping (modular) absolute value. Computes self.abs() …","Wrapping (modular) absolute value. Computes self.abs() …","Wrapping (modular) absolute value. Computes self.abs() …","Wrapping (modular) absolute value. Computes self.abs() …","Wrapping (modular) absolute value. Computes self.abs() …","Wrapping (modular) absolute value. Computes self.abs() …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition. Computes self + rhs wrapping …","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with a signed integer. Computes","Wrapping (modular) addition with an unsigned integer. …","Wrapping (modular) addition with an unsigned integer. …","Wrapping (modular) addition with an unsigned integer. …","Wrapping (modular) addition with an unsigned integer. …","Wrapping (modular) addition with an unsigned integer. …","Wrapping (modular) addition with an unsigned integer. …","Calculates the offset from a pointer in bytes using …","Calculates the offset from a pointer in bytes using …","Calculates the offset from a pointer in bytes using …","Calculates the offset from a pointer in bytes using …","Calculates the offset from a pointer in bytes using …","Calculates the offset from a pointer in bytes using …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping (modular) division. Computes self / rhs wrapping …","Wrapping (modular) division. Computes self / rhs. Wrapped …","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping Euclidean division. Computes self.div_euclid(rhs)","Wrapping Euclidean division. Computes self.div_euclid(rhs).","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) multiplication. Computes self * rhs …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) exponentiation. Computes self.pow(exp) …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping (modular) remainder. Computes self % rhs …","Wrapping (modular) remainder. Computes self % rhs. Wrapped …","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Wrapping Euclidean remainder. Computes self.rem_euclid(rhs)…","Wrapping Euclidean modulo. Computes self.rem_euclid(rhs). …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-left; yields self &lt;&lt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Panic-free bitwise shift-right; yields self &gt;&gt; mask(rhs) …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction. Computes self - rhs …","Wrapping (modular) subtraction with an unsigned integer. …","Wrapping (modular) subtraction with an unsigned integer. …","Wrapping (modular) subtraction with an unsigned integer. …","Wrapping (modular) subtraction with an unsigned integer. …","Wrapping (modular) subtraction with an unsigned integer. …","Wrapping (modular) subtraction with an unsigned integer. …","Overwrites a memory location with the given value without …","Writes formatted data into a buffer.","Invokes memset on the specified pointer setting …","Overwrites a memory location with the given value without …","Performs a volatile write of a memory location with the …","Write formatted data into a buffer with a newline …","The AllocError error indicates an allocation failure that …","An implementation of Allocator can allocate grow shrink …","The global memory allocator.","A memory allocator that can be registered as the standard …","Layout of a block of memory.","The parameters given to Layout::from_size_align or some …","The default memory allocator provided by the operating …","The minimum byte alignment for a memory block of this …","Creates a layout describing the record that can hold a …","Allocate memory with the global allocator.","Allocate memory as described by the given layout.","Allocate zero-initialized memory with the global allocator.","Behaves like alloc but also ensures that the contents are …","Attempts to allocate a block of memory.","Behaves like allocate but also ensures that the returned …","Creates a layout describing the record for a [T; n].","Creates a “by reference” adapter for this instance of …","Creates a NonNull that is dangling but well-aligned for …","Deallocate memory with the global allocator.","Deallocate the block of memory at the given ptr pointer …","Deallocates the memory referenced by ptr.","Creates a layout describing the record for self followed by","Creates a layout describing the record for self followed by","Produces layout describing a record that could be used to …","Produces layout describing a record that could be used to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a Layout from a given size and align or …","Creates a layout bypassing all checks.","Attempts to extend the memory block.","Behaves like grow but also ensures that the new contents …","Signal a memory allocation error.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Constructs a Layout suitable for holding a value of type T.","Creates a layout by rounding the size of this layout up to …","Returns the amount of padding we must insert after self to …","Reallocate memory with the global allocator.","Shrink or grow a block of memory to the given new_size in …","Creates a layout describing the record for n instances of …","Creates a layout describing the record for n instances of …","Registers a custom allocation error hook replacing any …","Attempts to shrink the memory block.","The minimum size in bytes for a memory block of this …","Unregisters the current allocation error hook returning …","A trait to emulate dynamic typing.","A TypeId represents a globally unique identifier for a …","Forwards to the method defined on the type Any.","Returns some mutable reference to the inner value if it is …","Forwards to the method defined on the type dyn Any.","Returns a mutable reference to the inner value as type …","Forwards to the method defined on the type Any.","Forwards to the method defined on the type dyn Any.","Returns some reference to the inner value if it is of type …","Forwards to the method defined on the type dyn Any.","Forwards to the method defined on the type Any.","Forwards to the method defined on the type dyn Any.","Returns a reference to the inner value as type dyn T.","Forwards to the method defined on the type Any.","Returns the argument unchanged.","Calls U::from(self).","Forwards to the method defined on the type dyn Any.","Forwards to the method defined on the type Any.","Returns true if the inner type is the same as T.","Returns the TypeId of the type this generic function has …","Gets the TypeId of self.","Returns the name of a type as a string slice.","Returns the type name of the pointed-to value as a string …","This macro tests at runtime whether an aarch64 feature …","Checks if arm feature is enabled.","Checks if mips64 feature is enabled.","Checks if mips feature is enabled.","Checks if powerpc feature is enabled.","Checks if powerpc feature is enabled.","A macro to test at <em>runtime</em> whether instruction sets are …","A macro to test at <em>runtime</em> whether a CPU feature is …","A by-value array iterator.","The error type returned when a conversion from a slice to …","Returns a mutable slice of all elements that have not been …","Returns an immutable slice of all elements that have not …","Creates an iterator over T which returns no elements.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an array of type [T; N] where each element T is …","Converts a mutable reference to T into a mutable reference …","Converts a reference to T into a reference to an array of …","Calls U::from(self).","Calls U::from(self).","Creates a new iterator over the given array.","Creates an iterator over the elements in a …","Creates an array of type [T; N] by repeatedly cloning a …","Creates an array [T; N] where each fallible array element T…","U+0006","U+0026","U+0027","Extension methods for ASCII-subset only operations.","U+002A","U+0008","U+0007","U+0018","U+0041","U+0042","U+0043","U+0044","U+0045","U+0046","U+0047","U+0048","U+0049","U+004A","U+004B","U+004C","U+004D","U+004E","U+004F","U+0050","U+0051","U+0052","U+0053","U+0054","U+0055","U+0056","U+0057","U+0058","U+0059","U+005A","U+000D","One of the 128 Unicode characters from U+0000 through …","U+0009","U+005E","U+003A","U+002C","U+0040","U+0010","U+007F","U+0014","U+0011","U+0013","U+0012","U+0030","U+0031","U+0032","U+0033","U+0034","U+0035","U+0036","U+0037","U+0038","U+0039","U+0024","U+0019","U+0003","U+0004","U+0017","U+0005","U+003D","U+001B","An iterator over the escaped version of a byte.","U+0021","U+000C","U+002E","U+0060","U+003E","U+002D","U+001C","U+001F","U+001D","U+001E","U+007B","U+0028","U+005B","U+003C","U+000A","U+000B","U+005F","U+0015","U+0000 (The default variant)","U+0023","Container type for copied ASCII characters.","U+0025","U+002B","U+003F","U+0022","U+005C","U+007D","U+0029","U+005D","U+003B","U+000F","U+000E","U+0061","U+0062","U+0063","U+0064","U+0065","U+0066","U+0067","U+0068","U+0069","U+006A","U+006B","U+006C","U+006D","U+006E","U+006F","U+0070","U+0071","U+0072","U+0073","U+0074","U+0075","U+0076","U+0077","U+0078","U+0079","U+007A","U+002F","U+0020","U+0001","U+0002","U+001A","U+0016","U+007E","U+007C","Views this ASCII character as a one-code-unit UTF-8 str.","Returns the default value of Null","When passed the <em>number</em> 0 1 … 9 returns the <em>character</em> …","When passed the <em>number</em> 0 1 … 9 returns the <em>character</em> …","Checks that two values are an ASCII case-insensitive match.","Returns an iterator that produces an escaped version of a …","Returns the argument unchanged.","Returns the argument unchanged.","Creates an ascii character from the byte b or returns None…","Creates an ASCII character from the byte b without …","Calls U::from(self).","Calls U::from(self).","Checks if the value is within the ASCII range.","Converts this type to its ASCII lower case equivalent …","Converts this type to its ASCII upper case equivalent …","Makes a copy of the value in its ASCII lower case …","Makes a copy of the value in its ASCII upper case …","Gets this ASCII character as a char Unicode Scalar Value.","Gets this ASCII character as a byte.","Asserts that an expression matches the provided pattern.","Asserts that an expression matches the provided pattern.","A trait for dealing with asynchronous iterators.","An async iterator that was created from iterator.","The type of the resulting iterator","Convert something into an async iterator","The type of items yielded by the async iterator.","The type of the item yielded by the iterator","Returns the argument unchanged.","Converts an iterator into an async iterator.","Calls U::from(self).","Converts self into an async iterator","Attempt to pull out the next value of this async iterator …","Returns the bounds on the remaining length of the async …","A captured OS thread stack backtrace.","A single frame of a backtrace.","The current status of a backtrace indicating whether it …","A backtrace has been captured and the Backtrace should …","Capturing a backtrace has been disabled through either the …","Capturing a backtrace is not supported likely because it…","Capture a stack backtrace of the current thread.","Forcibly captures a disabled backtrace regardless of …","Forcibly captures a full backtrace regardless of …","Returns an iterator over the backtrace frames.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the status of this backtrace indicating whether …","A trait for borrowing data.","A trait for mutably borrowing data.","Borrowed data.","A clone-on-write smart pointer.","Owned data.","The resulting type after obtaining ownership.","A generalization of Clone to borrowed data.","Immutably borrows from an owned value.","Mutably borrows from an owned value.","Uses borrowed data to replace owned data usually by …","Creates an owned Cow&lt;’a B&gt; with the default value for …","Creates a clone-on-write pointer from a reference to Path.","Creates a clone-on-write pointer from an owned instance of …","Converts a CStr into a borrowed Cow without copying or …","Moves the string into a Cow::Owned.","Converts a String into an Owned variant. No heap …","Converts the string reference into a Cow::Borrowed.","Creates a clone-on-write pointer from a reference to …","Creates a Borrowed variant of Cow from a slice.","Converts a CString into an owned Cow without copying or …","Converts the string reference into a Cow::Borrowed.","Converts a &amp;CString into a borrowed Cow without copying or …","Creates a Borrowed variant of Cow from a reference to Vec.","Converts a string slice into a Borrowed variant. No heap …","Creates an Owned variant of Cow from an owned instance of …","Returns the argument unchanged.","Creates a Borrowed variant of Cow from a reference to an …","Converts a String reference into a Borrowed variant. No …","Calls U::from(self).","Extracts the owned data.","Returns true if the data is borrowed i.e. if to_mut would …","Returns true if the data is owned i.e. if to_mut would be …","Acquires a mutable reference to the owned form of the data.","Creates owned data from borrowed data usually by cloning.","A pointer type that uniquely owns a heap allocation of …","ThinBox.","Returns a reference to the underlying allocator.","Converts to Box&lt;T A&gt;.","Converts to Box&lt;[T] A&gt;.","Returns a new box with a clone() of this box’s contents.","Copies source’s contents into self without creating a …","Copies source’s contents into self without creating a …","Creates a Box&lt;T&gt; with the Default value for T.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","Returns the argument unchanged.","Converts a &amp;CStr into a Box&lt;CStr&gt; by copying the contents …","Converts a str into a box of dyn Error + Send + Sync.","Converts a PathBuf into a Box&lt;Path&gt;.","Converts the given String to a boxed str slice that is …","Creates a boxed Path from a clone-on-write pointer.","Returns the argument unchanged.","Converts an OsString into a Box&lt;OsStr&gt; without copying or …","Converts a String into a box of dyn Error.","Converts a CString into a Box&lt;CStr&gt; without copying or …","Copies the string into a newly allocated Box&lt;OsStr&gt;.","Converts a type of Error into a box of dyn Error.","Convert a vector into a boxed slice.","Converts a Cow&lt;&#39;a CStr&gt; into a Box&lt;CStr&gt; by copying the …","Converts a str into a box of dyn Error.","Converts a type of Error + Send + Sync into a box of dyn …","Converts a Cow into a box of dyn Error.","Converts a Cow&lt;&#39;_ str&gt; into a Box&lt;str&gt;","Converts a Cow&lt;&#39;a OsStr&gt; into a Box&lt;OsStr&gt; by copying …","Converts a Box&lt;str&gt; into a Box&lt;[u8]&gt;","Converts a Cow&lt;&#39;_ [T]&gt; into a Box&lt;[T]&gt;","Converts a T into a Box&lt;T&gt;","Converts a String into a box of dyn Error + Send + Sync.","Converts a [T; N] into a Box&lt;[T]&gt;","Converts a Cow into a box of dyn Error + Send + Sync.","Creates a boxed Path from a reference.","Converts a &amp;[T] into a Box&lt;[T]&gt;","Converts a &amp;str into a Box&lt;str&gt;","Constructs a box from a raw pointer.","Constructs a box from a raw pointer in the given allocator.","Calls U::from(self).","Calls U::from(self).","Converts a Box&lt;T&gt; into a Box&lt;[T]&gt;","Consumes the Box returning the wrapped value.","Converts a Box&lt;T&gt; into a Pin&lt;Box&lt;T&gt;&gt;. If T does not …","Consumes the Box returning a wrapped raw pointer.","Consumes the Box returning a wrapped raw pointer and the …","Consumes and leaks the Box returning a mutable reference …","Moves a type to the heap with its Metadata stored in the …","Allocates memory on the heap and then places x into it.","Allocates memory in the given allocator then places x into …","Constructs a new box with uninitialized contents.","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents.","Constructs a new boxed slice with uninitialized contents …","Moves a type to the heap with its Metadata stored in the …","Constructs a new Box with uninitialized contents with the …","Constructs a new Box with uninitialized contents with the …","Constructs a new boxed slice with uninitialized contents …","Constructs a new boxed slice with uninitialized contents …","Constructs a new Pin&lt;Box&lt;T&gt;&gt;. If T does not implement Unpin…","Constructs a new Pin&lt;Box&lt;T A&gt;&gt;. If T does not implement …","Attempts to convert a Vec&lt;T&gt; into a Box&lt;[T; N]&gt;.","Attempts to convert a Box&lt;[T]&gt; into a Box&lt;[T; N]&gt;.","Moves a type to the heap with its Metadata stored in the …","Allocates memory on the heap then places x into it …","Allocates memory in the given allocator then places x into …","Constructs a new box with uninitialized contents on the …","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents. …","Constructs a new Box with uninitialized contents with the …","Constructs a new Box with uninitialized contents with the …","Constructs a new boxed slice with uninitialized contents …","Writes the value and converts to Box&lt;T A&gt;.","An error returned by RefCell::try_borrow.","An error returned by RefCell::try_borrow_mut.","A mutable memory location.","A value which is initialized on the first access.","A cell which can nominally be written to only once.","Wraps a borrowed reference to a value in a RefCell box. A …","A mutable memory location with dynamically checked borrow …","A wrapper type for a mutably borrowed value from a …","UnsafeCell but Sync.","The core primitive for interior mutability in Rust.","Returns a &amp;[Cell&lt;T&gt;; N] from a &amp;Cell&lt;[T; N]&gt;","Returns a raw pointer to the underlying data in this cell.","Returns a raw pointer to the underlying data in this cell.","Returns a &amp;[Cell&lt;T&gt;] from a &amp;Cell&lt;[T]&gt;","Immutably borrows the wrapped value.","Mutably borrows the wrapped value.","Panics","Copies a Ref.","Panics","Panics","Creates a new lazy value using Default as the initializing …","Creates a Cell&lt;T&gt; with the Default value for T.","Creates a RefCell&lt;T&gt; with the Default value for T.","Creates an UnsafeCell with the Default value for T.","Creates an SyncUnsafeCell with the Default value for T.","Panics","Makes a new Ref for an optional component of the borrowed …","Makes a new RefMut for an optional component of the …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Creates a new OnceCell&lt;T&gt; which already contains the given …","Returns the argument unchanged.","Creates a new Cell&lt;T&gt; containing the given value.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new RefCell&lt;T&gt; containing the given value.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new UnsafeCell&lt;T&gt; containing the given value.","Returns the argument unchanged.","Creates a new SyncUnsafeCell&lt;T&gt; containing the given value.","Returns the argument unchanged.","Returns a &amp;Cell&lt;T&gt; from a &amp;mut T","Converts from &amp;mut T to &amp;mut UnsafeCell&lt;T&gt;.","Panics","Gets the reference to the underlying value.","Returns a copy of the contained value.","Gets a mutable pointer to the wrapped value.","Gets a mutable pointer to the wrapped value.","Gets the mutable reference to the underlying value.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Gets the mutable reference of the contents of the cell …","Gets the mutable reference of the contents of the cell …","Gets the contents of the cell initializing it with f if …","Gets the contents of the cell initializing it with f if …","Panics","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Consumes this LazyCell returning the stored value.","Consumes the cell returning the wrapped value.","Unwraps the value consuming the cell.","Consumes the RefCell returning the wrapped value.","Unwraps the value consuming the cell.","Unwraps the value consuming the cell.","Panics","Convert into a reference to the underlying data.","Convert into a mutable reference to the underlying data.","Panics","Makes a new Ref for a component of the borrowed data.","Makes a new RefMut for a component of the borrowed data …","Splits a Ref into multiple Refs for different components …","Splits a RefMut into multiple RefMuts for different …","Creates a new lazy value with the given initializing …","Creates a new empty cell.","Creates a new Cell containing the given value.","Creates a new RefCell containing value.","Constructs a new instance of UnsafeCell which will wrap …","Constructs a new instance of SyncUnsafeCell which will …","Panics","Gets a mutable pointer to the wrapped value. The …","Gets a mutable pointer to the wrapped value.","Replaces the contained value with val and returns the old …","Replaces the wrapped value with a new one returning the …","Replaces the wrapped value with a new one computed from f …","Sets the contents of the cell to value.","Sets the contained value.","Swaps the values of two Cells. Difference with …","Swaps the wrapped value of self with the wrapped value of …","Takes the value out of this OnceCell moving it back to an …","Takes the value of the cell leaving Default::default() in …","Takes the wrapped value leaving Default::default() in its …","Immutably borrows the wrapped value returning an error if …","Mutably borrows the wrapped value returning an error if …","Immutably borrows the wrapped value returning an error if …","Sets the contents of the cell to value if the cell was …","Undo the effect of leaked guards on the borrow state of …","Updates the contained value using a function and returns …","The error type returned when a conversion from u32 to char …","An iterator that decodes UTF-16 encoded code points from …","An error that can be returned when decoding UTF-16 code …","An iterator that yields the literal escape code of a char.","An iterator that yields the literal escape code of a char.","Returns an iterator that yields the hexadecimal Unicode …","The highest valid code point a char can have &#39;\\\\u{10FFFF}&#39;…","An error which can be returned when parsing a char.","U+FFFD REPLACEMENT CHARACTER (�) is used in Unicode to …","Returns an iterator that yields the lowercase equivalent …","Returns an iterator that yields the uppercase equivalent …","The error type returned when a checked char conversion …","The version of Unicode that the Unicode parts of char and …","Creates an iterator over the UTF-16 encoded code points in …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a digit in the given radix to a char. Use …","Converts a u32 to a char. Use char::from_u32 instead.","Converts a u32 to a char ignoring validity. Use …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the unpaired surrogate which caused this error.","A common trait for the ability to explicitly duplicate an …","Derive macro generating an impl of the trait Clone.","A generalization of Clone to dynamically-sized types …","Returns a copy of the value.","Performs copy-assignment from source.","Performs copy-assignment from self to dst.","Trait for comparisons corresponding to equivalence …","Derive macro generating an impl of the trait Eq.","An ordering where a compared value is equal to another.","An ordering where a compared value is greater than another.","An ordering where a compared value is less than another.","Trait for types that form a total order.","Derive macro generating an impl of the trait Ord. The …","An Ordering is the result of a comparison between two …","Trait for comparisons using the equality operator.","Derive macro generating an impl of the trait PartialEq. …","Trait for types that form a partial order.","Derive macro generating an impl of the trait PartialOrd. …","A helper struct for reverse ordering.","Restrict a value to a certain interval.","This method returns an Ordering between self and other.","This method tests for self and other values to be equal …","Returns the argument unchanged.","Returns the argument unchanged.","This method tests greater than or equal to (for self and …","This method tests greater than (for self and other) and is …","Calls U::from(self).","Calls U::from(self).","Returns true if the ordering is the Equal variant.","Returns true if the ordering is either the Greater or Equal…","Returns true if the ordering is the Greater variant.","Returns true if the ordering is either the Less or Equal …","Returns true if the ordering is the Less variant.","Returns true if the ordering is not the Equal variant.","This method tests less than or equal to (for self and other…","This method tests less than (for self and other) and is …","Compares and returns the maximum of two values.","Compares and returns the maximum of two values.","Returns the maximum of two values with respect to the …","Returns the element that gives the maximum value from the …","Compares and returns the minimum of two values.","Compares and returns the minimum of two values.","Returns the minimum of two values with respect to the …","Returns the element that gives the minimum value from the …","Compares and sorts two values returning minimum and …","Returns minimum and maximum values with respect to the …","Returns minimum and maximum values with respect to the …","This method tests for !=. The default implementation is …","This method returns an ordering between self and other …","Reverses the Ordering.","Chains two orderings.","Chains the ordering with the given function.","The memory allocator returned an error","An ordered map based on a B-Tree.","An ordered set based on a B-Tree.","A priority queue implemented with a binary heap.","Error due to the computed capacity exceeding the collection…","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a HashMap where the value is ().","A doubly-linked list with owned nodes.","The error type for try_reserve methods.","Details of the allocation that caused a TryReserveError","A double-ended queue implemented with a growable ring …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Moves all the elements of other into self leaving other …","Moves all elements from other into self leaving other …","Moves all elements from other into self leaving other …","Moves all elements from other to the end of the list.","Moves all the elements of other into self leaving other …","Returns a pair of slices which contain in order the …","Returns a slice of all values in the underlying vector in …","Returns a pair of slices which contain in order the …","Provides a reference to the back element or None if the …","Provides a reference to the back element or None if the …","Provides a mutable reference to the back element or None …","Provides a mutable reference to the back element or None …","A priority queue implemented with a binary heap.","Binary searches this VecDeque for a given element. If the …","Binary searches this VecDeque with a comparator function.","Binary searches this VecDeque with a key extraction …","Returns the intersection of self and rhs as a new …","Returns the union of self and rhs as a new BTreeSet&lt;T&gt;.","Returns the symmetric difference of self and rhs as a new …","An ordered map based on a B-Tree.","An ordered set based on a B-Tree.","Returns the number of elements the binary heap can hold …","Returns the number of elements the deque can hold without …","Drops all items from the binary heap.","Clears the map removing all elements.","Clears the set removing all elements.","Removes all elements from the LinkedList.","Clears the deque removing all values.","Overwrites the contents of self with a clone of the …","Overwrites the contents of self with a clone of the …","Overwrites the contents of self with a clone of the …","Returns true if the set contains an element equal to the …","Returns true if the LinkedList contains an element equal …","Returns true if the deque contains an element equal to the …","Returns true if the map contains a value for the specified …","Provides a cursor at the back element.","Provides a cursor with editing operations at the back …","Provides a cursor at the front element.","Provides a cursor with editing operations at the front …","Creates an empty BinaryHeap&lt;T&gt;.","Creates an empty BTreeMap.","Creates an empty BTreeSet.","Creates an empty LinkedList&lt;T&gt;.","Creates an empty deque.","Visits the elements representing the difference i.e. the …","Clears the binary heap returning an iterator over the …","Removes the specified range from the deque in bulk …","Clears the binary heap returning an iterator over the …","Gets the given key’s corresponding entry in the map for …","Creates an iterator that visits all elements (key-value …","Creates an iterator that visits all elements in ascending …","Creates an iterator which uses a closure to determine if …","Returns the contents of the “front” slice as returned …","Returns a reference to the first element in the set if …","Returns the first entry in the map for in-place …","Returns the first key-value pair in the map. The key in …","Converts a Vec&lt;T&gt; into a BinaryHeap&lt;T&gt;.","Returns the argument unchanged.","Converts a [(K V); N] into a BTreeMap&lt;(K V)&gt;.","Returns the argument unchanged.","Converts a [T; N] into a BTreeSet&lt;T&gt;.","Returns the argument unchanged.","Converts a [T; N] into a LinkedList&lt;T&gt;.","Returns the argument unchanged.","Turn a Vec&lt;T&gt; into a VecDeque&lt;T&gt;.","Converts a [T; N] into a VecDeque&lt;T&gt;.","Returns the argument unchanged.","Returns the argument unchanged.","Always evaluates to TryReserveErrorKind::CapacityOverflow.","Returns the argument unchanged.","Provides a reference to the front element or None if the …","Provides a reference to the front element or None if the …","Provides a mutable reference to the front element or None …","Provides a mutable reference to the front element or None …","Returns a reference to the value corresponding to the key.","Returns a reference to the element in the set if any …","Provides a reference to the element at the given index.","Returns the key-value pair corresponding to the supplied …","Returns a mutable reference to the value corresponding to …","Provides a mutable reference to the element at the given …","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a HashMap where the value is ().","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Adds a value to the set.","Inserts an element at index within the deque shifting all …","Visits the elements representing the intersection i.e. …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Creates a consuming iterator that is one that moves each …","Gets an owning iterator over the entries of the map …","Gets an iterator for moving out the BTreeSet’s contents …","Consumes the list into an iterator yielding elements by …","Consumes the deque into a front-to-back iterator yielding …","Returns an iterator which retrieves elements in heap order.","Creates a consuming iterator visiting all the keys in …","Consumes the BinaryHeap and returns a vector in sorted …","Creates a consuming iterator visiting all the values in …","Consumes the BinaryHeap and returns the underlying vector …","Returns true if self has no elements in common with other. …","Checks if the binary heap is empty.","Returns true if the map contains no elements.","Returns true if the set contains no elements.","Returns true if the LinkedList is empty.","Returns true if the deque is empty.","Returns true if the set is a subset of another i.e. other…","Returns true if the set is a superset of another i.e. …","Returns an iterator visiting all values in the underlying …","Gets an iterator over the entries of the map sorted by …","Gets an iterator that visits the elements in the BTreeSet …","Provides a forward iterator.","Returns a front-to-back iterator.","Gets a mutable iterator over the entries of the map …","Provides a forward iterator with mutable references.","Returns a front-to-back iterator that returns mutable …","Gets an iterator over the keys of the map in sorted order.","Details about the allocation that caused the error","Returns a reference to the last element in the set if any.","Returns the last entry in the map for in-place …","Returns the last key-value pair in the map. The key in …","Returns the length of the binary heap.","Returns the number of elements in the map.","Returns the number of elements in the set.","Returns the length of the LinkedList.","Returns the number of elements in the deque.","A doubly-linked list with owned nodes.","Returns a Cursor pointing at the gap before the smallest …","Returns a CursorMut pointing at the gap before the …","Rearranges the internal storage of this deque so it is one …","Creates an empty BinaryHeap as a max-heap.","Makes a new empty BTreeMap.","Makes a new empty BTreeSet.","Creates an empty LinkedList.","Creates an empty deque.","Creates an empty BinaryHeap as a max-heap using A as …","Makes a new empty BTreeMap with a reasonable choice for B.","Makes a new BTreeSet with a reasonable choice of B.","Constructs an empty LinkedList&lt;T A&gt;.","Creates an empty deque.","Returns the index of the partition point according to the …","Returns the greatest item in the binary heap or None if …","Returns a mutable reference to the greatest item in the …","Removes the greatest item from the binary heap and returns …","Removes the last element from a list and returns it or …","Removes the last element from the deque and returns it or …","Removes and returns the first element in the map. The key …","Removes the first element from the set and returns it if …","Removes the first element and returns it or None if the …","Removes the first element and returns it or None if the …","Removes and returns the last element in the map. The key …","Removes the last element from the set and returns it if …","Pushes an item onto the binary heap.","Appends an element to the back of a list.","Appends an element to the back of the deque.","Adds an element first in the list.","Prepends an element to the deque.","Constructs a double-ended iterator over a sub-range of …","Constructs a double-ended iterator over a sub-range of …","Creates an iterator that covers the specified range in the …","Constructs a mutable double-ended iterator over a …","Creates an iterator that covers the specified mutable …","Fill buf with the contents of the “front” slice as …","Removes a key from the map returning the value at the key …","If the set contains an element equal to the value removes …","Removes the element at the given index and returns it.","Removes and returns the element at index from the deque. …","Removes a key from the map returning the stored key and …","Adds a value to the set replacing the existing element …","Reserves capacity for at least additional elements more …","Reserves capacity for at least additional more elements to …","Reserves the minimum capacity for at least additional …","Reserves the minimum capacity for at least additional more …","Modifies the deque in-place so that len() is equal to …","Modifies the deque in-place so that len() is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Rotates the double-ended queue n places to the left.","Rotates the double-ended queue n places to the right.","Discards capacity with a lower bound.","Shrinks the capacity of the deque with a lower bound.","Discards as much additional capacity as possible.","Shrinks the capacity of the deque as much as possible.","Splits the collection into two at the given key. Returns …","Splits the collection into two at the value. Returns a new …","Splits the list into two at the given index. Returns …","Splits the deque into two at the given index.","Returns the difference of self and rhs as a new BTreeSet&lt;T&gt;…","Swaps elements at indices i and j.","Removes an element from anywhere in the deque and returns …","Removes an element from anywhere in the deque and returns …","Visits the elements representing the symmetric difference …","Removes and returns the element in the set if any that …","Shortens the deque keeping the first len elements and …","Tries to insert a key-value pair into the map and returns …","Tries to reserve capacity for at least additional elements …","Tries to reserve capacity for at least additional more …","Tries to reserve the minimum capacity for at least …","Tries to reserve the minimum capacity for at least …","Creates an empty deque with space for at least capacity …","Visits the elements representing the union i.e. all the …","Returns a Cursor pointing at the gap after the greatest key","Returns a CursorMut pointing at the gap after the greatest …","Gets an iterator over the values of the map in order by …","Gets a mutable iterator over the values of the map in …","A double-ended queue (deque) implemented with a growable …","Creates an empty BinaryHeap with at least the specified …","Creates an empty deque with space for at least capacity …","Creates an empty BinaryHeap with at least the specified …","Creates an empty deque with space for at least capacity …","The layout of allocation request that failed","A priority queue implemented with a binary heap.","A draining iterator over the elements of a BinaryHeap.","A draining iterator over the elements of a BinaryHeap.","An owning iterator over the elements of a BinaryHeap.","An iterator over the elements of a BinaryHeap.","Structure wrapping a mutable reference to the greatest …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Creates an empty binary_heap::IntoIter.","Removes heap elements in heap order.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Removes the peeked value from the heap and returns it.","An ordered map based on a B-Tree.","A cursor over a BTreeMap.","A cursor over a BTreeMap with editing operations.","A cursor over a BTreeMap with editing operations and …","A view into a single entry in a map which may either be …","An iterator produced by calling extract_if on BTreeMap.","An owning iterator over the entries of a BTreeMap sorted …","An owning iterator over the keys of a BTreeMap.","An owning iterator over the values of a BTreeMap.","An iterator over the entries of a BTreeMap.","A mutable iterator over the entries of a BTreeMap.","An iterator over the keys of a BTreeMap.","An occupied entry.","A view into an occupied entry in a BTreeMap. It is part of …","The error returned by try_insert when the key already …","An iterator over a sub-range of entries in a BTreeMap.","A mutable iterator over a sub-range of entries in a …","Error type returned by CursorMut::insert_before and …","A vacant entry.","A view into a vacant entry in a BTreeMap. It is part of …","An iterator over the values of a BTreeMap.","A mutable iterator over the values of a BTreeMap.","Provides in-place mutable access to an occupied entry …","Returns a read-only cursor pointing to the same location …","Returns a read-only cursor pointing to the same location …","Creates an empty btree_map::Iter.","Creates an empty btree_map::IterMut.","Creates an empty btree_map::IntoIter.","Creates an empty btree_map::Keys.","Creates an empty btree_map::Values.","Creates an empty btree_map::IntoKeys.","Creates an empty btree_map::IntoValues.","Creates an empty btree_map::Range.","The entry in the map that was already occupied.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Sets the value of the entry with the VacantEntry’s key …","Sets the value of the entry with the OccupiedEntry’s key","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Inserts a new key-value pair into the map in the gap that …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Take ownership of the key.","Converts the entry into a mutable reference to its value.","Returns a reference to this entry’s key.","Gets a reference to the key that would be used when …","Gets a reference to the key in the entry.","Advances the cursor to the next gap returning the key and …","Advances the cursor to the next gap returning the key and …","Advances the cursor to the next gap returning the key and …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting if empty …","Returns a reference to the key and value of the next …","Returns a reference to the key and value of the next …","Returns a reference to the key and value of the next …","Returns a reference to the key and value of the previous …","Returns a reference to the key and value of the previous …","Returns a reference to the key and value of the previous …","Advances the cursor to the previous gap returning the key …","Advances the cursor to the previous gap returning the key …","Advances the cursor to the previous gap returning the key …","Takes the value of the entry out of the map and returns …","Take ownership of the key and value from the map.","Removes the next element from the BTreeMap.","Removes the next element from the BTreeMap.","Removes the precending element from the BTreeMap.","Removes the precending element from the BTreeMap.","The value which was not inserted because the entry was …","Converts the cursor into a CursorMutKey which allows …","An ordered set based on a B-Tree.","A lazy iterator producing elements in the difference of …","An iterator produced by calling extract_if on BTreeSet.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a BTreeSet in …","An iterator over the items of a BTreeSet.","An iterator over a sub-range of items in a BTreeSet.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of BTreeSet…","Creates an empty btree_set::Iter.","Creates an empty btree_set::IntoIter.","Creates an empty btree_set::Range.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","The default Hasher used by RandomState.","A draining iterator over the entries of a HashMap.","A view into a single entry in a map which may either be …","A draining filtering iterator over the entries of a …","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a HashMap.","An owning iterator over the keys of a HashMap.","An owning iterator over the values of a HashMap.","An iterator over the entries of a HashMap.","A mutable iterator over the entries of a HashMap.","An iterator over the keys of a HashMap.","An occupied entry.","An occupied entry.","A view into an occupied entry in a HashMap. It is part of …","The error returned by try_insert when the key already …","RandomState is the default state for HashMap types.","A builder for computing where in a HashMap a key-value …","A builder for computing where in a HashMap a key-value …","A view into a single entry in a map which may either be …","A view into an occupied entry in a HashMap. It is part of …","A view into a vacant entry in a HashMap. It is part of the …","A vacant entry.","A vacant entry.","A view into a vacant entry in a HashMap. It is part of the …","An iterator over the values of a HashMap.","A mutable iterator over the values of a HashMap.","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Returns the number of elements the map can hold without …","Clears the map removing all key-value pairs. Keeps the …","Returns true if the map contains a value for the specified …","Creates an empty HashMap&lt;K V S&gt; with the Default value …","Constructs a new RandomState.","Creates a new DefaultHasher using new. See its …","Clears the map returning all key-value pairs as an …","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","Creates an iterator which uses a closure to determine if …","Returns the argument unchanged.","Examples","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a RawEntryMut from the given hash.","Access an entry by hash.","Creates a RawEntryMut from the given key.","Access an entry by key.","Creates a RawEntryMut from the given key and its hash.","Access an entry by a key and its hash.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a reference to the key and value in the entry.","Gets a mutable reference to the key and value in the entry.","Attempts to get mutable references to N values in the map …","Attempts to get mutable references to N values in the map …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the map’s BuildHasher.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Sets the value of the entry and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key …","Sets the value of the entry and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key …","Sets the value of the entry and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s key …","Sets the value of the entry with the VacantEntry’s key …","Sets the value of the entry and returns the entry’s old …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Creates a consuming iterator that is one that moves each …","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Creates a consuming iterator visiting all the keys in …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Creates a consuming iterator visiting all the values in …","Returns true if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","Creates an empty HashMap.","Constructs a new RandomState that is initialized with …","Creates a new DefaultHasher.","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting if empty …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Removes a key from the map returning the value at the key …","Takes the value out of the entry and returns it.","Takes the value out of the entry and returns it.","Removes a key from the map returning the stored key and …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map.","Replaces the entry returning the old key and value. The …","Replaces the key in the hash map with the key used to …","Reserves capacity for at least additional more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","Tries to insert a key-value pair into the map and returns …","Tries to reserve capacity for at least additional more …","The value which was not inserted because the entry was …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty HashMap with at least the specified …","Creates an empty HashMap with at least the specified …","Creates an empty HashMap which will use the given hash …","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a HashSet.","A draining filtering iterator over the items of a HashSet.","A hash set implemented as a HashMap where the value is ().","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a HashSet.","An iterator over the items of a HashSet.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of HashSet…","Returns the intersection of self and rhs as a new …","Returns the union of self and rhs as a new HashSet&lt;T S&gt;.","Returns the symmetric difference of self and rhs as a new …","Returns the number of elements the set can hold without …","Clears the set removing all values.","Overwrites the contents of self with a clone of the …","Returns true if the set contains a value.","Creates an empty HashSet&lt;T S&gt; with the Default value for …","Visits the values representing the difference i.e. the …","Clears the set returning all elements as an iterator. …","Creates an iterator which uses a closure to determine if a …","Examples","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value in the set if any that …","Inserts the given value into the set if it is not present …","Inserts an owned copy of the given value into the set if …","Inserts a value computed from f into the set if the given …","Returns a reference to the set’s BuildHasher.","Adds a value to the set.","Visits the values representing the intersection i.e. the …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Creates a consuming iterator that is one that moves each …","Returns true if self has no elements in common with other. …","Returns true if the set contains no elements.","Returns true if the set is a subset of another i.e. other…","Returns true if the set is a superset of another i.e. …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","Creates an empty HashSet.","Removes a value from the set. Returns whether the value was","Adds a value to the set replacing the existing value if …","Reserves capacity for at least additional more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the set as much as possible. It …","Returns the difference of self and rhs as a new …","Visits the values representing the symmetric difference …","Removes and returns the value in the set if any that is …","Tries to reserve capacity for at least additional more …","Visits the values representing the union i.e. all the …","Creates an empty HashSet with at least the specified …","Creates an empty HashSet with at least the specified …","Creates a new empty hash set which will use the given …","A cursor over a LinkedList.","A cursor over a LinkedList with editing operations.","An iterator produced by calling extract_if on LinkedList.","An owning iterator over the elements of a LinkedList.","An iterator over the elements of a LinkedList.","A mutable iterator over the elements of a LinkedList.","A doubly-linked list with owned nodes.","Returns a read-only cursor pointing to the current element.","Provides a reference to the cursor’s parent list.","Provides a read-only reference to the cursor’s parent …","Provides a reference to the back element of the cursor’s …","Provides a reference to the back element of the cursor’s …","Provides a mutable reference to back element of the cursor…","Returns a reference to the element that the cursor is …","Returns a reference to the element that the cursor is …","Creates an empty linked_list::Iter.","Creates an empty linked_list::IntoIter.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Provides a reference to the front element of the cursor’…","Provides a reference to the front element of the cursor’…","Provides a mutable reference to the front element of the …","Returns the cursor position index within the LinkedList.","Returns the cursor position index within the LinkedList.","Inserts a new element into the LinkedList after the …","Inserts a new element into the LinkedList before the …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Moves the cursor to the next element of the LinkedList.","Moves the cursor to the next element of the LinkedList.","Moves the cursor to the previous element of the LinkedList.","Moves the cursor to the previous element of the LinkedList.","Returns a reference to the next element.","Returns a reference to the next element.","Returns a reference to the previous element.","Returns a reference to the previous element.","Removes the last element from the cursor’s parent list …","Removes the first element from the cursor’s parent list …","Appends an element to the back of the cursor’s parent …","Appends an element to the front of the cursor’s parent …","Removes the current element from the LinkedList.","Removes the current element from the LinkedList without …","Inserts the elements from the given LinkedList after the …","Inserts the elements from the given LinkedList before the …","Splits the list into two after the current element. This …","Splits the list into two before the current element. This …","A draining iterator over the elements of a VecDeque.","An owning iterator over the elements of a VecDeque.","An iterator over the elements of a VecDeque.","A mutable iterator over the elements of a VecDeque.","A double-ended queue implemented with a growable ring …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Used to do a cheap mutable-to-mutable reference conversion.","Used to do a cheap reference-to-reference conversion.","The type returned in the event of a conversion error.","The type returned in the event of a conversion error.","Supporting trait for inherent methods of f32 and f64 such …","Used to do value-to-value conversions while consuming the …","The error type for errors that can never happen.","A value-to-value conversion that consumes the input value. …","Simple and safe type conversions that may fail in a …","An attempted conversion that consumes self which may or …","Converts this type into a mutable reference of the …","Converts this type into a shared reference of the (usually …","Converts to this type from the input type.","Returns the argument unchanged.","The identity function.","Converts this type into the (usually inferred) input type.","Calls U::from(self).","Performs the conversion.","Performs the conversion.","A trait for giving a type a useful default value.","Derive macro generating an impl of the trait Default.","Returns the “default value” for a type.","An iterator over the arguments of a process yielding a …","An iterator over the arguments of a process yielding an …","The error type for operations on the PATH variable. …","The specified environment variable was not present in the …","The specified environment variable was found but it did …","An iterator that splits an environment variable into paths …","The error type for operations interacting with environment …","An iterator over a snapshot of the environment variables …","An iterator over a snapshot of the environment variables …","Returns the arguments that this program was started with …","Returns the arguments that this program was started with …","Constants associated with the current target","Returns the current working directory as a PathBuf.","Returns the full filesystem path of the current running …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the path of the current user’s home directory if …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Joins a collection of Paths appropriately for the PATH …","Removes an environment variable from the environment of …","Changes the current working directory to the specified …","Sets the environment variable key to the value value for …","Parses input according to platform conventions for the PATH","Returns the path of a temporary directory.","Fetches the environment variable key from the current …","Fetches the environment variable key from the current …","Returns an iterator of (variable value) pairs of strings …","Returns an iterator of (variable value) pairs of OS …","A string describing the architecture of the CPU that is …","Specifies the file extension used for shared libraries on …","Specifies the filename prefix used for shared libraries on …","Specifies the filename suffix used for shared libraries on …","Specifies the file extension if any used for executable …","Specifies the filename suffix used for executable binaries …","The family of the operating system. Example value is unix.","A string describing the specific operating system in use. …","Error is a trait representing the basic expectations for …","An error reporter that prints an error and its sources.","Request supports generic type-driven access to data. Its …","Attempts to downcast the box to a concrete type.","Attempts to downcast the box to a concrete type.","Attempts to downcast the box to a concrete type.","Returns some mutable reference to the inner value if it is …","Forwards to the method defined on the type dyn Error.","Forwards to the method defined on the type dyn Error.","Forwards to the method defined on the type dyn Error.","Returns some reference to the inner value if it is of type …","Forwards to the method defined on the type dyn Error.","Returns the argument unchanged.","Calls U::from(self).","Forwards to the method defined on the type dyn Error.","Returns true if the inner type is the same as T.","Forwards to the method defined on the type dyn Error.","Create a new Report from an input error.","Enable pretty-printing the report across multiple lines.","Provides type based access to context intended for error …","Provide a reference. The referee type must be bounded by …","Provide a reference computed using a closure. The referee …","Provide a value or other type with only static lifetimes.","Provide a value or other type with only static lifetimes …","Request a reference of type T from the given impl Error.","Request a value of type T from the given impl Error.","Display backtrace if available when using pretty output …","The lower-level source of this error if any.","Returns an iterator starting with the current error and …","Check if the Request would be satisfied if provided with a …","Check if the Request would be satisfied if provided with a …","Basic mathematical constants.","Euler’s number (e)","The Euler-Mascheroni constant (γ)","1/π","1/sqrt(2)","1/sqrt(2π)","1/sqrt(3)","1/sqrt(π)","2/π","2/sqrt(π)","π/2","π/3","π/4","π/6","π/8","ln(10)","ln(2)","log10(2)","log10(e)","log2(10)","log2(e)","The golden ratio (φ)","Archimedes’ constant (π)","sqrt(2)","sqrt(3)","The full circle constant (τ)","Basic mathematical constants.","Euler’s number (e)","The Euler-Mascheroni constant (γ)","1/π","1/sqrt(2)","1/sqrt(2π)","1/sqrt(3)","1/sqrt(π)","2/π","2/sqrt(π)","π/2","π/3","π/4","π/6","π/8","ln(10)","ln(2)","log10(2)","log10(e)","log2(10)","log2(e)","The golden ratio (φ)","Archimedes’ constant (π)","sqrt(2)","sqrt(3)","The full circle constant (τ)","Approximate number of significant digits in base 10. Use …","Machine epsilon value for f32. Use f32::EPSILON instead.","Infinity (∞). Use f32::INFINITY instead.","Number of significant digits in base 2. Use …","Largest finite f32 value. Use f32::MAX instead.","Maximum possible power of 10 exponent. Use f32::MAX_10_EXP …","Maximum possible power of 2 exponent. Use f32::MAX_EXP …","Smallest finite f32 value. Use f32::MIN instead.","Minimum possible normal power of 10 exponent. Use …","One greater than the minimum possible normal power of 2 …","Smallest positive normal f32 value. Use f32::MIN_POSITIVE …","Not a Number (NaN). Use f32::NAN instead.","Negative infinity (−∞). Use f32::NEG_INFINITY instead.","The radix or base of the internal representation of f32. …","Basic mathematical constants.","Euler’s number (e)","The Euler-Mascheroni constant (γ)","1/π","1/sqrt(2)","1/sqrt(2π)","1/sqrt(3)","1/sqrt(π)","2/π","2/sqrt(π)","π/2","π/3","π/4","π/6","π/8","ln(10)","ln(2)","log10(2)","log10(e)","log2(10)","log2(e)","The golden ratio (φ)","Archimedes’ constant (π)","sqrt(2)","sqrt(3)","The full circle constant (τ)","Approximate number of significant digits in base 10. Use …","Machine epsilon value for f64. Use f64::EPSILON instead.","Infinity (∞). Use f64::INFINITY instead.","Number of significant digits in base 2. Use …","Largest finite f64 value. Use f64::MAX instead.","Maximum possible power of 10 exponent. Use f64::MAX_10_EXP …","Maximum possible power of 2 exponent. Use f64::MAX_EXP …","Smallest finite f64 value. Use f64::MIN instead.","Minimum possible normal power of 10 exponent. Use …","One greater than the minimum possible normal power of 2 …","Smallest positive normal f64 value. Use f64::MIN_POSITIVE …","Not a Number (NaN). Use f64::NAN instead.","Negative infinity (−∞). Use f64::NEG_INFINITY instead.","The radix or base of the internal representation of f64. …","Basic mathematical constants.","Euler’s number (e)","The Euler-Mascheroni constant (γ)","1/π","1/sqrt(2)","1/sqrt(2π)","1/sqrt(3)","1/sqrt(π)","2/π","2/sqrt(π)","π/2","π/3","π/4","π/6","π/8","ln(10)","ln(2)","log10(2)","log10(e)","log2(10)","log2(e)","The golden ratio (φ)","Archimedes’ constant (π)","sqrt(2)","sqrt(3)","The full circle constant (τ)","Representation of a borrowed C string.","A type representing an owned C-compatible nul-terminated …","Borrowed reference to an OS string (see OsString).","A type that can represent owned mutable platform-native …","A wrapper for a va_list","x86_64 ABI implementation of a va_list.","Advance to the next arg.","Returns the contents of this CString as a slice of bytes.","Equivalent to CString::as_bytes() except that the returned …","Extracts a CStr slice containing the entire string.","Returns the inner pointer to this C string.","Convert a VaListImpl into a VaList that is …","Iterates over the bytes in this C string.","Equivalent to C’s char type.","Equivalent to C’s double type.","Equivalent to C’s float type.","Equivalent to C’s signed int (int) type.","Equivalent to C’s signed long (long) type.","Equivalent to C’s signed long long (long long) type.","Equivalent to C’s signed char type.","Equivalent to C’s signed short (short) type.","CStr CString and related types.","Equivalent to C’s unsigned char type.","Equivalent to C’s unsigned int type.","Equivalent to C’s unsigned long type.","Equivalent to C’s unsigned long long type.","Equivalent to C’s unsigned short type.","Equivalent to C’s void type when used as a pointer.","Clones the contents of source into self.","Returns the length of self. Like C’s strlen this does …","Constructs an empty OsString.","Creates an empty OsStr.","Creates an empty CString.","Returns the argument unchanged.","Copies any value implementing AsRef&lt;OsStr&gt; into a newly …","Converts a String into an OsString.","Converts a Box&lt;OsStr&gt; into an OsString without copying or …","Converts a Cow&lt;&#39;a OsStr&gt; into an OsString by copying the …","Converts a PathBuf into an OsString","Returns the argument unchanged.","Returns the argument unchanged.","Converts a Vec&lt;NonZero&lt;u8&gt;&gt; into a CString without copying …","Converts a Cow&lt;&#39;a CStr&gt; into a CString by copying the …","Converts a &amp;CStr into a CString by copying the contents …","Converts a Box&lt;CStr&gt; into a CString without copying or …","Returns the argument unchanged.","Returns the argument unchanged.","Creates a C string wrapper from a byte slice with any …","Creates a C string wrapper from a byte slice with exactly …","Unsafely creates a C string wrapper from a byte slice.","Wraps a raw C string with a safe C string wrapper.","Retakes ownership of a CString that was transferred to C …","Creates a C-compatible string by consuming a byte vector …","Attempts to converts a Vec&lt;u8&gt; to a CString.","Converts a Vec&lt;u8&gt; to a CString without checking the …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Converts this CString into a boxed CStr.","Consumes the CString and returns the underlying byte …","Equivalent to CString::into_bytes() except that the …","Converts a Box&lt;CStr&gt; into a CString without copying or …","Consumes the CString and transfers ownership of the string …","Converts the CString into a String if it contains valid …","Returns true if self.to_bytes() has a length of 0.","Creates a new C-compatible string from a container of …","The OsStr and OsString types and associated utilities.","Converts this C string to a byte slice.","Converts this C string to a byte slice containing the …","Yields a &amp;str slice if the CStr contains valid UTF-8.","Converts a CStr into a Cow&lt;str&gt;.","Copies the va_list at the current location.","Representation of a borrowed C string.","A type representing an owned C-compatible nul-terminated …","An error indicating that no nul byte was present.","An error indicating that a nul byte was not in the …","An error indicating that a nul byte was not in the …","An error indicating invalid UTF-8 when converting a CString…","An error indicating that an interior nul byte was found.","Returns a slice of u8s bytes that were attempted to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the bytes that were attempted to convert to a …","Consumes this error returning original CString which …","Consumes this error returning the underlying vector of …","Returns the position of the nul byte in the slice that …","Access the underlying UTF-8 error that was the cause of …","Helper struct for safely printing an OsStr with format! …","Borrowed reference to an OS string (see OsString).","A type that can represent owned mutable platform-native …","Converts an OS string slice to a byte slice.  To convert …","Converts to an OsStr slice.","Returns the capacity this OsString can hold without …","Truncates the OsString to zero length.","Returns an object that implements Display for safely …","Checks that two strings are an ASCII case-insensitive …","Returns the argument unchanged.","Converts bytes to an OsString without checking that the …","Converts a slice of bytes to an OS string slice without …","Calls U::from(self).","Converts this OsString into a boxed OsStr.","Converts the OsString into a byte slice.  To convert the …","Converts a Box&lt;OsStr&gt; into an OsString without copying or …","Converts the OsString into a String if it contains valid …","Checks if all characters in this string are within the …","Checks whether the OsStr is empty.","Consumes and leaks the OsString returning a mutable …","Returns the length of this OsStr.","Converts this string to its ASCII lower case equivalent …","Converts this string to its ASCII upper case equivalent …","Constructs a new empty OsString.","Coerces into an OsStr slice.","Extends the string with the given &amp;OsStr slice.","Reserves capacity for at least additional more capacity to …","Reserves the minimum capacity for at least additional more …","Shrinks the capacity of the OsString with a lower bound.","Shrinks the capacity of the OsString to match its length.","Takes a substring based on a range that corresponds to the …","Returns a copy of this string where each character is …","Returns a copy of this string where each character is …","Copies the slice into an owned OsString.","Yields a &amp;str slice if the OsStr is valid Unicode.","Converts an OsStr to a Cow&lt;str&gt;.","Tries to reserve capacity for at least additional more …","Tries to reserve the minimum capacity for at least …","Creates a new OsString with at least the given capacity.","Possible alignments returned by Formatter::align","This structure represents a safely precompiled version of …","b formatting.","Indication that contents should be center-aligned.","? formatting.","Derive macro generating an impl of the trait Debug.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","A struct to help with fmt::Debug implementations.","Format trait for an empty format {}.","Contains the error value","The error type which is returned from formatting a message …","Configuration for formatting.","Implements fmt::Debug and fmt::Display using a function.","Indication that contents should be left-aligned.","e formatting.","x formatting.","o formatting.","Contains the success value","p formatting.","The type returned by formatter methods.","Indication that contents should be right-aligned.","E formatting.","X formatting.","A trait for writing or formatting into Unicode-accepting …","Flag indicating what form of alignment was requested.","Determines if the # flag was specified.","Get the formatted string if it has no arguments to be …","Creates a DebugList builder designed to assist with …","Creates a DebugMap builder designed to assist with …","Creates a DebugSet builder designed to assist with …","Creates a DebugStruct builder designed to assist with …","Creates a DebugTuple builder designed to assist with …","Adds the contents of an iterator of entries to the set …","Adds the contents of an iterator of entries to the list …","Adds the contents of an iterator of entries to the map …","Adds a new entry to the set output.","Adds a new entry to the list output.","Adds a new entry to the map output.","Adds a new entry to the set output.","Adds a new entry to the list output.","Adds a new field to the generated struct output.","Adds a new field to the generated tuple struct output.","Adds a new field to the generated struct output.","Adds a new field to the generated tuple struct output.","Character used as ‘fill’ whenever there is alignment.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Marks the struct as non-exhaustive indicating to the …","Flags for formatting","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","The format function takes an Arguments struct and returns …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Adds the key part of a new entry to the map output.","Adds the key part of a new entry to the map output.","This function takes a string slice and emits it to the …","Performs the correct padding for an integer which has …","Optionally specified precision for numeric types. …","Determines if the 0 flag was specified.","Determines if the - flag was specified.","Determines if the + flag was specified.","Adds the value part of a new entry to the map output.","Adds the value part of a new entry to the map output.","Optionally specified integer width that the output should …","The write function takes an output stream and an Arguments…","Writes a char into this writer returning whether the …","Glue for usage of the write! macro with implementors of …","Writes some formatted information into this instance.","Writes a string slice into this writer returning whether …","Writes some data to the underlying buffer contained within …","A builder used to create directories in various manners.","Entries returned by the ReadDir iterator.","An object providing access to an open file on the …","Representation of the various timestamps on a file.","A structure representing a type of file with accessors for …","Metadata information about a file.","Options and flags which can be used to configure how a …","Representation of the various permissions on a file.","Iterator over the entries in a directory.","Returns the last access time of this metadata.","Sets the option for the append mode.","Returns the canonical absolute form of a path with all …","Copies the contents of one file to another. This function …","Opens a file in write-only mode.","Sets the option to create a new file or open it if it …","Creates the specified directory with the options …","Creates a new empty directory at the provided path","Recursively create a directory and all of its parent …","Creates a new file in read-write mode; error if the file …","Sets the option to create a new file failing if it …","Returns the creation time listed in this metadata.","Returns Ok(true) if the path points at an existing entity.","Returns the file name of this directory entry without any …","Returns the file type for the file that this entry points …","Returns the file type for this metadata.","Flushes the file ensuring that all intermediately …","Returns a File that takes ownership of the given file …","Returns the argument unchanged.","Returns a File that takes ownership of the given handle.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new hard link on the filesystem.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns true if this metadata is for a directory. The …","Tests whether this file type represents a directory. The …","Returns true if this metadata is for a regular file. The …","Tests whether this file type represents a regular file. …","Determines if File has an efficient read_vectored …","Returns true if this metadata is for a symbolic link.","Tests whether this file type represents a symbolic link. …","Determines if File has an efficient write_vectored …","Returns the size of the file in bytes this metadata is …","Given a path query the file system to get information …","Queries metadata about the underlying file.","Returns the metadata for the file that this entry points …","Returns the last modification time listed in this metadata.","Creates a blank new set of options ready for configuration.","Create a new FileTimes with no times set.","Creates a new set of options with default mode/security …","Attempts to open a file in read-only mode.","Opens a file at path with the options specified by self.","Returns a new OpenOptions object.","Returns the full path to the file that this entry …","Returns the permissions of the file this metadata is for.","Read the entire contents of a file into a bytes vector.","Read some bytes from the file.","Sets the option for read access.","Returns an iterator over the entries within a directory.","Reads a symbolic link returning the file that the link …","Read the entire contents of a file into a string.","Like read except that it reads into a slice of buffers.","Returns true if these permissions describe a readonly …","Indicates that directories should be created recursively …","Removes an empty directory.","Removes a directory at this path after removing all its …","Removes a file from the filesystem.","Rename a file or directory to a new name replacing the …","Set the last access time of a file.","Truncates or extends the underlying file updating the …","Changes the modification time of the underlying file.","Set the last modified time of a file.","Changes the permissions found on a file or a directory.","Changes the permissions on the underlying file.","Modifies the readonly flag for this set of permissions. If …","Changes the timestamps of the underlying file.","Creates a new symbolic link on the filesystem.","Query the metadata about a file without following symlinks.","Attempts to sync all OS-internal file content and metadata …","This function is similar to sync_all except that it might …","Sets the option for truncating a previous file.","Creates a new File instance that shares the same …","Write a slice as the entire contents of a file.","Write some bytes from the file.","Sets the option for write access.","Like write except that it writes into a slice of buffers.","Custom code within the asynchronous destructor.","A future returned by the async_drop_in_place.","A future returned by the AsyncDrop::async_drop to be part …","A future represents an asynchronous computation obtained …","Conversion into a Future.","Which kind of future are we turning this into?","The type of value produced on completion.","The output that the future will produce on completion.","Creates a future which never resolves representing a …","A Future that wraps a function returning Poll.","A future that is immediately ready with a value.","Asynchronously drops a value by running …","Constructs the asynchronous destructor for this type.","Creates the asynchronous destructor of the pointed-to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Creates a future from a value.","Consumes the Ready returning the wrapped value.","Polls multiple futures simultaneously returning a tuple …","Creates a future which never resolves representing a …","Attempt to resolve the future to a final value registering","Creates a future that wraps a function returning Poll.","Creates a future that is immediately ready with a value.","A trait for creating instances of Hasher.","Used to create a default BuildHasher instance for types …","The default Hasher used by RandomState.","A hashable type.","Derive macro generating an impl of the trait Hash.","A trait for hashing an arbitrary stream of bytes.","Type of the hasher that will be created.","RandomState is the default state for HashMap types.","An implementation of SipHash 2-4.","Creates a new hasher.","Returns the hash value for the values written so far.","Returns the argument unchanged.","Returns the argument unchanged.","Feeds this value into the given Hasher.","Calculates the hash of a single value.","Feeds a slice of this type into the given Hasher.","Calls U::from(self).","Calls U::from(self).","Creates a new BuildHasherDefault for Hasher H.","Creates a new SipHasher with the two initial keys set to 0.","Creates a SipHasher that is keyed off the provided keys.","Writes some data into this Hasher.","Writes a single i128 into this hasher.","Writes a single i16 into this hasher.","Writes a single i32 into this hasher.","Writes a single i64 into this hasher.","Writes a single i8 into this hasher.","Writes a single isize into this hasher.","Writes a length prefix into this hasher as part of being …","Writes a single str into this hasher.","Writes a single u128 into this hasher.","Writes a single u16 into this hasher.","Writes a single u32 into this hasher.","Writes a single u64 into this hasher.","Writes a single u8 into this hasher.","Writes a single usize into this hasher.","Makes a <em>soundness</em> promise to the compiler that cond holds.","An identity function that <em><strong>hints</strong></em> to the compiler to be …","An identity function that causes an unused_must_use …","Emits a machine instruction to signal the processor that …","Informs the compiler that the site which is calling this …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","Aborts the execution of the process.","Performs checked integer addition.","Lowers in MIR to Rvalue::Aggregate with …","Calculates the offset from a pointer potentially wrapping.","A guard for unsafe functions that cannot ever be executed …","A guard for std::mem::uninitialized. This will statically …","A guard for unsafe functions that cannot ever be executed …","Informs the optimizer that a condition is always true. If …","Bitwise and with the current value returning the previous …","Bitwise and with the current value returning the previous …","Bitwise and with the current value returning the previous …","Bitwise and with the current value returning the previous …","Bitwise and with the current value returning the previous …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","Stores a value if the current value is the same as the old …","An atomic fence.","An atomic fence.","An atomic fence.","An atomic fence.","Loads the current value of the pointer.","Loads the current value of the pointer.","Loads the current value of the pointer.","Do NOT use this intrinsic; “unordered” operations do …","Maximum with the current value using a signed comparison.","Maximum with the current value using a signed comparison.","Maximum with the current value.","Maximum with the current value using a signed comparison.","Maximum with the current value using a signed comparison.","Minimum with the current value using a signed comparison.","Minimum with the current value using a signed comparison.","Minimum with the current value using a signed comparison.","Minimum with the current value using a signed comparison.","Minimum with the current value using a signed comparison.","Bitwise nand with the current value returning the …","Bitwise nand with the current value returning the …","Bitwise nand with the current value returning the …","Bitwise nand with the current value returning the …","Bitwise nand with the current value returning the …","Bitwise or with the current value returning the previous …","Bitwise or with the current value returning the previous …","Bitwise or with the current value returning the previous …","Bitwise or with the current value returning the previous …","Bitwise or with the current value returning the previous …","A compiler-only memory barrier.","A compiler-only memory barrier.","A compiler-only memory barrier.","A compiler-only memory barrier.","Stores the value at the specified memory location.","Stores the value at the specified memory location.","Stores the value at the specified memory location.","Do NOT use this intrinsic; “unordered” operations do …","Maximum with the current value using an unsigned …","Maximum with the current value using an unsigned …","Maximum with the current value using an unsigned …","Maximum with the current value using an unsigned …","Maximum with the current value using an unsigned …","Minimum with the current value using an unsigned …","Minimum with the current value using an unsigned …","Minimum with the current value using an unsigned …","Minimum with the current value using an unsigned …","Minimum with the current value using an unsigned …","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Stores the value at the specified memory location …","Stores the value at the specified memory location …","Stores the value at the specified memory location …","Stores the value at the specified memory location …","Stores the value at the specified memory location …","Bitwise xor with the current value returning the previous …","Bitwise xor with the current value returning the previous …","Bitwise xor with the current value returning the previous …","Bitwise xor with the current value returning the previous …","Bitwise xor with the current value returning the previous …","Subtract from the current value returning the previous …","Subtract from the current value returning the previous …","Subtract from the current value returning the previous …","Subtract from the current value returning the previous …","Subtract from the current value returning the previous …","Reverses the bits in an integer type T.","See documentation of std::hint::black_box for details.","Executes a breakpoint trap for inspection by a debugger.","Reverses the bytes in an integer type T.","Gets a reference to a static Location indicating where it …","Rust’s “try catch” construct for unwinding. Invokes …","Returns the smallest integer greater than or equal to an …","Returns the smallest integer greater than or equal to an …","Lexicographically compare [left left + bytes) and …","Allocates a block of memory at compile time. At runtime …","Deallocates a memory which allocated by …","Selects which function to call depending on the context.","Copies count * size_of::&lt;T&gt;() bytes from src to dst. The …","Copies count * size_of::&lt;T&gt;() bytes from src to dst. The …","Copies the sign from y to x for f32 values.","Copies the sign from y to x for f64 values.","Returns the cosine of an f32.","Returns the cosine of an f64.","Returns the number of leading unset bits (zeroes) in an …","Like ctlz but extra-unsafe as it returns undef when given …","Returns the number of bits set in an integer type T","Returns the number of trailing unset bits (zeroes) in an …","Like cttz but extra-unsafe as it returns undef when given …","Returns the value of the discriminant for the variant in …","Performs an exact division resulting in undefined …","Returns 2 raised to the power of an f32.","Returns 2 raised to the power of an f64.","Returns the exponential of an f32.","Returns the exponential of an f64.","Returns the absolute value of an f32.","Returns the absolute value of an f64.","Float addition that allows optimizations based on …"],"2":["Float addition that allows optimizations based on …","Float division that allows optimizations based on …","Float division that allows optimizations based on …","Convert with LLVM’s fptoui/fptosi which may return …","Returns the largest integer less than or equal to an f32.","Returns the largest integer less than or equal to an f64.","Returns a * b + c for f32 values.","Returns a * b + c for f64 values.","Float multiplication that allows optimizations based on …","Float multiplication that allows optimizations based on …","Moves a value out of scope without running drop glue.","Float remainder that allows optimizations based on …","Float remainder that allows optimizations based on …","Float subtraction that allows optimizations based on …","Float subtraction that allows optimizations based on …","Returns whether the argument’s value is statically known …","Hints to the compiler that branch condition is likely to …","Returns the base 10 logarithm of an f32.","Returns the base 10 logarithm of an f64.","Returns the base 2 logarithm of an f32.","Returns the base 2 logarithm of an f64.","Returns the natural logarithm of an f32.","Returns the natural logarithm of an f64.","Returns the maximum of two f32 values.","Returns the maximum of two f64 values.","The minimum alignment of a type.","The required alignment of the referenced value.","Returns the minimum of two f32 values.","Returns the minimum of two f64 values.","Rustc internal tooling for hand-writing MIR.","Performs checked integer multiplication","Returns the nearest integer to an f32. Changing the …","Returns the nearest integer to an f64. Changing the …","Returns true if the actual type given as T requires drop …","Emits a !nontemporal store according to LLVM (see their …","Calculates the offset from a pointer.","Raises an f32 to an f32 power.","Raises an f64 to an f64 power.","Raises an f128 to an integer power.","Raises an f16 to an integer power.","Raises an f32 to an integer power.","Raises an f64 to an integer power.","The preferred alignment of a type.","The prefetch intrinsic is a hint to the code generator to …","The prefetch intrinsic is a hint to the code generator to …","The prefetch intrinsic is a hint to the code generator to …","The prefetch intrinsic is a hint to the code generator to …","See documentation of &lt;*const T&gt;::guaranteed_eq for details.","Masks out bits of the pointer according to a mask.","Lowers in MIR to Rvalue::UnaryOp with UnOp::PtrMetadata.","See documentation of &lt;*const T&gt;::offset_from for details.","See documentation of &lt;*const T&gt;::sub_ptr for details.","Determines whether the raw bytes of the two values are …","This is an implementation detail of crate::ptr::read and …","Returns the nearest integer to an f32. Changing the …","Returns the nearest integer to an f64. Changing the …","Performs rotate left.","Performs rotate right.","Returns the nearest integer to an f32. Rounds half-way …","Returns the nearest integer to an f64. Rounds half-way …","Returns the nearest integer to an f32. Rounds half-way …","Returns the nearest integer to an f64. Rounds half-way …","Magic intrinsic that derives its meaning from attributes …","Computes a + b saturating at numeric bounds.","Computes a - b saturating at numeric bounds.","SIMD compiler intrinsics.","Returns the sine of an f32.","Returns the sine of an f64.","The size of a type in bytes.","The size of the referenced value in bytes.","Returns the square root of an f32","Returns the square root of an f64","Performs checked integer subtraction","Does a three-way comparison between the two integer …","Reinterprets the bits of a value of one type as another …","Like transmute but even less checked at compile-time: …","Returns the integer part of an f32.","Returns the integer part of an f64.","Gets an identifier which is globally unique to the …","Gets a static string slice containing the name of a type.","Non-overlapping <em>typed</em> swap of a single value.","Returns whether we should perform some UB-checking at …","Performs a volatile load from the src pointer The pointer …","Performs a volatile store to the dst pointer. The pointer …","Returns the result of an unchecked addition resulting in …","Performs an unchecked division resulting in undefined …","Returns the result of an unchecked multiplication …","Returns the remainder of an unchecked division resulting …","Performs an unchecked left shift resulting in undefined …","Performs an unchecked right shift resulting in undefined …","Returns the result of an unchecked subtraction resulting …","Hints to the compiler that branch condition is likely to …","Informs the optimizer that this point in the code is not …","Returns the number of variants of the type T cast to a …","Equivalent to the appropriate llvm.memmove.p0i8.0i8.* …","Equivalent to the appropriate llvm.memcpy.p0i8.0i8.* …","Performs a volatile load from the src pointer.","Equivalent to the appropriate llvm.memset.p0i8.* …","Performs a volatile store to the dst pointer.","The intrinsic will return the alignment stored in that …","The intrinsic will return the size stored in that vtable.","Returns (a + b) mod 2N where N is the width of T in bits.","Returns (a * b) mod 2N where N is the width of T in bits.","Returns (a - b) mod 2N where N is the width of T in bits.","Sets count * size_of::&lt;T&gt;() bytes of memory starting at dst…","This is an implementation detail of crate::ptr::write and …","Unwinding is just not possible given the ABI of this …","Type representing basic blocks.","Call a function.","Emits a CastKind::PtrToPtr cast.","Emits a CastKind::Transmute cast.","A basic block that lies on an unwind path.","Gets the discriminant of a place.","Drop the contents of a place.","Access the field with the given index of some place.","We were already cleaning up for an ongoing unwind and a …","A non-cleanup basic block.","An unwind action that continues execution in a given basic …","An unwind action that continues unwinding.","A terminator that resumes the unwinding.","An unwind action that terminates the execution.","The reason we are terminating the process during unwinding.","An unwind action that triggers undefined behaviour.","Adds a variant projection with the given index to the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Macro for generating custom MIR.","Helper macro that allows you to treat a value expression …","Add two simd vectors elementwise.","Elementwise vector “and”.","Elementwise calculates the offset from a pointer vector …","Numerically cast a vector elementwise.","Truncate an integer vector to a bitmask.","Reverse bits of each element.","Swap bytes of each element.","Numerically cast a vector elementwise.","Cast a vector of pointers.","Round up each element to the next highest integer-valued …","Count the leading zeros of each element.","Count the number of ones in each element.","Count the trailing zeros of each element.","Divide lhs by rhs elementwise.","Tests elementwise equality of two vectors.","Expose a vector of pointers as a vector of addresses.","Extract an element from a vector.","Elementwise absolute value of a vector.","T must be a vector of floats.","T must be a vector of floats.","T must be a vector of floats.","T must be a vector of floats.","T must be a vector of floats.","T must be a vector of floats.","Round down each element to the next lowest integer-valued …","Computes (x*y) + z for each element but without any …","Elementwise maximum of two vectors.","Elementwise minimum of two vectors.","T must be a vector of floats.","Takes the square root of each element.","Read a vector of pointers.","Tests if x is greater than or equal to y elementwise.","Tests if x is greater than y elementwise.","Insert an element into a vector returning the updated …","Tests if x is less than or equal to y elementwise.","Tests if x is less than y elementwise.","Read a vector of pointers.","Write to a vector of pointers.","Multiply two simd vectors elementwise.","Tests elementwise inequality equality of two vectors.","Elementwise negation of a vector.","Elementwise vector “or”.","Add elements within a vector from left to right.","Add elements within a vector in arbitrary order. May also …","Check if all mask values are true.","Logical “and” all elements together.","Check if any mask value is true.","Return the maximum element of a vector.","Return the minimum element of a vector.","Multiply elements within a vector from left to right.","Multiply elements within a vector in arbitrary order. May …","Logical “or” all elements together.","Logical “exclusive or” all elements together.","Remainder of two vectors elementwise","Round each element to the closest integer-valued float. …","Add two simd vectors elementwise with saturation.","Subtract two simd vectors elementwise with saturation.","Write to a vector of pointers.","Select elements from a mask.","Select elements from a bitmask.","Elementwise vector left shift with UB on overflow.","Elementwise vector right shift with UB on overflow.","Shuffle two vectors by const indices.","Shuffle two vectors by const indices.","Subtract rhs from lhs elementwise.","Return the integer part of each element as an …","Create a vector of pointers from a vector of addresses.","Elementwise vector “exclusive or”.","A socket address could not be bound because the address is …","A nonexistent interface was requested or the requested …","An entity already exists often a file.","Program argument list too long.","A borrowed byte buffer which is incrementally filled and …","A writeable view of the unfilled portion of a BorrowedBuf.","The operation failed because a pipe was closed.","A BufRead is a type of Reader which has an internal …","The BufReader&lt;R&gt; struct adds buffering to any reader.","Wraps a writer and buffers its output.","An iterator over u8 values of a reader.","Adapter to chain together two readers.","The connection was aborted (terminated) by the remote …","The connection was refused by the remote server.","The connection was reset by the remote server.","Cross-device or cross-filesystem (hard) link or rename.","Sets the offset to the current position plus the specified …","A Cursor wraps an in-memory buffer and provides it with a …","Deadlock (avoided).","A non-empty directory was specified where an empty …","Empty ignores any data written via Write and will always …","Sets the offset to the size of this object plus the …","Contains the error value","The error type for I/O operations of the Read Write Seek…","A list specifying general categories of I/O error.","Executable file is busy.","File larger than allowed or supported.","Loop in the filesystem or IO subsystem; often too many …","Filesystem quota was exceeded.","The remote host is not reachable.","This operation was interrupted.","An error returned by BufWriter::into_inner which combines …","Data not valid for the operation were encountered.","A filename was invalid.","A parameter was incorrect.","A buffer type used with Write::write_vectored.","A buffer type used with Read::read_vectored.","The filesystem object is unexpectedly a directory.","Trait to determine if a descriptor/handle refers to a …","Wraps a writer and buffers output to it flushing whenever …","An iterator over the lines of an instance of BufRead.","The system’s networking is down.","The network containing the remote host is not reachable.","A filesystem object is unexpectedly not a directory.","The network operation failed because it was not connected …","An entity was not found often a file.","Seek on unseekable file.","Contains the success value","A custom error that does not fall under any other I/O …","An operation could not be completed because it failed to …","The operation lacked the necessary privileges to complete.","The type of raw OS error codes returned by …","The Read trait allows for reading bytes from a source.","The filesystem or storage medium is read-only but a write …","A reader which yields one byte over and over and over and …","Resource is busy.","A specialized Result type for I/O operations.","The Seek trait provides a cursor which can be moved within …","Enumeration of possible methods to seek within an I/O …","A writer which will move data into the void.","An iterator over the contents of an instance of BufRead …","Stale network file handle.","Sets the offset to the provided number of bytes.","A handle to the standard error stream of a process.","A locked reference to the Stderr handle.","A handle to the standard input stream of a process.","A locked reference to the Stdin handle.","A handle to the global standard output stream of the …","A locked reference to the Stdout handle.","The underlying storage (typically a filesystem) is full.","Reader adapter which limits the bytes read from an …","The I/O operation’s timeout expired causing it to be …","Too many (hard) links to the same filesystem object.","An error returned when an operation could not be completed …","This operation is unsupported on this platform.","The operation needs to block to complete but the blocking …","A trait for objects which are byte-oriented sinks.","An error returned when an operation could not be completed …","Error returned for the buffered data from …","Advance the internal cursor of the slice.","Advance the internal cursor of the slice.","Advance the cursor by asserting that n bytes have been …","Advance a slice of slices.","Advance a slice of slices.","Advance the cursor by asserting that n bytes have been …","Appends data to the cursor advancing position within its …","Returns a mutable reference to the whole cursor.","Returns a reference to the internally buffered data.","Returns a reference to the internally buffered data.","Creates a “by reference” adaptor for this instance of …","Creates a “by reference” adapter for this instance of …","Transforms this Read instance to an Iterator over its …","Returns the number of bytes the internal buffer can hold …","Returns the number of bytes the internal buffer can hold …","Returns the total capacity of the buffer.","Returns the available space in the cursor.","Creates an adapter which will chain this stream with …","Clears the buffer resetting the filled region to empty.","Tells this buffer that amt bytes have been consumed from …","Copies the entire contents of a reader into a writer.","Attempt to downcast the custom boxed error to E.","Creates a value that is always at EOF for reads and …","Initializes all bytes in the cursor.","Returns the error which caused the call to …","Returns the contents of the internal buffer filling it …","Returns a shared reference to the filled portion of the …","Returns a mutable reference to the filled portion of the …","Flush this output stream ensuring that all intermediately …","Shows a human-readable description of the ErrorKind.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a alloc::ffi::NulError into a Error.","Converts an ErrorKind into an Error.","Converts TryReserveError to an error with …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new instance of an Error from a particular OS …","Gets a mutable reference to the underlying reader.","Gets a mutable reference to the underlying writer.","Gets a mutable reference to the underlying writer.","Returns a mutable reference to the inner error wrapped by …","Gets a mutable reference to the underlying value in this …","Gets mutable references to the underlying readers in this …","Gets a mutable reference to the underlying reader.","Gets a reference to the underlying reader.","Gets a reference to the underlying writer.","Gets a reference to the underlying writer.","Returns a reference to the inner error wrapped by this …","Gets a reference to the underlying value in this cursor.","Gets references to the underlying readers in this Chain.","Gets a reference to the underlying reader.","Check if the underlying Read has any data left to be read.","Returns the length of the initialized part of the buffer.","Returns a mutable reference to the initialized portion of …","Returns a shared reference to the initialized portion of …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Consumes the IntoInnerError and returns the error which …","Unwraps this BufReader&lt;R&gt; returning the underlying reader.","Unwraps this BufWriter&lt;W&gt; returning the underlying writer.","Returns the perhaps-unwritten data.  Some of this data may …","Unwraps this LineWriter returning the underlying writer.","Consumes the Error returning its inner error (if any).","Returns the buffered writer instance which generated the …","Consumes this cursor returning the underlying value.","Consumes the Chain returning the wrapped readers.","Consumes the Take returning the wrapped reader.","Disassembles this BufWriter&lt;W&gt; returning the underlying …","Consumes the IntoInnerError and returns the error which …","Returns true if the remaining slice is empty.","Determines if this Reader has an efficient read_vectored …","Returns true if the descriptor/handle refers to a …","Determines if this Writer has an efficient write_vectored …","Returns the corresponding ErrorKind for this error.","Returns an error representing the last OS error which …","Returns the length of the filled part of the buffer.","Returns the number of bytes that can be read before this …","Consumes this handle and returns an iterator over input …","Returns an iterator over the lines of this reader.","Locks this handle to the standard input stream returning …","Locks this handle to the standard output stream returning …","Locks this handle to the standard error stream returning …","Creates a new BufReader&lt;R&gt; with a default buffer capacity. …","Creates a new BufWriter&lt;W&gt; with a default buffer capacity. …","Creates a new LineWriter.","Creates a new I/O error from a known kind of error as well …","Creates a new IoSliceMut wrapping a byte slice.","Creates a new cursor wrapping the provided underlying …","Creates a new IoSlice wrapping a byte slice.","Creates a new I/O error from an arbitrary error payload.","Returns the current position of this cursor.","The I/O Prelude.","Returns the OS error that this error represents (if any).","Pull some bytes from this source into the specified …","Pull some bytes from this source into the specified buffer.","Read the exact number of bytes required to fill cursor.","Read the exact number of bytes required to fill buf.","Locks this handle and reads a line of input appending it …","Read all bytes until a newline (the 0xA byte) is reached …","This function is not supported by io::Repeat because there…","Read all bytes until EOF in this source placing them into …","Read all bytes from a reader into a new String.","This function is not supported by io::Repeat because there…","Read all bytes until EOF in this source appending them to …","Read all bytes into buf until the delimiter byte or EOF is …","Like read except that it reads into a slice of buffers.","Reborrow this cursor by cloning it with a smaller lifetime.","Returns the remaining slice.","Creates an instance of a reader that infinitely repeats …","Rewind to the beginning of a stream.","Seek to an offset in bytes in a stream.","Seek to an offset in bytes in the underlying reader.","Seek to the offset in bytes in the underlying writer.","Seeks relative to the current position. If the new …","Seeks relative to the current position.","Seeks relative to the current position.","Asserts that the first n bytes of the buffer are …","Asserts that the first n unfilled bytes of the cursor are …","Sets the number of bytes that can be read before this …","Sets the position of this cursor.","Creates an instance of a writer which will successfully …","Skip all bytes until the delimiter byte or EOF is reached.","Returns an iterator over the contents of this reader split …","Constructs a new handle to the standard error of the …","Constructs a new handle to the standard input of the …","Constructs a new handle to the standard output of the …","Returns the length of this stream (in bytes).","Returns the current seek position from the start of the …","Returns the current seek position from the start of the …","Creates an adapter which will read at most limit bytes …","Returns a cursor over the unfilled part of the buffer.","Returns a mutable reference to the uninitialized part of …","Creates a new BufReader&lt;R&gt; with the specified buffer …","Creates a new BufWriter&lt;W&gt; with at least the specified …","Creates a new LineWriter with at least the specified …","Write a buffer into this writer returning how many bytes …","Attempts to write an entire buffer into this writer.","Attempts to write multiple buffers into this writer.","Writes a formatted string into this writer returning any …","Like write except that it writes from a slice of buffers.","Returns the number of bytes written to this cursor since …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","An iterator over N elements of the iterator at a time.","Like Iterator::by_ref but requiring Sized so it can …","An iterator that links two iterators together in a chain.","An iterator that clones the elements of an underlying …","An iterator that copies the elements of an underlying …","An iterator that repeats endlessly.","An iterator able to yield elements from both ends.","An iterator that yields nothing.","An iterator that yields the current count and the element …","An iterator that knows its exact length.","Extend a collection with the contents of an iterator.","An iterator that filters the elements of iter with …","An iterator that uses f to both filter and map elements …","An iterator that maps each element to an iterator and …","An iterator that flattens one level of nesting in an …","An iterator where each iteration calls the provided …","Conversion from an Iterator.","An iterator that yields None forever after the underlying …","An iterator that always continues to yield None when …","An iterator that calls a function with a reference to each …","An iterator adapter that places a separator between all …","An iterator adapter that places a separator between all …","Which kind of iterator are we turning this into?","Conversion into an Iterator.","The type of the elements being iterated over.","The type of the elements being iterated over.","A trait for dealing with iterators.","An iterator that maps the values of iter with f.","An iterator that only accepts elements while predicate …","An iterator over the mapped windows of another iterator.","An iterator that yields an element exactly once.","An iterator that yields a single element of type A by …","An iterator with a peek() that returns an optional …","Trait to represent types that can be created by …","An iterator that repeats an element endlessly.","An iterator that repeats an element an exact number of …","An iterator that repeats elements of type A endlessly by …","A double-ended iterator with the direction inverted.","An iterator to maintain state while iterating another …","An iterator that skips over n elements of iter.","An iterator that rejects elements while predicate returns …","Objects that have a notion of <em>successor</em> and <em>predecessor</em> …","An iterator for stepping iterators by a custom amount.","A new iterator where each successive item is computed …","Trait to represent types that can be created by summing up …","An iterator that only iterates over the first n iterations …","An iterator that only accepts elements while predicate …","An iterator that reports an accurate length using …","A type that upholds all invariants of Step.","An iterator that iterates two other iterators …","Advances the iterator from the back by n elements.","Advances the iterator by n elements.","Tests if every element of the iterator matches a predicate.","Tests if any element of the iterator matches a predicate.","Returns an iterator over N elements of the iterator at a …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Borrows an iterator rather than consuming it.","Converts the arguments to iterators and links them …","Takes two iterators and creates a new iterator over both …","Creates an iterator which clones all of its elements.","Lexicographically compares the elements of this Iterator …","Lexicographically compares the elements of this Iterator …","Transforms an iterator into a collection.","Collects all the items from an iterator into a collection.","Creates an iterator which copies all of its elements.","Consumes the iterator counting the number of iterations …","Repeats an iterator endlessly.","Creates a Flatten iterator from the default value of I.","Creates a Chain from the default values for A and B.","Creates a Cloned iterator from the default value of I","Creates a Copied iterator from the default value of I","Creates an Enumerate iterator from the default value of I","Creates a Fuse iterator from the default value of I.","Creates a Rev iterator from the default value of I","Creates an iterator that yields nothing.","Creates an iterator which gives the current iteration …","Determines if the elements of this Iterator are equal to …","Determines if the elements of this Iterator are equal to …","Extends a collection with the contents of an iterator.","Extends a collection with exactly one element.","Reserves capacity in a collection for the given number of …","Creates an iterator which uses a closure to determine if …","Creates an iterator that both filters and maps.","Searches for an element of an iterator that satisfies a …","Applies function to the elements of iterator and returns …","Creates an iterator that works like map but flattens …","Creates an iterator that flattens nested structure.","Folds every element into an accumulator by applying an …","Calls a closure on each element of an iterator.","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the value that would be obtained by taking the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new iterator where each iteration calls the …","Creates a new iterator where each iteration calls the …","Creates a value from an iterator.","Creates an iterator which ends after the first None.","Determines if the elements of this Iterator are …","Determines if the elements of this Iterator are …","Does something with each element of an iterator passing …","Creates a new iterator which places a copy of separator …","Creates a new iterator which places an item generated by …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Creates an iterator from a value.","Returns an iterator over the remaining elements of the …","Returns true if the iterator is empty.","Checks if the elements of this iterator are partitioned …","Checks if the elements of this iterator are sorted.","Checks if the elements of this iterator are sorted using …","Checks if the elements of this iterator are sorted using …","Consumes the iterator returning the last element.","Determines if the elements of this Iterator are …","Returns the exact remaining length of the iterator.","Determines if the elements of this Iterator are …","Takes a closure and creates an iterator which calls that …","Creates an iterator that both yields elements based on a …","Calls the given function f for each contiguous window of …","Returns the maximum element of an iterator.","Returns the element that gives the maximum value with …","Returns the element that gives the maximum value from the …","Returns the minimum element of an iterator.","Returns the element that gives the minimum value with …","Returns the element that gives the minimum value from the …","Determines if the elements of this Iterator are not equal …","Advances the iterator and returns the next value.","Overflow Behavior","Removes and returns an element from the end of the …","Advances the iterator and returns an array containing the …","Consume and return the next value of this iterator if a …","Consume and return the next item if it is equal to expected…","Returns the nth element of the iterator.","Returns the nth element from the end of the iterator.","Creates an iterator that yields an element exactly once.","Creates an iterator that lazily generates a value exactly …","Lexicographically compares the PartialOrd elements of this …","Lexicographically compares the elements of this Iterator …","Consumes an iterator creating two collections from it.","Reorders the elements of this iterator <em>in-place</em> according …","Returns a reference to the next() value without advancing …","Returns a mutable reference to the next() value without …","Creates an iterator which can use the peek and peek_mut …","Searches for an element in an iterator returning its …","Method which takes an iterator and generates Self from the …","Iterates over the entire iterator multiplying all the …","Reduces the elements to a single one by repeatedly …","Creates a new iterator that endlessly repeats a single …","Creates a new iterator that repeats a single element a …","Creates a new iterator that repeats elements of type A …","Reverses an iterator’s direction.","Searches for an element of an iterator from the back that …","An iterator method that reduces the iterator’s elements …","Searches for an element in an iterator from the right …","An iterator adapter which like fold holds internal …","Returns the bounds on the remaining length of the iterator.","Creates an iterator that skips the first n elements.","Creates an iterator that skips elements based on a …","Creates an iterator starting at the same point but …","Returns the number of <em>successor</em> steps required to get from …","Creates a new iterator where each successive item is …","Method which takes an iterator and generates Self from the …","Sums the elements of an iterator.","Creates an iterator that yields the first n elements or …","Creates an iterator that yields elements based on a …","Fallibly transforms an iterator into a collection short …","Applies function to the elements of iterator and returns …","An iterator method that applies a function as long as it …","An iterator method that applies a fallible function to …","Reduces the elements to a single one by repeatedly …","This is the reverse version of Iterator::try_fold(): it …","Converts an iterator of pairs into a pair of containers.","Converts the arguments to iterators and zips them.","‘Zips up’ two iterators into a single iterator of …","A marker for types which can be used as types of const …","Derive macro generating an impl of the trait ConstParamTy.","Types whose values can be duplicated simply by copying …","Derive macro generating an impl of the trait Copy.","A marker for types that can be dropped.","The type of the discriminant which must satisfy the trait …","Compiler-internal trait used to indicate the type of enum …","A common trait implemented by all function pointers.","Used to determine whether a type contains any UnsafeCell …","Zero-sized type used to mark things that “act like” …","A marker type which does not implement Unpin.","A marker for pointer-like types.","Types that can be transferred across thread boundaries.","Types with a constant size known at compile time.","Derive macro generating impls of traits related to smart …","Required trait for constants used in pattern matches.","Types for which it is safe to share references between …","A marker for tuple types.","Types that do not require any pinning guarantees.","Types that can be “unsized” to a dynamically-sized …","Returns the address of the function pointer.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Assume only that alignment conditions are met.","What transmutation safety conditions shall the compiler …","Are values of a type transmutable into values of another …","Opaque type representing the discriminant of an enum.","Assume only that lifetime conditions are met.","A wrapper to inhibit the compiler from automatically …","A wrapper type to construct uninitialized instances of T.","Do not assume that <em>you</em> have ensured any safety properties …","Assume only that safety conditions are met.","Assume only that dynamically-satisfiable validity …","Returns the ABI-required minimum alignment of a type in …","Returns the ABI-required minimum alignment of the type of …","Returns the ABI-required minimum alignment of the type of …","When true the compiler assumes that <em>you</em> are ensuring …","Assume both self and other_assumptions.","Extracts the values from an array of MaybeUninit …","Returns the contents of this MaybeUninit as a slice of …","Returns the contents of this MaybeUninit as a mutable …","Gets a mutable pointer to the contained value. Reading …","Gets a pointer to the contained value. Reading from this …","Extracts the value from the MaybeUninit&lt;T&gt; container. This …","Drops the contained value in place.","Gets a mutable (unique) reference to the contained value.","Reads the value from the MaybeUninit&lt;T&gt; container. The …","Gets a shared reference to the contained value.","Assume self excepting other_assumptions.","Clones the elements from src to this returning a mutable …","Bitwise-copies a value.","Copies the elements from src to this returning a mutable …","Returns a value uniquely identifying the enum variant in v.","Disposes of a value.","Manually drops the contained value. This is exactly …","Fills this with elements by cloning value returning a …","Fills this with elements yielded by an iterator until …","Fills this with elements returned by calling a closure …","Takes ownership and “forgets” about the value <strong>without </strong>…","Like forget but also accepts unsized values.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Extracts the value from the ManuallyDrop container.","When true the compiler assume that <em>you</em> are ensuring that …","Returns the ABI-required minimum alignment of a type in …","Returns the ABI-required minimum alignment of the type of …","Returns true if dropping values of type T matters.","Wrap a value to be manually dropped.","Creates a new MaybeUninit&lt;T&gt; initialized with the given …","Expands to the offset in bytes of a field from the …","Moves src into the referenced dest returning the previous …","When true the compiler assumes that <em>you</em> have ensured that …","Returns the size of a type in bytes.","Returns the size of the pointed-to value in bytes.","Returns the size of the pointed-to value in bytes.","Returns the contents of this slice of MaybeUninit as a …","Returns the contents of this mutable slice of MaybeUninit …","Gets a mutable pointer to the first element of the array.","Gets a pointer to the first element of the array.","Assuming all the elements are initialized get a mutable …","Assuming all the elements are initialized get a slice to …","Swaps the values at two mutable locations without …","Replaces dest with the default value of T returning the …","Takes the value from the ManuallyDrop&lt;T&gt; container out.","Reinterprets the bits of a value of one type as another …","Interprets src as having type &amp;Dst and then reads src …","Transposes a MaybeUninit&lt;[T; N]&gt; into a [MaybeUninit&lt;T&gt;; N]…","Creates a new MaybeUninit&lt;T&gt; in an uninitialized state.","Create a new array of MaybeUninit&lt;T&gt; items in an …","Bypasses Rust’s normal memory-initialization checks by …","When true the compiler assumes that <em>you</em> are ensuring that …","Returns the number of variants in the enum type T.","Sets the value of the MaybeUninit&lt;T&gt;.","Returns the value of type T represented by the all-zero …","Creates a new MaybeUninit&lt;T&gt; in an uninitialized state …","An error which can be returned when parsing an IP address …","Admin-Local scope.","The size of an IPv4 address in bits.","The size of an IPv6 address in bits.","An IPv4 address representing the broadcast address: …","Both the reading and the writing portions of the TcpStream …","Global scope.","An iterator that infinitely accepts connections on a …","Interface-Local scope.","An iterator that infinitely accepts connections on a …","An IP address either IPv4 or IPv6.","An IPv4 address.","An IPv6 address.","Scope of an IPv6 multicast address as defined in IETF RFC …","Returned iterator over socket addresses which this type …","An IPv4 address with the address pointing to localhost: …","An IPv6 address representing localhost: ::1.","Link-Local scope.","Organization-Local scope.","The reading portion of the TcpStream should be shut down.","Realm-Local scope.","Possible values which can be passed to the …","Site-Local scope.","An internet socket address either IPv4 or IPv6.","An IPv4 socket address.","An IPv6 socket address.","A TCP socket server listening for connections.","A TCP stream between a local and a remote socket.","A trait for objects which can be converted or resolved to …","An IPv4 address representing an unspecified address: …","An IPv6 address representing the unspecified address: ::","A UDP socket.","An IPv4 address.","An IPv4 socket address.","An IPv6 address.","An IPv6 socket address.","The writing portion of the TcpStream should be shut down.","Accept a new incoming connection from this listener.","Creates a new TcpListener which will be bound to the …","Creates a UDP socket from the given address.","Gets the value of the SO_BROADCAST option for this socket.","Opens a TCP connection to a remote host.","Connects this UDP socket to a remote address allowing the …","Opens a TCP connection to a remote host with a timeout.","Returns the flow information associated with this address.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an IpAddr::V6 from a sixteen element byte array.","Creates an IpAddr::V4 from a four element byte array.","Copies this address to a new IpAddr::V6.","Creates an IpAddr::V6 from an eight element 16-bit array.","Returns the argument unchanged.","Copies this address to a new IpAddr::V4.","Uses Ipv4Addr::from_bits to convert a host byte order u32 …","Returns the argument unchanged.","Creates an Ipv4Addr from a four element byte array.","Creates an Ipv6Addr from a sixteen element byte array.","Uses Ipv6Addr::from_bits to convert a host byte order u128 …","Creates an Ipv6Addr from an eight element 16-bit array.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a SocketAddrV4 into a SocketAddr::V4.","Returns the argument unchanged.","Converts a tuple struct (Into&lt;IpAddr&gt; u16) into a …","Converts a SocketAddrV6 into a SocketAddr::V6.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a native byte order u32 into an IPv4 address.","Converts a native byte order u128 into an IPv6 address.","Returns an iterator over the connections being received on …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Turn this into an iterator over the connections being …","Returns the IP address associated with this socket address.","Returns the IP address associated with this socket address.","Returns the IP address associated with this socket address.","Returns true if this address is in a range designated for …","Returns true if this address part of the 198.18.0.0/15 …","Returns true if this is an address reserved for …","Returns true if this is a broadcast address (…","Returns true if this address is in a range designated for …","Returns true if this address is in a range designated for …","Returns true if this is an address reserved for …","Returns true if the address appears to be globally …","Returns true if the address appears to be globally …","Returns true if the address appears to be globally …","Returns true if this address is an IPv4 address and false …","Returns true if the IP address in this SocketAddr is an …","Returns true if the address is an IPv4-mapped address (…","Returns true if this address is an IPv6 address and false …","Returns true if the IP address in this SocketAddr is an …","Returns true if the address is link-local (169.254.0.0/16).","Returns true if this is a loopback address.","Returns true if this is a loopback address (127.0.0.0/8).","Returns true if this is the loopback address (::1) as …","Returns true if this is a multicast address.","Returns true if this is a multicast address (224.0.0.0/4).","Returns true if this is a multicast address (ff00::/8).","Returns true if this is a private address.","Returns true if this address is reserved by IANA for …","Returns true if this address is part of the Shared Address …","Returns true if this is a unicast address as defined by …","Returns true if the address is a globally routable unicast …","Returns true if the address is a unicast address with …","Returns true if this is a unique local address (fc00::/7).","Returns true for the special ‘unspecified’ address.","Returns true for the special ‘unspecified’ address (…","Returns true for the special ‘unspecified’ address (::…","Executes an operation of the IP_ADD_MEMBERSHIP type.","Executes an operation of the IPV6_ADD_MEMBERSHIP type.","Executes an operation of the IP_DROP_MEMBERSHIP type.","Executes an operation of the IPV6_DROP_MEMBERSHIP type.","Gets the value of the SO_LINGER option on this socket.","Returns the socket address of the local half of this TCP …","Returns the local socket address of this listener.","Returns the socket address that this socket was created …","Gets the value of the IP_MULTICAST_LOOP option for this …","Gets the value of the IPV6_MULTICAST_LOOP option for this …","Returns the address’s multicast scope if the address is …","Gets the value of the IP_MULTICAST_TTL option for this …","Creates a new IPv4 address from four eight-bit octets.","Creates a new IPv6 address from eight 16-bit segments.","Creates a new socket address from an IP address and a port …","Creates a new socket address from an IPv4 address and a …","Creates a new socket address from an IPv6 address a …","Gets the value of the TCP_NODELAY option on this socket.","Returns the four eight-bit integers that make up this …","Returns the sixteen eight-bit integers the IPv6 address …","Parse an IP address from a slice of bytes.","Parse an IPv4 address from a slice of bytes.","Parse an IPv6 address from a slice of bytes.","Parse a socket address from a slice of bytes.","Parse an IPv4 socket address from a slice of bytes.","Parse an IPv6 socket address from a slice of bytes.","Receives data on the socket from the remote address to …","Receives single datagram on the socket from the remote …","Receives a single datagram message on the socket without …","Returns the socket address of the remote peer of this TCP …","Returns the socket address of the remote peer this socket …","Returns the port number associated with this socket …","Returns the port number associated with this socket …","Returns the port number associated with this socket …","Returns the read timeout of this socket.","Returns the read timeout of this socket.","Receives a single datagram message on the socket from the …","Receives a single datagram message on the socket. On …","Returns the scope ID associated with this address.","Returns the eight 16-bit segments that make up this …","Sends data on the socket to the remote address to which it …","Sends data on the socket to the given address. On success …","Sets the value of the SO_BROADCAST option for this socket.","Changes the flow information associated with this socket …","Changes the IP address associated with this socket address.","Changes the IP address associated with this socket address.","Changes the IP address associated with this socket address.","Sets the value of the SO_LINGER option on this socket.","Sets the value of the IP_MULTICAST_LOOP option for this …","Sets the value of the IPV6_MULTICAST_LOOP option for this …","Sets the value of the IP_MULTICAST_TTL option for this …","Sets the value of the TCP_NODELAY option on this socket.","Moves this TCP stream into or out of nonblocking mode.","Moves this TCP stream into or out of nonblocking mode.","Moves this UDP socket into or out of nonblocking mode.","Changes the port number associated with this socket …","Changes the port number associated with this socket …","Changes the port number associated with this socket …","Sets the read timeout to the timeout specified.","Sets the read timeout to the timeout specified.","Changes the scope ID associated with this socket address.","Sets the value for the IP_TTL option on this socket.","Sets the value for the IP_TTL option on this socket.","Sets the value for the IP_TTL option on this socket.","Sets the write timeout to the timeout specified.","Sets the write timeout to the timeout specified.","Shuts down the read write or both halves of this …","Gets the value of the SO_ERROR option on this socket.","Gets the value of the SO_ERROR option on this socket.","Gets the value of the SO_ERROR option on this socket.","Converts an IPv4 address into a u32 representation using …","Converts an IPv6 address into a u128 representation using …","Converts this address to an IpAddr::V4 if it is an …","Converts this address to an IpAddr::V4 if it is an …","Converts this address to an IPv4 address if it is either …","Converts this address to an IPv4 address if it’s an …","Converts this address to an IPv4-compatible IPv6 address.","Converts this address to an IPv4-mapped IPv6 address.","Converts this object to an iterator of resolved SocketAddr…","Creates a new independently owned handle to the underlying …","Creates a new independently owned handle to the underlying …","Creates a new independently owned handle to the underlying …","Gets the value of the IP_TTL option for this socket.","Gets the value of the IP_TTL option for this socket.","Gets the value of the IP_TTL option for this socket.","Returns the write timeout of this socket.","Returns the write timeout of this socket.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","The size of this non-zero integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Returns the size of this integer type in bits.","Value being parsed is empty.","A classification of floating point numbers.","Positive or negative infinity which often results from …","Enum to store the various types of errors that can cause …","Contains an invalid digit in its context.","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","The largest value that can be represented by this non-zero …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","Returns the largest value that can be represented by this …","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","The smallest value that can be represented by this non-zero","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","Returns the smallest value that can be represented by this …","NaN (not a number): this value results from calculations …","Integer is too small to store in target integer type.","A value that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","An integer that is known not to equal zero.","A regular floating point number not any of the …","An error which can be returned when parsing a float.","An error which can be returned when parsing an integer.","Integer is too large to store in target integer type.","Provides intentionally-saturating arithmetic on T.","“Subnormal” or “denormal” floating point …","The error type returned when a checked integral type …","Provides intentionally-wrapped arithmetic on T.","Value was Zero","Positive or negative zero.","A marker trait for primitive types which can be zero.","Computes the absolute value of self. See i8::abs for …","Computes the absolute value of self. See i16::abs for …","Computes the absolute value of self. See i128::abs for …","Computes the absolute value of self. See i32::abs for …","Computes the absolute value of self. See isize::abs for …","Computes the absolute value of self. See i64::abs for …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Saturating absolute value. Computes self.abs() returning …","Computes the absolute value of self wrapping around at …","Computes the absolute value of self wrapping around at …","Computes the absolute value of self wrapping around at …","Computes the absolute value of self wrapping around at …","Computes the absolute value of self wrapping around at …","Computes the absolute value of self wrapping around at …","Checked absolute value. Checks for overflow and returns …","Checked absolute value. Checks for overflow and returns …","Checked absolute value. Checks for overflow and returns …","Checked absolute value. Checks for overflow and returns …","Checked absolute value. Checks for overflow and returns …","Checked absolute value. Checks for overflow and returns …","Adds an unsigned integer to a non-zero value. Checks for …","Adds an unsigned integer to a non-zero value. Checks for …","Adds an unsigned integer to a non-zero value. Checks for …","Adds an unsigned integer to a non-zero value. Checks for …","Adds an unsigned integer to a non-zero value. Checks for …","Adds an unsigned integer to a non-zero value. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Multiplies two non-zero integers together. Checks for …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Checked negation. Computes -self returning None if …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Raises non-zero value to an integer power. Checks for …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of zeros in the binary representation …","Converts NonZero&lt;i8&gt; to NonZero&lt;i32&gt; losslessly.","Converts NonZero&lt;u32&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;u64&gt; losslessly.","Converts NonZero&lt;i8&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;i16&gt; to NonZero&lt;i32&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;u64&gt; losslessly.","Converts NonZero&lt;u64&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;usize&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;u16&gt; losslessly.","Converts NonZero&lt;i16&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;i16&gt; to NonZero&lt;isize&gt; losslessly.","Converts NonZero&lt;i32&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;i32&gt; losslessly.","Converts NonZero&lt;i8&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;usize&gt; losslessly.","Converts NonZero&lt;i16&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;i32&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;i16&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;u128&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;u128&gt; losslessly.","Converts NonZero&lt;i8&gt; to NonZero&lt;i16&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;u8&gt; to NonZero&lt;u32&gt; losslessly.","Converts NonZero&lt;u64&gt; to NonZero&lt;u128&gt; losslessly.","Converts NonZero&lt;u32&gt; to NonZero&lt;i128&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;u32&gt; losslessly.","Converts NonZero&lt;i64&gt; to NonZero&lt;i128&gt; losslessly.","Returns the argument unchanged.","Converts NonZero&lt;u8&gt; to NonZero&lt;isize&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;i32&gt; losslessly.","Converts NonZero&lt;u16&gt; to NonZero&lt;i64&gt; losslessly.","Converts NonZero&lt;u32&gt; to NonZero&lt;u128&gt; losslessly.","Converts NonZero&lt;u32&gt; to NonZero&lt;u64&gt; losslessly.","Converts NonZero&lt;i8&gt; to NonZero&lt;isize&gt; losslessly.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from big endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts an integer from little endian to the target’s …","Converts a reference to a non-zero mutable reference if …","Converts a mutable reference to a non-zero mutable …","Returns the contained value as a primitive type.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 10 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Returns the base 2 logarithm of the number rounded down.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is negative and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if self is positive and false if the number …","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == (1 &lt;&lt; k) for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns true if and only if self == 2^k for some k.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Returns the square root of the number rounded down.","Outputs the detailed cause of parsing an integer failing.","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Calculates the middle point of self and rhs.","Creates a non-zero if the given value is not zero.","Creates a non-zero without checking whether the value is …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Returns the smallest power of two greater than or equal to …","Computes the absolute value of self with overflow …","Computes the absolute value of self with overflow …","Computes the absolute value of self with overflow …","Computes the absolute value of self with overflow …","Computes the absolute value of self with overflow …","Computes the absolute value of self with overflow …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Negates self overflowing if this is equal to the minimum …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Raises self to the power of exp using exponentiation by …","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Reverses the bit pattern of the integer.","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the left by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Shifts the bits to the right by a specified amount n …","Saturating absolute value see isize::saturating_abs.","Saturating absolute value see i32::saturating_abs.","Saturating absolute value see i128::saturating_abs.","Saturating absolute value see i16::saturating_abs.","Saturating absolute value see i8::saturating_abs.","Saturating absolute value see i64::saturating_abs.","Adds an unsigned integer to a non-zero value. Return …","Adds an unsigned integer to a non-zero value. Return …","Adds an unsigned integer to a non-zero value. Return …","Adds an unsigned integer to a non-zero value. Return …","Adds an unsigned integer to a non-zero value. Return …","Adds an unsigned integer to a non-zero value. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Multiplies two non-zero integers together. Return …","Saturating negation. Computes -self returning …","Saturating negation. Computes -self returning …","Saturating negation. Computes -self returning …","Saturating negation. Computes -self returning …","Saturating negation. Computes -self returning …","Saturating negation. Computes -self returning …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Raise non-zero value to an integer power. Return …","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Returns a number representing sign of self.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Reverses the byte order of the integer.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to big endian from the target’s endianness.","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Converts self to little endian from the target’s …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;u16&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;u8&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;u16&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;u8&gt;.","Attempts to convert u64 to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;u16&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;u64&gt;.","Attempts to convert u128 to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i64&gt;.","Attempts to convert usize to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;u128&gt;.","Attempts to convert u16 to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;i64&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u32&gt;.","Attempts to convert u8 to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;u64&gt;.","Attempts to convert i8 to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;i8&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;i128&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i64&gt;.","Attempts to convert i128 to NonZero&lt;i128&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;u16&gt;.","Attempts to convert u32 to NonZero&lt;u32&gt;.","Attempts to convert i16 to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;usize&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u16&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;u64&gt;.","Attempts to convert NonZero&lt;u32&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;i64&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;u16&gt;.","Attempts to convert i32 to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;i16&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;isize&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i128&gt;.","Attempts to convert NonZero&lt;isize&gt; to NonZero&lt;i128&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;u128&gt;.","Attempts to convert NonZero&lt;i16&gt; to NonZero&lt;u64&gt;.","Attempts to convert isize to NonZero&lt;isize&gt;.","Attempts to convert i64 to NonZero&lt;i64&gt;.","Attempts to convert NonZero&lt;u16&gt; to NonZero&lt;i8&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;i128&gt;.","Attempts to convert NonZero&lt;i32&gt; to NonZero&lt;u32&gt;.","Attempts to convert NonZero&lt;u64&gt; to NonZero&lt;u8&gt;.","Attempts to convert NonZero&lt;i64&gt; to NonZero&lt;i32&gt;.","Attempts to convert NonZero&lt;u128&gt; to NonZero&lt;i64&gt;.","Attempts to convert NonZero&lt;usize&gt; to NonZero&lt;i8&gt;.","Adds an unsigned integer to a non-zero value assuming …","Adds an unsigned integer to a non-zero value assuming …","Adds an unsigned integer to a non-zero value assuming …","Adds an unsigned integer to a non-zero value assuming …","Adds an unsigned integer to a non-zero value assuming …","Adds an unsigned integer to a non-zero value assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Multiplies two non-zero integers together assuming …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Computes the absolute value of self without any wrapping …","Wrapping absolute value see i8::wrapping_abs.","Wrapping absolute value see i64::wrapping_abs.","Wrapping absolute value see i16::wrapping_abs.","Wrapping absolute value see i128::wrapping_abs.","Wrapping absolute value see isize::wrapping_abs.","Wrapping absolute value see i32::wrapping_abs.","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","Wrapping (modular) negation. Computes -self wrapping …","The addition operator +.","The addition assignment operator +=.","An async-aware version of the Fn trait.","An async-aware version of the FnMut trait.","An async-aware version of the FnOnce trait.","The bitwise AND operator &amp;.","The bitwise AND assignment operator &amp;=.","The bitwise OR operator |.","The bitwise OR assignment operator |=.","The bitwise XOR operator ^.","The bitwise XOR assignment operator ^=.","An endpoint of a range of keys.","Exit the operation without running subsequent phases.","Future returned by AsyncFnOnce::async_call_once.","Future returned by AsyncFnMut::async_call_mut and …","Trait that indicates that this is a pointer or a wrapper …","The coroutine completed with a return value.","Move on to the next phase of the operation as normal.","Used to tell an operation whether it should exit early or …","The trait implemented by builtin coroutine types.","The result of a coroutine resumption.","Used for immutable dereferencing operations like *v.","Used for mutable dereferencing operations like in *v = 1;.","Perma-unstable marker trait. Indicates that the type has a …","DispatchFromDyn is used in the implementation of object …","The division operator /.","The division assignment operator /=.","Custom code within the destructor.","An exclusive bound.","The version of the call operator that takes an immutable …","The version of the call operator that takes a mutable …","The version of the call operator that takes a by-value …","Used to specify which residuals can be converted into …","An inclusive bound.","Used for indexing operations (container[index]) in …","Used for indexing operations (container[index]) in mutable …","The multiplication operator *.","The multiplication assignment operator *=.","The unary negation operator -.","The unary logical negation operator !.","OneSidedRange is implemented for built-in range types that …","The resulting type after applying the + operator.","The resulting type after applying the - operator.","The resulting type after applying the - operator.","Output type of the called closure’s future.","The resulting type after applying the ! operator.","The returned type after the call operator is used.","The type of the value produced by ? when <em>not</em> …","The resulting type after applying the * operator.","The resulting type after applying the / operator.","The resulting type after applying the % operator.","The resulting type after applying the &amp; operator.","The resulting type after applying the | operator.","The resulting type after applying the ^ operator.","The resulting type after applying the &lt;&lt; operator.","The resulting type after applying the &gt;&gt; operator.","The returned type after indexing.","A (half-open) range bounded inclusively below and …","RangeBounds is implemented by Rust’s built-in range …","A range only bounded inclusively below (start..).","An unbounded range (..).","A range bounded inclusively below and above (start..=end).","A range only bounded exclusively above (..end).","A range only bounded inclusively above (..=end).","The remainder operator %.","The remainder assignment operator %=.","Allows retrieving the canonical type implementing Try that …","The type of the value passed to FromResidual::from_residual","The type of value this coroutine returns.","The left shift operator &lt;&lt;. Note that because this trait …","The left shift assignment operator &lt;&lt;=.","The right shift operator &gt;&gt;. Note that because this trait …","The right shift assignment operator &gt;&gt;=.","The subtraction operator -.","The subtraction assignment operator -=.","The resulting type after dereferencing.","The ? operator and try {} blocks.","The “return” type of this meta-function.","An infinite endpoint. Indicates that there is no bound in …","Implement FromResidual&lt;Yeet&lt;T&gt;&gt; on your type to enable …","The type of value this coroutine yields.","The coroutine suspended with a value.","Performs the + operation.","Performs the += operation.","Converts from &amp;mut Bound&lt;T&gt; to Bound&lt;&amp;mut T&gt;.","Converts from &amp;Bound&lt;T&gt; to Bound&lt;&amp;T&gt;.","Call the AsyncFn returning a future which may borrow from …","Call the AsyncFnMut returning a future which may borrow …","Call the AsyncFnOnce returning a future which may move …","Performs the &amp; operation.","Performs the &amp;= operation.","Performs the | operation.","Performs the |= operation.","Performs the ^ operation.","Performs the ^= operation.","Used in ? to decide whether the operator should produce a …","Converts the ControlFlow into an Option which is Some if …","Performs the call operation.","Performs the call operation.","Performs the call operation.","Map a Bound&lt;&amp;T&gt; to a Bound&lt;T&gt; by cloning the contents of …","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Returns true if item is contained in the range.","Converts the ControlFlow into an Option which is Some if …","Dereferences the value.","Mutably dereferences the value.","Performs the / operation.","Performs the /= operation.","Executes the destructor for this type.","Returns the upper bound of the range (inclusive).","The upper bound of the range (exclusive).","The upper bound of the range (exclusive).","The upper bound of the range (inclusive)","End index bound.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs the type from its Output type.","Constructs the type from a compatible Residual type.","Performs the indexing (container[index]) operation.","Performs the mutable indexing (container[index]) operation.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Destructures the RangeInclusive into (lower bound upper …","Returns true if this is a Break variant.","Returns true if this is a Continue variant.","Returns true if the range contains no items.","Returns true if the range contains no items.","Maps a Bound&lt;T&gt; to a Bound&lt;U&gt; by applying a function to …","Maps ControlFlow&lt;B C&gt; to ControlFlow&lt;T C&gt; by applying a …","Maps ControlFlow&lt;B C&gt; to ControlFlow&lt;B T&gt; by applying a …","Performs the * operation.","Performs the *= operation.","Performs the unary - operation.","Creates a new inclusive range. Equivalent to writing …","Performs the unary ! operation.","Performs the % operation.","Performs the %= operation.","Resumes the execution of this coroutine.","Performs the &lt;&lt; operation.","Performs the &lt;&lt;= operation.","Performs the &gt;&gt; operation.","Performs the &gt;&gt;= operation.","Returns the lower bound of the range (inclusive).","The lower bound of the range (inclusive).","The lower bound of the range (inclusive).","Start index bound.","Performs the - operation.","Performs the -= operation.","An iterator over the value in Some variant of an Option.","An iterator over a reference to the Some variant of an …","An iterator over a mutable reference to the Some variant …","No value.","The Option type. See the module level documentation for …","Some value of type T.","Returns None if the option is None otherwise returns optb.","Returns None if the option is None otherwise calls f with …","Converts from Option&lt;T&gt; (or &amp;Option&lt;T&gt;) to …","Converts from Option&lt;T&gt; (or &amp;mut Option&lt;T&gt;) to …","Converts from &amp;mut Option&lt;T&gt; to Option&lt;&amp;mut T&gt;.","Returns a mutable slice of the contained value if any. If …","Converts from Pin&lt;&amp;mut Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;mut T&gt;&gt;.","Converts from Pin&lt;&amp;Option&lt;T&gt;&gt; to Option&lt;Pin&lt;&amp;T&gt;&gt;.","Converts from &amp;Option&lt;T&gt; to Option&lt;&amp;T&gt;.","Returns a slice of the contained value if any. If this is …","Maps an Option&lt;&amp;mut T&gt; to an Option&lt;T&gt; by cloning the …","Maps an Option&lt;&amp;T&gt; to an Option&lt;T&gt; by cloning the contents …","Maps an Option&lt;&amp;mut T&gt; to an Option&lt;T&gt; by copying the …","Maps an Option&lt;&amp;T&gt; to an Option&lt;T&gt; by copying the contents …","Returns None.","Returns the contained Some value consuming the self value.","Returns None if the option is None otherwise calls …","Converts from Option&lt;Option&lt;T&gt;&gt; to Option&lt;T&gt;.","Converts from &amp;Option&lt;T&gt; to Option&lt;&amp;T&gt;.","Converts from &amp;mut Option&lt;T&gt; to Option&lt;&amp;mut T&gt;","Moves val into a new Some.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Takes each element in the Iterator: if it is None no …","Inserts value into the option if it is None then returns …","Inserts the default value into the option if it is None …","Inserts a value computed from f into the option if it is …","Inserts value into the option then returns a mutable …","Calls a function with a reference to the contained value …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns a consuming iterator over the possibly contained …","Returns true if the option is a None value.","Returns true if the option is a None or the value inside …","Returns true if the option is a Some value.","Returns true if the option is a Some and the value inside …","Returns an iterator over the possibly contained value.","Returns a mutable iterator over the possibly contained …","Maps an Option&lt;T&gt; to Option&lt;U&gt; by applying a function to a …","Returns the provided default result (if none) or applies …","Computes a default function result (if none) or applies a …","Transforms the Option&lt;T&gt; into a Result&lt;T E&gt; mapping …","Transforms the Option&lt;T&gt; into a Result&lt;T E&gt; mapping …","Returns the option if it contains a value otherwise …","Returns the option if it contains a value otherwise calls …","Takes each element in the Iterator: if it is a None no …","Replaces the actual value in the option by the value given …","Takes each element in the Iterator: if it is a None no …","Takes the value out of the option leaving a None in its …","Takes the value out of the option but only if the …","Transposes an Option of a Result into a Result of an Option…","Returns the contained Some value consuming the self value.","Returns the contained Some value or a provided default.","Returns the contained Some value or a default.","Returns the contained Some value or computes it from a …","Returns the contained Some value consuming the self value","Unzips an option containing a tuple of two options.","Returns Some if exactly one of self optb is Some …","Zips self with another Option.","Zips self and another Option with function f.","Owned and borrowed Unix-like file descriptors.","Linux-specific definitions.","Compatibility module for C platform-specific types. Use …","Platform-specific extensions to std for Unix platforms.","Platform-specific extensions to std for the WebAssembly …","Platform-specific extensions to std for Preview 2 of the …","Platform-specific extensions to std for Windows.","A trait to borrow the file descriptor from an underlying …","A trait to extract the raw file descriptor from an …","A borrowed file descriptor.","A trait to express the ability to construct an object from …","A trait to express the ability to consume an object and …","An owned file descriptor.","Raw file descriptors.","Borrows the file descriptor.","Extracts the raw file descriptor.","Return a BorrowedFd holding the given raw file descriptor.","Takes ownership of a ChildStdin’s file descriptor.","Returns the argument unchanged.","Takes ownership of a UdpSocket’s file descriptor.","Takes ownership of a UnixListener’s socket file …","Takes ownership of a File’s underlying file descriptor.","Takes ownership of a TcpListener’s socket file …","Takes ownership of a ChildStderr’s file descriptor.","Takes ownership of a UnixDatagram’s socket file …","Takes ownership of a UnixStream’s socket file descriptor.","Takes ownership of a TcpStream’s socket file descriptor.","Takes ownership of a ChildStdout’s file descriptor.","Returns the argument unchanged.","Constructs a new instance of Self from the given raw file …","Constructs a new instance of Self from the given raw file …","Calls U::from(self).","Calls U::from(self).","Consumes this object returning the raw underlying file …","Creates a new OwnedFd instance that shares the same …","Creates a new OwnedFd instance that shares the same …","Linux-specific extensions to primitives in the std::fs …","Linux-specific networking functionality.","Linux-specific extensions to primitives in the std::process…","Linux-specific raw type definitions.","OS-specific extensions to fs::Metadata.","Gain a reference to the underlying stat structure which …","Returns the last access time of the file in seconds since …","Returns the last access time of the file in nanoseconds …","Returns the “preferred” block size for efficient …","Returns the number of blocks allocated to the file …","Returns the last status change time of the file in …","Returns the last status change time of the file in …","Returns the device ID on which this file resides.","Returns the group ID of the file owner.","Returns the inode number.","Returns the file type and mode.","Returns the last modification time of the file in seconds …","Returns the last modification time of the file in …","Returns the number of hard links to file.","Returns the device ID that this file represents. Only …","Returns the size of the file (if it is a regular file or a …","Returns the user ID of the file owner.","Platform-specific extensions to SocketAddr.","Os-specific extensions for TcpStream","Linux-specific functionality for AF_UNIX sockets …","Returns the contents of this address if it is in the …","Gets the accept delay value (in seconds) of the …","Creates a Unix socket address in the abstract namespace.","Query the current setting of socket option SO_PASSCRED.","Gets the value of the TCP_QUICKACK option on this socket.","A socket listener will be awakened solely when data …","Enable or disable socket option SO_PASSCRED.","Enable or disable TCP_QUICKACK.","Os-specific extensions for Child","Os-specific extensions for Command","This type represents a file descriptor that refers to a …","Sets whether a PidFd should be created for the Child …","Returns the argument unchanged.","Calls U::from(self).","Returns the PidFd created for this Child if available. …","Forces the child process to exit.","Obtains a reference to the PidFd created for this Child …","Attempts to collect the exit status of the child if it has …","Waits for the child to exit completely returning the …","Returns the argument unchanged.","Calls U::from(self).","Equivalent to C’s char type.","Equivalent to C’s double type.","Equivalent to C’s float type.","Equivalent to C’s signed int (int) type.","Equivalent to C’s signed long (long) type.","Equivalent to C’s signed long long (long long) type.","Equivalent to C’s signed char type.","Equivalent to C’s signed short (short) type.","Equivalent to C’s unsigned char type.","Equivalent to C’s unsigned int type.","Equivalent to C’s unsigned long type.","Equivalent to C’s unsigned long long type.","Equivalent to C’s unsigned short type.","Equivalent to C’s void type when used as a pointer.","Unix-specific extensions to primitives in the std::ffi …","Unix-specific extensions to primitives in the std::fs …","Unix-specific extensions to general I/O primitives.","Unix-specific networking functionality.","A prelude for conveniently writing platform-specific code.","Unix-specific extensions to primitives in the std::process …","Unix-specific primitives available on all unix platforms."],"3":["Unix-specific extensions to primitives in the std::thread …","Platform-specific extensions to OsStr.","Platform-specific extensions to OsString.","Gets the underlying byte view of the OsStr slice.","Creates an OsStr from a byte slice.","Creates an OsString from a byte vector.","Yields the underlying byte vector of this OsString.","Unix-specific extensions to fs::DirBuilder.","Unix-specific extension methods for fs::DirEntry.","Sealed Unix-specific extension methods for fs::DirEntry.","Unix-specific extensions to fs::File.","Unix-specific extensions for fs::FileType.","Unix-specific extensions to fs::Metadata.","Unix-specific extensions to fs::OpenOptions.","Unix-specific extensions to fs::Permissions.","Returns the last access time of the file in seconds since …","Returns the last access time of the file in nanoseconds …","Returns the block size for filesystem I/O.","Returns the number of blocks allocated to the file in …","Change the owner and group of the specified path.","Change the root directory of the current process to the …","Returns the last status change time of the file in …","Returns the last status change time of the file in …","Pass custom flags to the flags argument of open.","Returns the ID of the device containing the file.","Change the owner and group of the file referenced by the …","Returns a reference to the underlying OsStr of this entry…","Creates a new instance of Permissions from the given set …","Returns the group ID of the owner of this file.","Returns the inode number.","Returns the underlying d_ino field in the contained dirent …","Returns true if this file type is a block device.","Returns true if this file type is a char device.","Returns true if this file type is a fifo.","Returns true if this file type is a socket.","Change the owner and group of the specified path without …","Returns the underlying raw st_mode bits that contain the …","Sets the mode bits that a new file will be created with.","Returns the rights applied to this file.","Sets the mode to create new directories with. This option …","Returns the last modification time of the file in seconds …","Returns the last modification time of the file in …","Returns the number of hard links pointing to this file.","Returns the device ID of this file (if it is a special …","Reads a number of bytes starting from a given offset.","Reads the exact number of bytes required to fill buf from …","Like read_at except that it reads into a slice of buffers.","Sets the underlying raw bits for this set of permissions.","Returns the total size of this file in bytes.","Creates a new symbolic link on the filesystem.","Returns the user ID of the owner of this file.","Attempts to write an entire buffer starting from a given …","Writes a number of bytes starting from a given offset.","Like write_at except that it writes from a slice of …","This enum represent one control message of variable type.","The error type which is returned from parsing the type a …","An iterator over incoming connections to a UnixListener.","This struct is used to iterate through the control …","This control message contains unix credentials.","This control message contains file descriptors.","An address associated with a Unix socket.","A Unix socket Ancillary data struct.","Unix credential.","Credentials for a UNIX process for credentials passing.","A Unix datagram socket.","A structure representing a Unix domain socket server.","A Unix stream socket.","Accepts a new incoming connection to this listener.","Add credentials to the ancillary data.","Add file descriptors to the ancillary data.","Returns the contents of this address if it is a pathname …","Creates a Unix datagram socket bound to the given path.","Creates a new UnixListener bound to the specified socket.","Creates a Unix datagram socket bound to an address.","Creates a new UnixListener bound to the specified …","Returns the capacity of the buffer.","Clears the ancillary data removing all values.","Connects the socket to the specified path address.","Connects to the socket named by path.","Connects the socket to an address.","Connects to the socket specified by address.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a SockAddr with the family AF_UNIX and the …","Get the current GID.","Get the current PID.","Get the current UID.","The GID part of the peer credential. This is the effective …","Returns an iterator over incoming connections.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns true if the ancillary data is empty.","Returns true if the address is unnamed.","Returns the number of used bytes.","Returns the address of this socket.","Returns the local socket address of this listener.","Returns the socket address of the local half of this …","Returns the iterator of the control messages.","Create a Unix credential struct.","Create an ancillary data with the given buffer.","Creates an unnamed pair of connected sockets.","Creates an unnamed pair of connected sockets.","Receives data on the socket from the remote address to …","Receives data on the socket from the remote address to …","Receives a single datagram message on the socket without …","Returns the address of this socket’s peer.","Returns the socket address of the remote half of this …","Gets the peer credentials for this Unix domain socket.","The PID part of the peer credential. This field is …","Returns the read timeout of this socket.","Returns the read timeout of this socket.","Receives data from the socket.","Receives data from the socket.","Receives data and ancillary data from socket.","Receives data and ancillary data from socket.","Receives data and ancillary data from socket.","Sends data on the socket to the socket’s peer.","Sends data on the socket to the specified address.","Sends data on the socket to the specified SocketAddr.","Sends data and ancillary data on the socket.","Sends data and ancillary data on the socket.","Sends data and ancillary data on the socket to the …","Set the GID.","Set the id of the socket for network filtering purpose","Set the id of the socket for network filtering purpose","Moves the socket into or out of nonblocking mode.","Moves the socket into or out of nonblocking mode.","Moves the socket into or out of nonblocking mode.","Set the PID.","Sets the read timeout for the socket.","Sets the read timeout for the socket.","Set the UID.","Sets the write timeout for the socket.","Sets the write timeout for the socket.","Shut down the read write or both halves of this …","Shuts down the read write or both halves of this …","Returns the value of the SO_ERROR option.","Returns the value of the SO_ERROR option.","Returns the value of the SO_ERROR option.","Is true if during a recv operation the ancillary was …","Creates a new independently owned handle to the underlying …","Creates a new independently owned handle to the underlying …","Creates a new independently owned handle to the underlying …","The UID part of the peer credential. This is the effective …","Creates a Unix Datagram socket which is not bound to any …","Returns the write timeout of this socket.","Returns the write timeout of this socket.","Unix-specific extensions to the process::Command builder.","Unix-specific extensions to process::ExitStatus and …","Set executable argument","Schedules a closure to be run just before the exec …","Whether the process was continued from a stopped status.","If the process was terminated by a signal says whether it …","Performs all the required setup by this Command followed …","Creates a new ExitStatus or ExitStatusError from the raw …","Similar to uid but sets the group ID of the child …","Sets the supplementary group IDs for the calling process. …","Returns the underlying raw wait status.","Returns the OS-assigned process identifier associated with …","Schedules a closure to be run just before the exec …","Sets the process group ID (PGID) of the child process. …","If the process was terminated by a signal returns that …","If the process was stopped by a signal returns that …","Sets the child process’s user ID. This translates to a …","Unix-specific extensions to JoinHandle.","Extracts the raw pthread_t without taking ownership","Consumes the thread returning the raw pthread_t","WASI-specific extensions to primitives in the std::ffi …","WASI-specific extensions to primitives in the std::fs …","WASI-specific extensions to general I/O primitives.","WASI-specific networking functionality","A prelude for conveniently writing platform-specific code.","Platform-specific extensions to OsStr.","Platform-specific extensions to OsString.","Gets the underlying byte view of the OsStr slice.","Creates an OsStr from a byte slice.","Creates an OsString from a byte vector.","Yields the underlying byte vector of this OsString.","WASI-specific extension methods for fs::DirEntry.","WASI-specific extensions to File.","WASI-specific extensions for fs::FileType.","WASI-specific extensions to fs::Metadata.","WASI-specific extensions to fs::OpenOptions.","Provide file advisory information on a file descriptor.","Force the allocation of space in a file.","Returns the st_atim field of the internal filestat_t","Create a directory.","Returns the st_ctim field of the internal filestat_t","Returns the st_dev field of the internal filestat_t","Indicates whether OpenOptions must open a directory or not.","Indicates whether __WASI_FDFLAG_DSYNC is passed in the …","Adjust the flags associated with this file.","Adjust the rights associated with this file.","Indicates the value that should be passed in for the …","Indicates the value that should be passed in for the …","Returns the st_ino field of the internal filestat_t","Returns the underlying d_ino field of the dirent_t","Returns true if this file type is a block device.","Returns true if this file type is a character device.","Returns true if this file type is any type of socket.","Returns true if this file type is a socket datagram.","Returns true if this file type is a socket stream.","Create a hard link.","Pass custom dirflags argument to path_open.","Return the attributes of a file or directory.","Returns the st_mtim field of the internal filestat_t","Returns the st_nlink field of the internal filestat_t","Indicates whether __WASI_FDFLAG_NONBLOCK is passed in the …","Open a file or directory.","Reads a number of bytes starting from a given offset.","Reads the exact number of byte required to fill buf from …","Read the contents of a symbolic link.","Reads a number of bytes starting from a given offset.","Remove a directory.","Unlink a file.","Rename a file or directory.","Indicates whether __WASI_FDFLAG_RSYNC is passed in the …","Returns the st_size field of the internal filestat_t","Create a symbolic link.","Create a symbolic link.","Indicates whether __WASI_FDFLAG_SYNC is passed in the …","Returns the current position within the file.","Attempts to write an entire buffer starting from a given …","Writes a number of bytes starting from a given offset.","Writes a number of bytes starting from a given offset.","WASI-specific extensions to std::net::TcpListener.","Accept a socket.","Windows-specific extensions to primitives in the std::ffi …","Windows-specific extensions to primitives in the std::fs …","Windows-specific extensions to general I/O primitives.","A prelude for conveniently writing platform-specific code.","Windows-specific extensions to primitives in the …","Windows-specific primitives.","Windows-specific extensions to primitives in the …","Generates a wide character sequence for potentially …","Windows-specific extensions to OsStr.","Windows-specific extensions to OsString.","Re-encodes an OsStr as a wide character sequence i.e. …","Returns the argument unchanged.","Creates an OsString from a potentially ill-formed UTF-16 …","Calls U::from(self).","Windows-specific extensions to fs::File.","Windows-specific extensions to fs::FileTimes.","Windows-specific extensions to fs::FileType.","Windows-specific extensions to fs::Metadata.","Windows-specific extensions to fs::OpenOptions.","Overrides the dwDesiredAccess argument to the call to …","Sets the dwFileAttributes argument to the call to …","Returns the change time which is the last time file …","Returns the value of the ftCreationTime field of this …","Sets extra flags for the dwFileFlags argument to the call …","Returns the value of the dwFileAttributes field of this …","Returns the value of the nFileIndex{LowHigh} fields of …","Returns the value of the nFileSize{HighLow} fields of this","Returns true if this file type is a symbolic link that is …","Returns true if this file type is a symbolic link that is …","Create a junction point.","Returns the value of the ftLastAccessTime field of this …","Returns the value of the ftLastWriteTime field of this …","Returns the value of the nNumberOfLinks field of this …","Sets the dwSecurityQosFlags argument to the call to …","Seeks to a given position and reads a number of bytes.","Seeks to a given position and writes a number of bytes.","Set the creation time of a file.","Overrides the dwShareMode argument to the call to …","Creates a new symlink to a directory on the filesystem.","Creates a new symlink to a non-directory file on the …","Returns the value of the dwVolumeSerialNumber field of this","A trait to borrow the handle from an underlying object.","Extracts raw handles.","Extracts raw sockets.","A trait to borrow the socket from an underlying object.","A borrowed handle.","A borrowed socket.","Construct I/O objects from raw handles.","Creates I/O objects from raw sockets.","FFI type for handles in return values or out parameters …","FFI type for handles in return values or out parameters …","A trait to express the ability to consume an object and …","A trait to express the ability to consume an object and …","This is the error type used by HandleOrInvalid when …","This is the error type used by HandleOrNull when …","An owned handle.","An owned socket.","Raw HANDLEs.","Raw SOCKETs.","Borrows the handle.","Extracts the raw handle.","Extracts the raw socket.","Borrows the socket.","Return a BorrowedHandle holding the given raw handle.","Return a BorrowedSocket holding the given raw socket.","Takes ownership of a ChildStdout’s file handle.","Takes ownership of a ChildStdin’s file handle.","Takes ownership of a ChildStderr’s file handle.","Returns the argument unchanged.","Takes ownership of a Child’s process handle.","Takes ownership of a File’s underlying file handle.","Returns the argument unchanged.","Takes ownership of a TcpListener’s socket.","Takes ownership of a TcpStream’s socket.","Takes ownership of a UdpSocket’s underlying socket.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new I/O object from the specified raw handle.","Constructs a new instance of Self from the given RawHandle …","Constructs a new instance of Self from the given RawHandle …","Constructs a new I/O object from the specified raw socket.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Consumes this object returning the raw underlying handle.","Consumes this object returning the raw underlying socket.","Creates a new OwnedHandle instance that shares the same …","Creates a new OwnedSocket instance that shares the same …","Creates a new OwnedHandle instance that shares the same …","Creates a new OwnedSocket instance that shares the same …","Windows-specific extensions to the process::Command …","Windows-specific extensions to process::ExitCode.","Windows-specific extensions to process::ExitStatus.","When process::Command creates pipes request that our side …","Sets the process creation flags to be passed to …","Forces all arguments to be wrapped in quote (&quot;) characters.","Creates a new ExitStatus from the raw underlying u32 …","Creates a new ExitCode from the raw underlying u32 return …","Extracts the main thread raw handle without taking …","Append literal text to the command line without any …","Set a raw attribute on the command providing extended …","Sets the field wShowWindow of STARTUPINFO that is passed …","A simple wrapper around a type to assert that it is unwind …","The configuration for whether and how the default panic …","Prints a backtrace with all possible information.","A struct containing information about the location of a …","Disable collecting and displaying backtraces.","A struct providing information about a panic.","A struct providing information about a panic.","A marker trait representing types where a shared reference …","Prints a terser backtrace which ideally only contains …","A marker trait which represents “panic safe” types in …","Make all future panics abort directly without running the …","Returns the source location of the caller of this …","Returns whether the panic handler is allowed to unwind the …","Invokes a closure capturing the cause of an unwinding …","Returns the column from which the panic originated.","Returns the name of the source file from which the panic …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Checks whether the standard library’s panic hook will …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the line number from which the panic originated.","Returns information about the location from which the …","Panic the current thread with the given message as the …","Returns the payload associated with the panic.","Returns the payload associated with the panic if it is a …","Triggers a panic without invoking the panic hook.","Configure whether the default panic hook will capture and …","Registers a custom panic hook replacing the previously …","Unregisters the current panic hook and returns it …","Atomic combination of take_hook and set_hook. Use this to …","Creates a pattern type.","An iterator over Path and its ancestors.","A single component of a path.","An iterator over the Components of a Path.","A reference to the current directory i.e. ..","Device namespace prefix e.g. \\\\\\\\.\\\\COM42.","Prefix C: for the given disk drive.","Helper struct for safely printing paths with format! and {}…","An iterator over the Components of a Path as OsStr slices.","The primary separator of path components for the current …","The primary separator of path components for the current …","A normal component e.g. a and b in a/b.","A reference to the parent directory i.e. ...","A slice of a path (akin to str).","An owned mutable path (akin to String).","Windows path prefixes e.g. C: or \\\\\\\\server\\\\share.","A Windows path prefix e.g. C: or \\\\\\\\server\\\\share.","A structure wrapping a Windows path prefix as well as its …","The root directory component appears after any prefix and …","An error returned from Path::strip_prefix if the prefix …","Prefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em> e.g. …","Verbatim prefix e.g. \\\\\\\\?\\\\cat_pics.","Verbatim disk prefix e.g. \\\\\\\\?\\\\C:.","Verbatim prefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>","Makes the path absolute without accessing the filesystem.","Append self.extension with extension.","Produces an iterator over Path and its ancestors.","Yields a mutable reference to the underlying OsStr slice.","Yields a mutable reference to the underlying OsString …","Yields the underlying OsStr slice.","Returns the raw OsStr slice for this prefix.","Extracts the underlying OsStr slice.","Coerces to a Path slice.","Extracts a slice corresponding to the portion of the path …","Extracts a slice corresponding to the portion of the path …","Returns the canonical absolute form of the path with all …","Invokes capacity on the underlying instance of OsString.","Invokes clear on the underlying instance of OsString.","Clones the contents of source into self.","Produces an iterator over the Components of the path.","Returns an object that implements Display for safely …","Determines whether child is a suffix of self.","Returns true if the path points at an existing entity.","Extracts the extension (without the leading dot) of …","Returns the final component of the Path if there is one.","Extracts the prefix of self.file_name.","Extracts the stem (non-extension) portion of self.file_name…","Converts a Box&lt;Path&gt; into a PathBuf.","Returns the argument unchanged.","Converts an OsString into a PathBuf","Converts a borrowed OsStr to a PathBuf.","Converts a String into a PathBuf","Converts a clone-on-write pointer to an owned path.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns true if the Path has a root.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Converts this PathBuf into a boxed Path.","Consumes the PathBuf yielding its internal OsString …","Converts a Box&lt;Path&gt; into a PathBuf without copying or …","Returns true if the Path is absolute i.e. if it is …","Returns true if the path exists on disk and is pointing at …","Returns true if the path exists on disk and is pointing at …","Returns true if the Path is relative i.e. not absolute.","Determines whether the character is one of the permitted …","Returns true if the path exists on disk and is pointing at …","Determines if the prefix is verbatim i.e. begins with …","Produces an iterator over the path’s components viewed …","Creates an owned PathBuf with path adjoined to self.","Returns the parsed prefix data.","Consumes and leaks the PathBuf returning a mutable …","Queries the file system to get information about a file …","Allocates an empty PathBuf.","Directly wraps a string slice as a Path slice.","Returns the Path without its final component if there is …","Truncates self to self.parent.","Extends self with path.","Returns an iterator over the entries within a directory.","Reads a symbolic link returning the file that the link …","Invokes reserve on the underlying instance of OsString.","Invokes reserve_exact on the underlying instance of …","Updates self.extension to Some(extension) or to None if …","Updates self.file_name to file_name.","Invokes shrink_to on the underlying instance of OsString.","Invokes shrink_to_fit on the underlying instance of …","Determines whether base is a prefix of self.","Returns a path that when joined onto base yields self.","Queries the metadata about a file without following …","Converts a Path to an owned PathBuf.","Yields a &amp;str slice if the Path is valid unicode.","Converts a Path to a Cow&lt;str&gt;.","Returns Ok(true) if the path points at an existing entity.","Invokes try_reserve on the underlying instance of OsString.","Invokes try_reserve_exact on the underlying instance of …","Creates an owned PathBuf like self but with the extension …","Creates a new PathBuf with a given capacity used to create …","Creates an owned PathBuf like self but with the given …","Creates an owned PathBuf like self but with the given file …","A pointer which pins its pointee in place.","Gets Pin&lt;&amp;mut T&gt; to the underlying pinned value from this …","Gets a mutable reference to the pinned value this Pin&lt;Ptr&gt; …","Gets a shared reference to the pinned value this Pin …","Converts a Box&lt;T&gt; into a Pin&lt;Box&lt;T&gt;&gt;. If T does not …","Returns the argument unchanged.","Gets a mutable reference to the data inside of this Pin.","Gets a shared reference out of a pin.","Gets a mutable reference to the data inside of this Pin.","Calls U::from(self).","Unwraps this Pin&lt;Ptr&gt; returning the underlying pointer.","Unwraps this Pin&lt;Ptr&gt; returning the underlying Ptr.","Converts this Pin&lt;&amp;mut T&gt; into a Pin&lt;&amp;T&gt; with the same …","Constructs a new pin by mapping the interior value.","Construct a new pin by mapping the interior value.","Construct a new Pin&lt;Ptr&gt; around a pointer to some data of …","Construct a new Pin&lt;Ptr&gt; around a reference to some data …","Constructs a Pin&lt;&amp;mut T&gt; by pinning a value: T locally.","Assigns a new value to the memory location pointed to by …","Get a pinning mutable reference from a static mutable …","Get a pinning reference from a &amp;&#39;static reference.","The 2015 version of the prelude of The Rust Standard …","The 2018 version of the prelude of The Rust Standard …","The 2021 version of the prelude of The Rust Standard …","The 2024 version of the prelude of The Rust Standard …","The first version of the prelude of The Rust Standard …","Attribute macro applied to a function to register it as a …","Attribute macro applied to a function to turn it into a …","Keeps the item it’s applied to if the passed path is …","Expands all #[cfg] and #[cfg_attr] attributes in the code …","Unstable placeholder for deref patterns.","Attribute macro used to apply derive macros.","Attribute macro used to apply derive macros for …","Attribute macro applied to a static to register it as a …","Attribute macro applied to a function to turn it into a …","An implementation detail of the #[test] and #[bench] …","Unstable placeholder for type ascription.","Attribute macro applied to a function to register it as a …","Attribute macro applied to a function to turn it into a …","Keeps the item it’s applied to if the passed path is …","Expands all #[cfg] and #[cfg_attr] attributes in the code …","Unstable placeholder for deref patterns.","Attribute macro used to apply derive macros.","Attribute macro used to apply derive macros for …","Attribute macro applied to a static to register it as a …","Attribute macro applied to a function to turn it into a …","An implementation detail of the #[test] and #[bench] …","Unstable placeholder for type ascription.","Representation of a running or exited child process.","A handle to a child process’s stderr.","A handle to a child process’s standard input (stdin).","A handle to a child process’s standard output (stdout).","A process builder providing fine-grained control over how …","An iterator over the command arguments.","An iterator over the command environment variables.","This type represents the status code the current process …","Describes the result of a process after it has terminated.","Describes the result of a process after it has failed","The canonical ExitCode for unsuccessful termination on …","The output of a finished process.","The canonical ExitCode for successful termination on this …","Describes what to do with a standard I/O stream for a …","A trait for implementing arbitrary return types in the main…","Terminates the process in an abnormal fashion.","Adds an argument to pass to the program.","Adds multiple arguments to pass to the program.","Returns the exit code of the process if any.","Reports the exit code if applicable from an …","Reports the exit code if applicable from an …","Sets the working directory for the child process.","Inserts or updates an explicit environment variable …","Clears all explicitly set environment variables and …","Removes an explicitly set environment variable and …","Inserts or updates multiple explicit environment variable …","Terminates the current process with the specified exit …","Was termination successful?  Returns a Result.","Exit the current process with the given ExitCode.","Format the program and arguments of a Command for display. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a ChildStdout into a Stdio.","Returns the argument unchanged.","Redirect command stdout/stderr to our stdout","Takes ownership of a handle and returns a Stdio that can …","Converts a File into a Stdio.","Converts a ChildStderr into a Stdio.","Converts a ChildStdin into a Stdio.","Takes ownership of a file descriptor and returns a Stdio …","Redirect command stdout/stderr to our stderr","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct an ExitCode from an arbitrary u8 value.","Returns the argument unchanged.","Returns the argument unchanged.","Returns an iterator of the arguments that will be passed …","Returns the working directory for the child process.","Returns an iterator of the environment variables …","Returns the path to the program that was given to …","Returns the OS-assigned process identifier associated with …","Returns the OS-assigned process identifier associated with …","The child inherits from the corresponding parent …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Converts an ExitStatusError (back) to an ExitStatus.","Forces the child process to exit. If the child has already …","Returns true if this requires Command to create a new pipe.","Constructs a new Command for launching the program at path …","This stream will be ignored. This is the equivalent of …","Executes the command as a child process waiting for it to …","A new pipe should be arranged to connect the parent and …","Is called to get the representation of the value as status …","Executes the command as a child process returning a …","Executes a command as a child process waiting for it to …","The status (exit code) of the process.","Configuration for the child process’s standard error …","The handle for reading from the child’s standard error …","The data that the process wrote to stderr.","Configuration for the child process’s standard input …","The handle for writing to the child’s standard input …","Configuration for the child process’s standard output …","The handle for reading from the child’s standard output …","The data that the process wrote to stdout.","Was termination successful? Signal termination is not …","Attempts to collect the exit status of the child if it has …","Waits for the child to exit completely returning the …","Simultaneously waits for the child to exit and collect all …","A type storing a usize which is a power of two and thus …","The metadata for a Dyn = dyn SomeTrait trait object type.","The smallest possible alignment 1.","The type for metadata in pointers and references to Self.","*mut T but non-zero and covariant.","Provides the pointer metadata type of any pointed-to type.","Adds an offset to a pointer (convenience for …","Gets the “address” portion of the pointer.","Compares the <em>addresses</em> of the two pointers for equality …","Create a const raw pointer to a place without creating an …","Create a mut raw pointer to a place without creating an …","Returns the alignment of the type associated with this …","Computes the offset that needs to be applied to the …","Returns a unique reference to the value. If the value may …","Returns a raw pointer to the slice’s buffer.","Returns a non-null pointer to the slice’s buffer.","Returns the alignment as a NonZero&lt;usize&gt;.","Acquires the underlying *mut pointer.","Returns a shared reference to the value. If the value may …","Returns a unique references to the value. In contrast to …","Returns a shared references to the value. In contrast to …","Returns a shared reference to a slice of possibly …","Returns a unique reference to a slice of possibly …","Returns the alignment as a usize.","Calculates the offset from a pointer in bytes (convenience …","Calculates the offset from a pointer in bytes.","Calculates the distance between two pointers. The returned …","Calculates the offset from a pointer in bytes (convenience …","Casts to a pointer of another type.","Copies count * size_of::&lt;T&gt;() bytes from src to dst. The …","Copies count * size_of&lt;T&gt; bytes from src to self. The …","Copies count * size_of&lt;T&gt; bytes from src to self. The …","Copies count * size_of::&lt;T&gt;() bytes from src to dst. The …","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Copies count * size_of&lt;T&gt; bytes from self to dest. The …","Creates a new pointer that is dangling but well-aligned.","Creates a new NonNull that is dangling but well-aligned.","Creates a new pointer that is dangling but well-aligned.","Executes the destructor (if any) of the pointed-to value.","Executes the destructor (if any) of the pointed-to value.","Compares raw pointers for equality.","Returns the argument unchanged.","Converts a &amp;mut T to a NonNull&lt;T&gt;.","Converts a &amp;T to a NonNull&lt;T&gt;.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a mutable reference to a raw pointer.","Forms a (possibly-wide) raw pointer from a data pointer …","Performs the same functionality as std::ptr::from_raw_parts…","Performs the same functionality as from_raw_parts except …","Convert a reference to a raw pointer.","Returns a raw pointer to an element or subslice without …","Hash a raw pointer.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns whether the pointer is properly aligned for T.","Returns whether the pointer is aligned to align.","Returns true if the non-null raw slice has a length of 0.","Returns the size and alignment together as a Layout","Returns the length of a non-null raw slice.","Returns the base-2 logarithm of the alignment.","Creates a new pointer by mapping self’s address to a new …","Returns a bit mask that can be used to match this …","Extract the metadata component of a pointer.","Creates a new NonNull if ptr is non-null.","Creates an Alignment from a usize or returns None if it’…","Creates a new NonNull.","Creates an Alignment from a power-of-two usize.","Creates a null raw pointer.","Creates a null mutable raw pointer.","Returns the alignment for a type.","Adds an offset to a pointer.","Calculates the distance between two pointers. The returned …","Reads the value from src without moving it. This leaves the","Reads the value from self without moving it. This leaves …","Reads the value from src without moving it. This leaves the","Reads the value from self without moving it. This leaves …","Performs a volatile read of the value from src without …","Performs a volatile read of the value from self without …","Moves src into the pointed dst returning the previous dst …","Replaces the value at self with src returning the old …","Returns the size of the type associated with this vtable.","Forms a raw slice from a pointer and a length.","Creates a non-null raw slice from a thin pointer and a …","Forms a raw mutable slice from a pointer and a length.","Subtracts an offset from a pointer (convenience for …","Calculates the distance between two pointers <em>where it’s </em>…","Swaps the values at two mutable locations of the same …","Swaps the values at two mutable locations of the same …","Swaps count * size_of::&lt;T&gt;() bytes between the two regions …","Decompose a (possibly wide) pointer into its data pointer …","Creates a new pointer with the given address.","Convert an address back to a pointer picking up a …","Convert an address back to a mutable pointer picking up a …","Creates a pointer with the given address and no provenance.","Creates a pointer with the given address and no provenance.","Overwrites a memory location with the given value without …","Overwrites a memory location with the given value without …","Sets count * size_of::&lt;T&gt;() bytes of memory starting at dst…","Invokes memset on the specified pointer setting …","Overwrites a memory location with the given value without …","Overwrites a memory location with the given value without …","Performs a volatile write of a memory location with the …","Performs a volatile write of a memory location with the …","A single-threaded reference-counting pointer. ‘Rc’ …","A uniquely owned Rc.","Weak is a version of Rc that holds a non-owning reference …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Provides a raw pointer to the data.","Returns a raw pointer to the object T pointed to by this …","Converts to Rc&lt;[T]&gt;.","Converts to Rc&lt;T&gt;.","Makes a clone of the Rc pointer.","Makes a clone of the Weak pointer that points to the same …","Comparison for two Rcs.","Decrements the strong reference count on the Rc&lt;T&gt; …","Decrements the strong reference count on the Rc&lt;T&gt; …","Creates an empty CStr inside an Rc","Creates a new Rc&lt;T&gt; with the Default value for T.","Creates an empty [T] inside an Rc","Creates an empty str inside an Rc","Constructs a new Weak&lt;T&gt; without allocating any memory. …","Attempt to downcast the Rc&lt;dyn Any&gt; to a concrete type.","Downcasts the Rc&lt;dyn Any&gt; to a concrete type.","Creates a new Weak pointer to this allocation.","Creates a new weak reference to the UniqueRc.","Drops the Rc.","Drops the Weak pointer.","Equality for two Rcs.","Allocate a reference-counted slice and fill it by cloning v…","Allocate a reference-counted string slice and copy v into …","Converts a Path into an Rc by copying the Path data into a …","Converts a reference-counted string slice into a byte …","Allocate a reference-counted string slice and copy v into …","Converts a generic type T into an Rc&lt;T&gt;","Converts a PathBuf into an Rc&lt;Path&gt; by moving the PathBuf …","Returns the argument unchanged.","Converts a [T; N] into an Rc&lt;[T]&gt;.","Copies the string into a newly allocated Rc&lt;OsStr&gt;.","Allocate a reference-counted slice and move v’s items …","Converts a &amp;CStr into a Rc&lt;CStr&gt; by copying the contents …","Converts a CString into an Rc&lt;CStr&gt; by moving the CString …","Converts an OsString into an Rc&lt;OsStr&gt; by moving the …","Move a boxed object to a new reference counted …","Create a reference-counted pointer from a clone-on-write …","Returns the argument unchanged.","Returns the argument unchanged.","Takes each element in the Iterator and collects it into an …","Constructs an Rc&lt;T&gt; from a raw pointer.","Converts a raw pointer previously created by into_raw back …","Constructs an Rc&lt;T A&gt; from a raw pointer in the provided …","Converts a raw pointer previously created by into_raw back …","‘Greater than or equal to’ comparison for two Rcs.","Returns a mutable reference into the given Rc if there are","Returns a mutable reference into the given Rc without any …","Greater-than comparison for two Rcs.","Increments the strong reference count on the Rc&lt;T&gt; …","Increments the strong reference count on the Rc&lt;T&gt; …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the inner value if the Rc has exactly one strong …","Consumes the Rc returning the wrapped pointer.","Consumes the Weak&lt;T&gt; and turns it into a raw pointer.","Consumes the Rc returning the wrapped pointer and …","Consumes the Weak&lt;T&gt; returning the wrapped pointer and …","Converts the UniqueRc into a regular Rc.","‘Less than or equal to’ comparison for two Rcs.","Less-than comparison for two Rcs.","Makes a mutable reference into the given Rc.","Inequality for two Rcs.","Constructs a new Rc&lt;T&gt;.","Constructs a new Weak&lt;T&gt; without allocating any memory. …","Creates a new UniqueRc.","Constructs a new Rc&lt;T&gt; while giving you a Weak&lt;T&gt; to the …","Constructs a new Rc in the provided allocator.","Constructs a new Weak&lt;T&gt; without allocating any memory …","Creates a new UniqueRc in the provided allocator.","Constructs a new Rc with uninitialized contents.","Constructs a new Rc with uninitialized contents in the …","Constructs a new reference-counted slice with …","Constructs a new reference-counted slice with …","Constructs a new Rc with uninitialized contents with the …","Constructs a new Rc with uninitialized contents with the …","Constructs a new reference-counted slice with …","Constructs a new reference-counted slice with …","Partial comparison for two Rcs.","Constructs a new Pin&lt;Rc&lt;T&gt;&gt;. If T does not implement Unpin…","Constructs a new Pin&lt;Rc&lt;T&gt;&gt; in the provided allocator. If T…","Returns true if the two Rcs point to the same allocation …","Returns true if the two Weaks point to the same allocation …","Gets the number of strong (Rc) pointers to this allocation.","Gets the number of strong (Rc) pointers pointing to this …","Constructs a new Rc&lt;T&gt; returning an error if the …","Constructs a new Rc&lt;T&gt; in the provided allocator …","Constructs a new Rc with uninitialized contents returning …","Constructs a new Rc with uninitialized contents in the …","Constructs a new Rc with uninitialized contents with the …","Constructs a new Rc with uninitialized contents with the …","Returns the inner value if the Rc has exactly one strong …","If we have the only reference to T then unwrap it. …","Attempts to upgrade the Weak pointer to an Rc delaying …","Gets the number of Weak pointers to this allocation.","Gets the number of Weak pointers pointing to this …","Contains the error value","An iterator over the value in a Ok variant of a Result.","An iterator over a reference to the Ok variant of a Result.","An iterator over a mutable reference to the Ok variant of …","Contains the success value","Result is a type that represents either success (Ok) or …","Returns res if the result is Ok otherwise returns the Err …","Calls op if the result is Ok otherwise returns the Err …","Converts from Result&lt;T E&gt; (or &amp;Result&lt;T E&gt;) to …","Converts from Result&lt;T E&gt; (or &amp;mut Result&lt;T E&gt;) to …","Converts from &amp;mut Result&lt;T E&gt; to Result&lt;&amp;mut T &amp;mut E&gt;.","Converts from &amp;Result&lt;T E&gt; to Result&lt;&amp;T &amp;E&gt;.","Maps a Result&lt;&amp;mut T E&gt; to a Result&lt;T E&gt; by cloning the …","Maps a Result&lt;&amp;T E&gt; to a Result&lt;T E&gt; by cloning the …","Maps a Result&lt;&amp;mut T E&gt; to a Result&lt;T E&gt; by copying the …","Maps a Result&lt;&amp;T E&gt; to a Result&lt;T E&gt; by copying the …","Converts from Result&lt;T E&gt; to Option&lt;E&gt;.","Returns the contained Ok value consuming the self value.","Returns the contained Err value consuming the self value.","Converts from Result&lt;Result&lt;T E&gt; E&gt; to Result&lt;T E&gt;","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Takes each element in the Iterator: if it is an Err no …","Calls a function with a reference to the contained value …","Calls a function with a reference to the contained value …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the contained Err value but never panics.","Returns a consuming iterator over the possibly contained …","Returns the contained Ok value but never panics.","Returns true if the result is Err.","Returns true if the result is Err and the value inside of …","Returns true if the result is Ok.","Returns true if the result is Ok and the value inside of …","Returns an iterator over the possibly contained value.","Returns a mutable iterator over the possibly contained …","Maps a Result&lt;T E&gt; to Result&lt;U E&gt; by applying a function …","Maps a Result&lt;T E&gt; to Result&lt;T F&gt; by applying a function …","Returns the provided default (if Err) or applies a …","Maps a Result&lt;T E&gt; to U by applying fallback function …","Converts from Result&lt;T E&gt; to Option&lt;T&gt;.","Returns res if the result is Err otherwise returns the Ok …","Calls op if the result is Err otherwise returns the Ok …","Takes each element in the Iterator: if it is an Err no …","Takes each element in the Iterator: if it is an Err no …","Transposes a Result of an Option into an Option of a Result…","Returns the contained Ok value consuming the self value.","Returns the contained Err value consuming the self value.","Returns the contained Err value consuming the self value …","Returns the contained Ok value or a provided default.","Returns the contained Ok value or a default","Returns the contained Ok value or computes it from a …","Returns the contained Ok value consuming the self value …","The number of bytes in a bitmask with this many lanes.","This type reinterpreted as bytes.","Map from the elements of the input vector to the output …","Specifies the number of lanes in a SIMD vector as a type.","A SIMD vector mask for N elements of width specified by …","The mask element type corresponding to this element type.","Marker trait for types that may be used as SIMD mask …","A SIMD vector with the shape of [T; N] but the operations …","Supporting trait for Simd::cast.  Typically doesn’t need …","Marker trait for types that may be used as SIMD vector …","This trait provides a possibly-temporary implementation of …","Statically guarantees that a lane count is marked as …","Create a vector from the elements of another vector.","Convert SIMD vectors to vectors of bytes","Returns the smallest integer greater than or equal to each …","Returns the smallest integer greater than or equal to each …","Traits for comparing and ordering vectors.","Create a new vector from the elements of first and second.","Create a new mask from the elements of first and second.","Produces a vector where every element has the cosine of …","Produces a vector where every element has the exponential …","Produces a vector where every element has the exponential …","A SIMD vector with one element of type f32.","A SIMD vector with 16 elements of type f32.","A SIMD vector with two elements of type f32.","A SIMD vector with 32 elements of type f32.","A SIMD vector with four elements of type f32.","A SIMD vector with 64 elements of type f32.","A SIMD vector with eight elements of type f32.","A SIMD vector with one element of type f64.","A SIMD vector with 16 elements of type f64.","A SIMD vector with two elements of type f64.","A SIMD vector with 32 elements of type f64.","A SIMD vector with four elements of type f64.","A SIMD vector with 64 elements of type f64.","A SIMD vector with eight elements of type f64.","Returns the largest integer value less than or equal to …","Returns the largest integer value less than or equal to …","Returns the floating point’s fractional value with its …","Returns the argument unchanged.","Create an integer value from its representation as a byte …","Create an integer value from its representation as a byte …","Create a native endian integer value from its memory …","A SIMD vector with one element of type i16.","A SIMD vector with 16 elements of type i16.","A SIMD vector with two elements of type i16.","A SIMD vector with 32 elements of type i16.","A SIMD vector with four elements of type i16.","A SIMD vector with 64 elements of type i16.","A SIMD vector with eight elements of type i16.","A SIMD vector with one element of type i32.","A SIMD vector with 16 elements of type i32.","A SIMD vector with two elements of type i32.","A SIMD vector with 32 elements of type i32.","A SIMD vector with four elements of type i32.","A SIMD vector with 64 elements of type i32.","A SIMD vector with eight elements of type i32.","A SIMD vector with one element of type i64.","A SIMD vector with 16 elements of type i64.","A SIMD vector with two elements of type i64.","A SIMD vector with 32 elements of type i64.","A SIMD vector with four elements of type i64.","A SIMD vector with 64 elements of type i64.","A SIMD vector with eight elements of type i64.","A SIMD vector with one element of type i8.","A SIMD vector with 16 elements of type i8.","A SIMD vector with two elements of type i8.","A SIMD vector with 32 elements of type i8.","A SIMD vector with four elements of type i8.","A SIMD vector with 64 elements of type i8.","A SIMD vector with eight elements of type i8.","Calls U::from(self).","A SIMD vector with one element of type isize.","A SIMD vector with 16 elements of type isize.","A SIMD vector with two elements of type isize.","A SIMD vector with 32 elements of type isize.","A SIMD vector with four elements of type isize.","A SIMD vector with 64 elements of type isize.","A SIMD vector with eight elements of type isize.","Produces a vector where every element has the natural …","Produces a vector where every element has the logarithm …","Produces a vector where every element has the logarithm …","Produces a vector where every element has the base-10 …","Produces a vector where every element has the base-2 …","A SIMD mask with one element for vectors with 16-bit …","A SIMD mask with 16 elements for vectors with 16-bit …","A SIMD mask with two elements for vectors with 16-bit …","A SIMD mask with 32 elements for vectors with 16-bit …","A SIMD mask with four elements for vectors with 16-bit …","A SIMD mask with 64 elements for vectors with 16-bit …","A SIMD mask with eight elements for vectors with 16-bit …","A SIMD mask with one element for vectors with 32-bit …","A SIMD mask with 16 elements for vectors with 32-bit …","A SIMD mask with two elements for vectors with 32-bit …","A SIMD mask with 32 elements for vectors with 32-bit …","A SIMD mask with four elements for vectors with 32-bit …","A SIMD mask with 64 elements for vectors with 32-bit …","A SIMD mask with eight elements for vectors with 32-bit …","A SIMD mask with one element for vectors with 64-bit …","A SIMD mask with 16 elements for vectors with 64-bit …","A SIMD mask with two elements for vectors with 64-bit …","A SIMD mask with 32 elements for vectors with 64-bit …","A SIMD mask with four elements for vectors with 64-bit …","A SIMD mask with 64 elements for vectors with 64-bit …","A SIMD mask with eight elements for vectors with 64-bit …","A SIMD mask with one element for vectors with 8-bit …","A SIMD mask with 16 elements for vectors with 8-bit …","A SIMD mask with two elements for vectors with 8-bit …","A SIMD mask with 32 elements for vectors with 8-bit …","A SIMD mask with four elements for vectors with 8-bit …","A SIMD mask with 64 elements for vectors with 8-bit …","A SIMD mask with eight elements for vectors with 8-bit …","A SIMD mask with one element for vectors with …","A SIMD mask with 16 elements for vectors with …","A SIMD mask with two elements for vectors with …","A SIMD mask with 32 elements for vectors with …","A SIMD mask with four elements for vectors with …","A SIMD mask with 64 elements for vectors with …","A SIMD mask with eight elements for vectors with …","Elementwise fused multiply-add. Computes (self * a) + b …","Elementwise fused multiply-add. Computes (self * a) + b …","Traits for vectors with numeric elements.","The portable SIMD prelude.","Traits for vectors of pointers.","Rounds to the nearest integer value. Ties round toward …","Rounds to the nearest integer value. Ties round toward …","Constructs a new SIMD vector by copying elements from …","Produces a vector where every element has the sine of the …","Produces a vector where every element has the square root …","Produces a vector where every element has the square root …","Create a new vector from the elements of vector.","Create a new mask from the elements of mask.","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Return the memory representation of this integer as a byte …","Returns the floating point’s integer value with its …","Returns the floating point’s integer value with its …","A SIMD vector with one element of type u16.","A SIMD vector with 16 elements of type u16.","A SIMD vector with two elements of type u16.","A SIMD vector with 32 elements of type u16.","A SIMD vector with four elements of type u16.","A SIMD vector with 64 elements of type u16.","A SIMD vector with eight elements of type u16.","A SIMD vector with one element of type u32.","A SIMD vector with 16 elements of type u32.","A SIMD vector with two elements of type u32.","A SIMD vector with 32 elements of type u32.","A SIMD vector with four elements of type u32.","A SIMD vector with 64 elements of type u32.","A SIMD vector with eight elements of type u32.","A SIMD vector with one element of type u64.","A SIMD vector with 16 elements of type u64.","A SIMD vector with two elements of type u64.","A SIMD vector with 32 elements of type u64.","A SIMD vector with four elements of type u64.","A SIMD vector with 64 elements of type u64.","A SIMD vector with eight elements of type u64.","A SIMD vector with one element of type u8.","A SIMD vector with 16 elements of type u8.","A SIMD vector with two elements of type u8.","A SIMD vector with 32 elements of type u8.","A SIMD vector with four elements of type u8.","A SIMD vector with 64 elements of type u8.","A SIMD vector with eight elements of type u8.","A SIMD vector with one element of type usize.","A SIMD vector with 16 elements of type usize.","A SIMD vector with two elements of type usize.","A SIMD vector with 32 elements of type usize.","A SIMD vector with four elements of type usize.","A SIMD vector with 64 elements of type usize.","A SIMD vector with eight elements of type usize.","The mask type returned by each comparison.","Parallel Ord.","Parallel PartialEq.","Parallel PartialOrd.","Restrict each element to a certain interval.","Test if each element is equal to the corresponding element …","Test if each element is greater than or equal to the …","Test if each element is greater than the corresponding …","Test if each element is less than or equal to the …","Test if each element is less than the corresponding …","Returns the element-wise maximum with other.","Returns the element-wise minimum with other.","Test if each element is equal to the corresponding element …","Bit representation of this SIMD vector type.","A SIMD vector with a different element type.","A SIMD vector with a different element type.","A SIMD vector with a different element type.","Mask type used for manipulating this SIMD vector type.","Mask type used for manipulating this SIMD vector type.","Scalar type contained by this SIMD vector type.","Scalar type contained by this SIMD vector type.","Scalar type contained by this SIMD vector type.","Operations on SIMD vectors of floats.","Operations on SIMD vectors of signed integers.","Operations on SIMD vectors of unsigned integers.","A SIMD vector of unsigned integers with the same element …","Produces a vector where every element has the absolute …","Lanewise absolute value implemented in Rust. Every …","Performs elementwise conversion of this vector’s …","Performs elementwise conversion of this vector’s …","Performs elementwise conversion of this vector’s …","Returns each element with the magnitude of self and the …","Raw transmutation from an unsigned integer vector type …","Returns true for each element if its value is neither …","Returns true for each element if its value is positive …","Returns true for each element if its value is NaN.","Returns true for each negative element and false if it is …","Returns true for each element if its value is neither …","Returns true for each positive element and false if it is …","Returns true for each element if it has a negative sign …","Returns true for each element if it has a positive sign …","Returns true for each element if its value is subnormal.","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Takes the reciprocal (inverse) of each element 1/x.","Returns the cumulative bitwise “and” across the …","Returns the cumulative bitwise “and” across the …","Returns the maximum element in the vector.","Returns the maximum element in the vector.","Returns the maximum element in the vector.","Returns the minimum element in the vector.","Returns the minimum element in the vector.","Returns the minimum element in the vector.","Returns the cumulative bitwise “or” across the …","Returns the cumulative bitwise “or” across the …","Reducing multiply.  Returns the product of the elements of …","Returns the product of the elements of the vector with …","Returns the product of the elements of the vector with …","Returns the sum of the elements of the vector.","Returns the sum of the elements of the vector with …","Returns the sum of the elements of the vector with …","Returns the cumulative bitwise “xor” across the …","Returns the cumulative bitwise “xor” across the …","Reverses the order of bits in each elemnent. The least …","Reverses the order of bits in each elemnent. The least …","Lanewise saturating absolute value implemented in Rust. …","Lanewise saturating add.","Lanewise saturating add.","Lanewise saturating negation implemented in Rust. As …","Lanewise saturating subtract.","Lanewise saturating subtract.","Replaces each element with a number that represents its …","Returns numbers representing the sign of each element.","Restrict each element to a certain interval unless it is …","Returns the maximum of each element.","Returns the minimum of each element.","Reverses the byte order of each element.","Reverses the byte order of each element.","Raw transmutation to an unsigned integer vector type with …","Converts each element from radians to degrees.","Rounds toward zero and converts to the same-width integer …","Converts each element from degrees to radians.","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","Wrapping negation.","Bit representation of this SIMD vector type.","A SIMD vector with a different element type.","A SIMD vector with a different element type.","A SIMD vector with a different element type.","Vector of const pointers with the same number of elements.","Vector of const pointers with the same number of elements.","Vector of constant pointers to the same type.","Vector of isize with the same number of elements.","Vector of isize with the same number of elements.","Number of elements in this vector.","A SIMD vector mask for N elements of width specified by …","Mask type used for manipulating this SIMD vector type.","Mask type used for manipulating this SIMD vector type.","Mask type used for manipulating this SIMD vector type.","Mask type used for manipulating this SIMD vector type.","The mask type returned by each comparison.","Vector of mutable pointers to the same type.","Scalar type contained by this SIMD vector type.","Scalar type contained by this SIMD vector type.","Scalar type contained by this SIMD vector type.","A SIMD vector with the shape of [T; N] but the operations …","Operations on SIMD vectors of constant pointers.","Operations on SIMD vectors of floats.","Operations on SIMD vectors of signed integers.","Operations on SIMD vectors of mutable pointers.","Parallel Ord.","Parallel PartialEq.","Parallel PartialOrd.","Operations on SIMD vectors of unsigned integers.","A SIMD vector of unsigned integers with the same element …","Vector of usize with the same number of elements.","Vector of usize with the same number of elements.","Produces a vector where every element has the absolute …","Lanewise absolute value implemented in Rust. Every …","Gets the “address” portion of the pointer.","Gets the “address” portion of the pointer.","Returns true if all elements are set or false otherwise.","Returns true if any element is set or false otherwise.","Returns an array reference containing the entire SIMD …","Returns a mutable array reference containing the entire …","Performs elementwise conversion of this vector’s …","Performs elementwise conversion of this vector’s …","Performs elementwise conversion of this vector’s …","Casts to a pointer of another type.","Casts to a pointer of another type.","Converts the mask to a mask of any other element size.","Changes constness without changing the type.","Changes constness without changing the type.","Writes a SIMD vector to the first N elements of a slice.","Returns each element with the magnitude of self and the …","Deinterleave two vectors.","Exposes the “provenance” part of the pointer for …","Exposes the “provenance” part of the pointer for …","A SIMD vector with one element of type f32.","A SIMD vector with 16 elements of type f32.","A SIMD vector with two elements of type f32.","A SIMD vector with 32 elements of type f32.","A SIMD vector with four elements of type f32.","A SIMD vector with 64 elements of type f32.","A SIMD vector with eight elements of type f32.","A SIMD vector with one element of type f64.","A SIMD vector with 16 elements of type f64.","A SIMD vector with two elements of type f64.","A SIMD vector with 32 elements of type f64.","A SIMD vector with four elements of type f64.","A SIMD vector with 64 elements of type f64.","A SIMD vector with eight elements of type f64.","Find the index of the first set element.","A Simd&lt;T N&gt; has a debug format like the one for [T]:","Returns the argument unchanged.","Returns the argument unchanged.","Converts an array of bools to a SIMD mask.","Converts an array to a SIMD vector.","Create a mask from a bitmask.","Create a mask from a bitmask vector.","Raw transmutation from an unsigned integer vector type …","Converts a vector of integers to a mask where 0 …","Converts a vector of integers to a mask where 0 …","Converts a slice to a SIMD vector containing slice[..N].","Reads from potentially discontiguous indices in slice to …","Reads from indices in slice to construct a SIMD vector. If …","Read elementwise from pointers into a SIMD vector.","Reads from indices in slice to construct a SIMD vector. …","Conditionally read elementwise from pointers into a SIMD …","Reads from indices in slice to construct a SIMD vector. …","A SIMD vector with one element of type i16.","A SIMD vector with 16 elements of type i16.","A SIMD vector with two elements of type i16.","A SIMD vector with 32 elements of type i16.","A SIMD vector with four elements of type i16.","A SIMD vector with 64 elements of type i16.","A SIMD vector with eight elements of type i16.","A SIMD vector with one element of type i32.","A SIMD vector with 16 elements of type i32.","A SIMD vector with two elements of type i32.","A SIMD vector with 32 elements of type i32.","A SIMD vector with four elements of type i32.","A SIMD vector with 64 elements of type i32.","A SIMD vector with eight elements of type i32.","A SIMD vector with one element of type i64.","A SIMD vector with 16 elements of type i64.","A SIMD vector with two elements of type i64.","A SIMD vector with 32 elements of type i64.","A SIMD vector with four elements of type i64.","A SIMD vector with 64 elements of type i64.","A SIMD vector with eight elements of type i64.","A SIMD vector with one element of type i8.","A SIMD vector with 16 elements of type i8.","A SIMD vector with two elements of type i8.","A SIMD vector with 32 elements of type i8.","A SIMD vector with four elements of type i8.","A SIMD vector with 64 elements of type i8.","A SIMD vector with eight elements of type i8.","Interleave two vectors.","Calls U::from(self).","Calls U::from(self).","Returns true for each element if its value is neither …","Returns true for each element if its value is positive …","Returns true for each element if its value is NaN.","Returns true for each negative element and false if it is …","Returns true for each element if its value is neither …","Returns true for each element that is null.","Returns true for each element that is null.","Returns true for each positive element and false if it is …","Returns true for each element if it has a negative sign …","Returns true for each element if it has a positive sign …","Returns true for each element if its value is subnormal.","A SIMD vector with one element of type isize.","A SIMD vector with 16 elements of type isize.","A SIMD vector with two elements of type isize.","A SIMD vector with 32 elements of type isize.","A SIMD vector with four elements of type isize.","A SIMD vector with 64 elements of type isize.","A SIMD vector with eight elements of type isize.","Returns the number of leading ones in the binary …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the number of elements in this SIMD vector.","Reads contiguous elements from slice. Elements are read so …","Reads contiguous elements from slice. Elements are read so …","Reads contiguous elements from slice. Each element is read …","Reads contiguous elements from slice. Each element is read …","Reads contiguous elements starting at ptr. Each element is …","Reads contiguous elements from slice. Each element is read …","A SIMD mask with one element for vectors with 16-bit …","A SIMD mask with 16 elements for vectors with 16-bit …","A SIMD mask with two elements for vectors with 16-bit …","A SIMD mask with 32 elements for vectors with 16-bit …","A SIMD mask with four elements for vectors with 16-bit …","A SIMD mask with 64 elements for vectors with 16-bit …","A SIMD mask with eight elements for vectors with 16-bit …","A SIMD mask with one element for vectors with 32-bit …","A SIMD mask with 16 elements for vectors with 32-bit …","A SIMD mask with two elements for vectors with 32-bit …","A SIMD mask with 32 elements for vectors with 32-bit …","A SIMD mask with four elements for vectors with 32-bit …","A SIMD mask with 64 elements for vectors with 32-bit …","A SIMD mask with eight elements for vectors with 32-bit …","A SIMD mask with one element for vectors with 64-bit …","A SIMD mask with 16 elements for vectors with 64-bit …","A SIMD mask with two elements for vectors with 64-bit …","A SIMD mask with 32 elements for vectors with 64-bit …","A SIMD mask with four elements for vectors with 64-bit …","A SIMD mask with 64 elements for vectors with 64-bit …","A SIMD mask with eight elements for vectors with 64-bit …","A SIMD mask with one element for vectors with 8-bit …","A SIMD mask with 16 elements for vectors with 8-bit …","A SIMD mask with two elements for vectors with 8-bit …","A SIMD mask with 32 elements for vectors with 8-bit …","A SIMD mask with four elements for vectors with 8-bit …","A SIMD mask with 64 elements for vectors with 8-bit …","A SIMD mask with eight elements for vectors with 8-bit …","A SIMD mask with one element for vectors with …","A SIMD mask with 16 elements for vectors with …","A SIMD mask with two elements for vectors with …","A SIMD mask with 32 elements for vectors with …","A SIMD mask with four elements for vectors with …","A SIMD mask with 64 elements for vectors with …","A SIMD mask with eight elements for vectors with …","Takes the reciprocal (inverse) of each element 1/x.","Returns the cumulative bitwise “and” across the …","Returns the cumulative bitwise “and” across the …","Returns the maximum element in the vector.","Returns the maximum element in the vector.","Returns the maximum element in the vector.","Returns the minimum element in the vector.","Returns the minimum element in the vector.","Returns the minimum element in the vector.","Returns the cumulative bitwise “or” across the …","Returns the cumulative bitwise “or” across the …","Reducing multiply.  Returns the product of the elements of …","Returns the product of the elements of the vector with …","Returns the product of the elements of the vector with …","Returns the sum of the elements of the vector.","Returns the sum of the elements of the vector with …","Returns the sum of the elements of the vector with …","Returns the cumulative bitwise “xor” across the …","Returns the cumulative bitwise “xor” across the …","Resize a vector.","Reverse the order of the elements in the vector.","Reverses the order of bits in each elemnent. The least …","Reverses the order of bits in each elemnent. The least …","Rotates the vector such that the first OFFSET elements of …","Rotates the vector such that the first self.len() - OFFSET …","Lanewise saturating absolute value implemented in Rust. …","Lanewise saturating add.","Lanewise saturating add.","Lanewise saturating negation implemented in Rust. As …","Lanewise saturating subtract.","Lanewise saturating subtract.","Writes the values in a SIMD vector to potentially …","Write pointers elementwise into a SIMD vector.","Writes values from a SIMD vector to multiple potentially …","Conditionally write pointers elementwise into a SIMD …","Writes values from a SIMD vector to multiple potentially …","Choose elements from two vectors.","Choose elements from two masks.","Sets the value of the specified element.","Sets the value of the specified element.","Replaces each element with a number that represents its …","Returns numbers representing the sign of each element.","Restrict each element to a certain interval unless it is …","Restrict each element to a certain interval.","Test if each element is equal to the corresponding element …","Test if each element is greater than or equal to the …","Test if each element is greater than the corresponding …","Test if each element is less than or equal to the …","Test if each element is less than the corresponding …","Returns the maximum of each element.","Returns the element-wise maximum with other.","Returns the minimum of each element.","Returns the element-wise minimum with other.","Test if each element is equal to the corresponding element …","Constructs a new SIMD vector by copying elements from …","Construct a mask by setting all elements to the given …","Constructs a new SIMD vector with all elements set to the …","Conditionally write contiguous elements to slice. The …","Conditionally write contiguous elements starting from ptr. …","Conditionally write contiguous elements to slice. The …","Reverses the byte order of each element.","Reverses the byte order of each element.","Swizzle a vector of bytes according to the index vector. …","Tests the value of the specified element.","Tests the value of the specified element.","Converts a SIMD mask to an array of bools.","Converts a SIMD vector to an array.","Create a bitmask from a mask.","Create a bitmask vector from a mask.","Raw transmutation to an unsigned integer vector type with …","Converts each element from radians to degrees.","Converts the mask to a vector of integers where 0 …","Rounds toward zero and converts to the same-width integer …","Converts each element from degrees to radians.","Returns the number of trailing ones in the binary …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","A SIMD vector with one element of type u16.","A SIMD vector with 16 elements of type u16.","A SIMD vector with two elements of type u16.","A SIMD vector with 32 elements of type u16.","A SIMD vector with four elements of type u16.","A SIMD vector with 64 elements of type u16.","A SIMD vector with eight elements of type u16.","A SIMD vector with one element of type u32.","A SIMD vector with 16 elements of type u32.","A SIMD vector with two elements of type u32.","A SIMD vector with 32 elements of type u32.","A SIMD vector with four elements of type u32.","A SIMD vector with 64 elements of type u32.","A SIMD vector with eight elements of type u32.","A SIMD vector with one element of type u64.","A SIMD vector with 16 elements of type u64.","A SIMD vector with two elements of type u64.","A SIMD vector with 32 elements of type u64.","A SIMD vector with four elements of type u64.","A SIMD vector with 64 elements of type u64.","A SIMD vector with eight elements of type u64.","A SIMD vector with one element of type u8.","A SIMD vector with 16 elements of type u8.","A SIMD vector with two elements of type u8.","A SIMD vector with 32 elements of type u8.","A SIMD vector with four elements of type u8.","A SIMD vector with 64 elements of type u8.","A SIMD vector with eight elements of type u8.","A SIMD vector with one element of type usize.","A SIMD vector with 16 elements of type usize.","A SIMD vector with two elements of type usize.","A SIMD vector with 32 elements of type usize.","A SIMD vector with four elements of type usize.","A SIMD vector with 64 elements of type usize.","A SIMD vector with eight elements of type usize.","Creates a new pointer with the given address.","Creates a new pointer with the given address.","Convert an address back to a pointer picking up a …","Convert an address back to a pointer picking up a …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Wrapping negation.","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Vector of const pointers with the same number of elements.","Vector of const pointers with the same number of elements.","Vector of constant pointers to the same type.","Vector of isize with the same number of elements.","Vector of isize with the same number of elements.","Mask type used for manipulating this SIMD vector type.","Mask type used for manipulating this SIMD vector type.","Vector of mutable pointers to the same type.","Operations on SIMD vectors of constant pointers.","Operations on SIMD vectors of mutable pointers.","Vector of usize with the same number of elements.","Vector of usize with the same number of elements.","Gets the “address” portion of the pointer.","Gets the “address” portion of the pointer.","Casts to a pointer of another type.","Casts to a pointer of another type.","Changes constness without changing the type.","Changes constness without changing the type.","Exposes the “provenance” part of the pointer for …","Exposes the “provenance” part of the pointer for …","Returns true for each element that is null.","Returns true for each element that is null.","Creates a new pointer with the given address.","Creates a new pointer with the given address.","Convert an address back to a pointer picking up a …","Convert an address back to a pointer picking up a …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","Calculates the offset from a pointer using wrapping …","An iterator over a slice in (non-overlapping) chunks (N …","An iterator over a slice in (non-overlapping) mutable …","A windowed iterator over a slice in overlapping chunks (N …","An iterator over slice in (non-overlapping) chunks …","An iterator over slice in (non-overlapping) mutable chunks …","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) mutable …","An iterator over a slice in (non-overlapping) mutable …","Helper trait for [T]::concat.","An iterator over the escaped version of a byte slice.","Immutable slice iterator","Mutable slice iterator.","Helper trait for [T]::join","The resulting type after concatenation","The resulting type after concatenation","The output type returned by methods.","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) chunks (…","An iterator over a slice in (non-overlapping) mutable …","An iterator over a slice in (non-overlapping) mutable …","An iterator over subslices separated by elements that …","An iterator over the subslices of the vector which are …","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","A helper trait used for indexing operations.","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","An iterator over the mutable subslices of the vector which …","An iterator over the mutable subslices of the vector which …","An iterator over subslices separated by elements that …","An iterator over subslices separated by elements that …","An iterator over overlapping subslices of length size.","Views the underlying data as a mutable subslice of the …","Views the underlying data as a subslice of the original …","Views the underlying data as a subslice of the original …","Returns a slice which contains items not yet handled by …","Implementation of [T]::concat","Creates an empty slice iterator.","Creates an empty slice iterator.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a reference to T into a slice of length 1 …","Forms a mutable slice from a pointer range.","Forms a slice from a pointer range.","Forms a slice from a pointer and a length.","Performs the same functionality as from_raw_parts except …","Converts a reference to T into a slice of length 1 …","Returns a shared reference to the output at this location …","Returns a mutable reference to the output at this …","Returns a pointer to the output at this location without …","Returns a mutable pointer to the output at this location …","Returns a shared reference to the output at this location …","Returns a mutable reference to the output at this …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Views the underlying data as a subslice of the original …","Implementation of [T]::join","Performs bounds-checking of a range.","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Returns the remainder of the original slice that is not …","Performs bounds-checking of a range without panicking.","An iterator over the bytes of a string slice.","An iterator over the chars of a string slice and their …","An iterator over the chars of a string slice.","An iterator of u16 over the string encoded as UTF-16.","The associated error which can be returned from parsing.","The return type of str::escape_debug.","The return type of str::escape_default.","The return type of str::escape_unicode.","Parse a value from a string","An iterator over the lines of a string as string slices.","Created with the method lines_any.","Created with the method match_indices.","Created with the method matches.","An error returned when parsing a bool using from_str fails","Created with the method rmatch_indices.","Created with the method rmatches.","Created with the method rsplit.","Created with the method rsplitn.","Created with the method rsplit_terminator.","Created with the method split.","An iterator over the non-ASCII-whitespace substrings of a …","An iterator over the substrings of a string terminated by …","Created with the method splitn.","Created with the method split_terminator.","An iterator over the non-whitespace substrings of a string","An item returned by the Utf8Chunks iterator.","An iterator used to decode a slice of mostly UTF-8 bytes …","Errors which can occur when attempting to interpret a …","Views the underlying data as a subslice of the original …","Views the underlying data as a subslice of the original …","Provides more information about the failure:","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a boxed slice of bytes to a boxed string slice …","Creates an &amp;str from a pointer and a length.","Creates an &amp;mut str from a pointer and a length.","Parses a string s to return a value of this type.","Converts a slice of bytes to a string slice.","Converts a mutable slice of bytes to a mutable string …","Converts a slice of bytes to a string slice without …","Converts a slice of bytes to a string slice without …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the invalid sequence that caused a failure.","Returns the byte position of the next character or the …","The string Pattern API.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns remainder of the split string.","Returns the remaining lines of the split string.","Returns remainder of the split string","Returns remainder of the split string.","Returns the next validated UTF-8 substring.","Returns the index in the given string up to which valid …","Associated type for &lt;&amp;[char; N] as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;[char; N] as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;F as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;char as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Associated type for &lt;&amp;[char] as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Expresses that every byte of the haystack has been …","A marker trait to express that a ReverseSearcher can be …","Expresses that a match of the pattern has been found at …","A string pattern.","Expresses that haystack[a..b] has been rejected as a …","A reverse searcher for a string pattern.","Result of calling Searcher::next() or …","A searcher for a string pattern.","Associated searcher for this pattern","Associated type for &lt;&amp;str as Pattern&lt;&#39;a&gt;&gt;::Searcher.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Getter for the underlying string to be searched in","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Constructs the associated searcher from self and the …","Checks whether the pattern matches anywhere in the haystack","Checks whether the pattern matches at the front of the …","Checks whether the pattern matches at the back of the …","Performs the next search step starting from the front.","Performs the next search step starting from the back.","Finds the next Match result. See next().","Finds the next Match result. See next_back().","Finds the next Reject result. See next() and next_match().","Finds the next Reject result. See next_back().","Removes the pattern from the front of haystack if it …","Removes the pattern from the back of haystack if it …","A draining iterator for String.","A possible error value when converting a String from a …","A possible error value when converting a String from a …","A type alias for Infallible.","A UTF-8–encoded growable string.","A trait for converting a value to a String.","Returns a byte slice of this String’s contents.","Returns a slice of u8s bytes that were attempted to …","Converts a String into a mutable string slice.","Returns a mutable reference to the contents of this String.","Returns the remaining (sub)string of this iterator as a …","Extracts a string slice containing the entire String.","Returns this String’s capacity in bytes.","Truncates this String removing all contents.","Clones the contents of source into self.","Creates an empty String.","Removes the specified range from the string in bulk …","Copies elements from src range to the end of the string.","Returns the argument unchanged.","Converts a clone-on-write string to an owned instance of …","Converts a &amp;mut str into a String.","Converts a &amp;String into a String.","Converts a &amp;str into a String.","Converts the given boxed str slice to a String. It is …","Allocates an owned String from a single character.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new String from a pointer a length and a …","Decode a UTF-16–encoded vector v into a String …","Decode a UTF-16–encoded slice v into a String replacing …","Decode a UTF-16BE–encoded vector v into a String …","Decode a UTF-16BE–encoded slice v into a String …","Decode a UTF-16LE–encoded vector v into a String …","Decode a UTF-16LE–encoded slice v into a String …","Converts a vector of bytes to a String.","Converts a slice of bytes to a string including invalid …","Converts a vector of bytes to a String without checking …","Inserts a character into this String at a byte position.","Inserts a string slice into this String at a byte position.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Converts this String into a Box&lt;str&gt;.","Converts a String into a byte vector.","Returns the bytes that were attempted to convert to a …","Decomposes a String into its raw components: …","Returns true if this String has a length of zero and false…","Consumes and leaks the String returning a mutable …","Returns the length of this String in bytes not chars or …","Creates a new empty String.","Removes the last character from the string buffer and …","Appends the given char to the end of this String.","Appends a given string slice onto the end of this String.","Removes a char from this String at a byte position and …","Remove all matches of pattern pat in the String.","Removes the specified range in the string and replaces it …","Reserves capacity for at least additional bytes more than …","Reserves the minimum capacity for at least additional …","Retains only the characters specified by the predicate.","Shrinks the capacity of this String with a lower bound.","Shrinks the capacity of this String to match its length.","Splits the string into two at the given byte index.","Converts the given value to a String.","Shortens this String to the specified length.","Tries to reserve capacity for at least additional bytes …","Tries to reserve the minimum capacity for at least …","Creates a new empty String with at least the specified …","Fetch a Utf8Error to get more details about the conversion …","Creates a new empty String with at least the specified …","A thread-safe reference-counting pointer. ‘Arc’ stands …","A barrier enables multiple threads to synchronize the …","A BarrierWaitResult is returned by Barrier::wait() when …","A Condition Variable","Contains the error value","Contains the error value","Exclusive provides only <em>mutable</em> access also referred to …","A value which is initialized on the first access.","A type alias for the result of a lock method which can be …","An RAII mutex guard returned by MutexGuard::map which can …","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Initialization value for static Once values.","Contains the success value","Contains the success value","A low-level synchronization primitive for one-time global …","A synchronization primitive which can nominally be written …","State yielded to Once::call_once_force()’s closure …","A type of error which can be returned whenever a lock is …","The lock could not be acquired because another thread …","A re-entrant mutual exclusion lock","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","An enumeration of possible errors associated with a …","A type alias for the result of a nonblocking locking …","A type indicating whether a timed wait on a condition …","Weak is a version of Arc that holds a non-owning reference …","The lock could not be acquired at this time because the …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Provides a raw pointer to the data.","Returns a raw pointer to the object T pointed to by this …","Converts to Arc&lt;[T]&gt;.","Converts to Arc&lt;T&gt;.","Atomic types","Performs an initialization routine once and only once. The …","Performs the same function as call_once() except ignores …","Clear the poisoned state from a mutex.","Clear the poisoned state from a lock.","Makes a clone of the Arc pointer.","Makes a clone of the Weak pointer that points to the same …","Comparison for two Arcs.","Decrements the strong reference count on the Arc&lt;T&gt; …","Decrements the strong reference count on the Arc&lt;T&gt; …","Creates an empty CStr inside an Arc","Creates an empty [T] inside an Arc","Creates an empty str inside an Arc","Creates a new Arc&lt;T&gt; with the Default value for T.","Constructs a new Weak&lt;T&gt; without allocating memory. …","Creates a Condvar which is ready to be waited on and …","Creates a new lazy value using Default as the initializing …","Creates a Mutex&lt;T&gt; with the Default value for T.","Creates a new empty cell.","Creates a new RwLock&lt;T&gt; with the Default value for T.","Dereferences the value.","Attempt to downcast the Arc&lt;dyn Any + Send + Sync&gt; to a …","Downcasts the Arc&lt;dyn Any + Send + Sync&gt; to a concrete …","Creates a new Weak pointer to this allocation.","Drops the Arc.","Drops the Weak pointer.","Equality for two Arcs.","Forces the evaluation of this lazy value and returns a …","Allocate a reference-counted str and copy v into it.","Converts an atomically reference-counted string slice into …","Converts a Path into an Arc by copying the Path data into …","Converts a PathBuf into an Arc&lt;Path&gt; by moving the PathBuf …","Converts a &amp;CStr into a Arc&lt;CStr&gt; by copying the contents …","Allocate a reference-counted str and copy v into it.","Move a boxed object to a new reference-counted allocation.","Copies the string into a newly allocated Arc&lt;OsStr&gt;.","Converts an OsString into an Arc&lt;OsStr&gt; by moving the …","Allocate a reference-counted slice and fill it by cloning v…","Allocate a reference-counted slice and move v’s items …","Create an atomically reference-counted pointer from a …","Converts a T into an Arc&lt;T&gt;","Converts a CString into an Arc&lt;CStr&gt; by moving the CString …","Converts a [T; N] into an Arc&lt;[T]&gt;.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new mutex in an unlocked state ready for use. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new cell with its contents set to value.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new instance of an RwLock&lt;T&gt; which is unlocked. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Takes each element in the Iterator and collects it into an …","Build a <em>mutable</em> reference to an Exclusive&lt;T&gt; from a <em>mutable</em>…","Build a <em>pinned mutable</em> reference to an Exclusive&lt;T&gt; from a …","Constructs an Arc&lt;T&gt; from a raw pointer.","Converts a raw pointer previously created by into_raw back …","Constructs an Arc&lt;T A&gt; from a raw pointer.","Converts a raw pointer previously created by into_raw back …","‘Greater than or equal to’ comparison for two Arcs.","Gets the reference to the underlying value.","Returns a mutable reference into the given Arc if there …","Returns a mutable reference to the underlying data.","Gets the mutable reference to the underlying value.","Reaches into this error indicating that a lock is …","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Get exclusive access to the underlying value.","Gets the mutable reference of the contents of the cell …","Gets the mutable reference of the contents of the cell …","Returns a mutable reference into the given Arc without …","Gets the contents of the cell initializing it with f if …","Gets the contents of the cell initializing it with f if …","Get pinned exclusive access to the underlying value.","Reaches into this error indicating that a lock is …","Greater-than comparison for two Arcs.","Increments the strong reference count on the Arc&lt;T&gt; …","Increments the strong reference count on the Arc&lt;T&gt; …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns the inner value if the Arc has exactly one strong …","Consumes this LazyLock returning the stored value.","Consumes this mutex returning the underlying data.","Consumes the OnceLock returning the wrapped value. Returns","Consumes this error indicating that a lock is poisoned …","Consumes this lock returning the underlying data.","Consumes this RwLock returning the underlying data.","Unwrap the value contained in the Exclusive","Consumes the Arc returning the wrapped pointer.","Consumes the Weak&lt;T&gt; and turns it into a raw pointer.","Consumes the Arc returning the wrapped pointer and …","Consumes the Weak&lt;T&gt; returning the wrapped pointer and …","Returns true if some call_once() call has completed …","Returns true if this thread is the “leader thread” for …","Determines whether the mutex is poisoned.","Returns true if the associated Once was poisoned prior to …","Determines whether the lock is poisoned.","‘Less than or equal to’ comparison for two Arcs.","Acquires a mutex blocking the current thread until it is …","Acquires the lock blocking the current thread until it is …","Less-than comparison for two Arcs.","Makes a mutable reference into the given Arc.","Makes a MappedMutexGuard for a component of the borrowed …","Makes a MappedMutexGuard for a component of the borrowed …","Makes a MappedRwLockReadGuard for a component of the …","Makes a MappedRwLockWriteGuard for a component of the …","Makes a MappedRwLockReadGuard for a component of the …","Makes a MappedRwLockWriteGuard for a component of the …","Multi-producer single-consumer FIFO queue communication …","Inequality for two Arcs.","Constructs a new Arc&lt;T&gt;.","Constructs a new Weak&lt;T&gt; without allocating any memory. …","Creates a new barrier that can block a given number of …","Creates a new condition variable which is ready to be …","Creates a new lazy value with the given initializing …","Creates a new mutex in an unlocked state ready for use.","Creates a new Once value.","Creates a new empty cell.","Creates a PoisonError.","Creates a new re-entrant lock in an unlocked state ready …","Creates a new instance of an RwLock&lt;T&gt; which is unlocked.","Wrap a value in an Exclusive","Constructs a new Arc&lt;T&gt; while giving you a Weak&lt;T&gt; to the …","Constructs a new Arc&lt;T&gt; in the provided allocator.","Constructs a new Weak&lt;T A&gt; without allocating any …","Constructs a new Arc with uninitialized contents.","Constructs a new Arc with uninitialized contents in the …","Constructs a new atomically reference-counted slice with …","Constructs a new atomically reference-counted slice with …","Constructs a new Arc with uninitialized contents with the …","Constructs a new Arc with uninitialized contents with the …","Constructs a new atomically reference-counted slice with …","Constructs a new atomically reference-counted slice with …","Wakes up all blocked threads on this condvar.","Wakes up one blocked thread on this condvar.","Partial comparison for two Arcs.","Constructs a new Pin&lt;Arc&lt;T&gt;&gt;. If T does not implement Unpin…","Constructs a new Pin&lt;Arc&lt;T A&gt;&gt; in the provided allocator. …","Returns true if the two Arcs point to the same allocation …","Returns true if the two Weaks point to the same allocation …","Locks this RwLock with shared read access blocking the …","Sets the contents of this cell to value.","Gets the number of strong (Arc) pointers to this …","Gets the number of strong (Arc) pointers pointing to this …","Takes the value out of this OnceLock moving it back to an …","Returns true if the wait was known to have timed out.","Sets the contents of this cell to value if the cell was …","Attempts to acquire this lock.","Makes a MappedMutexGuard for a component of the borrowed …","Makes a MappedMutexGuard for a component of the borrowed …","Makes a MappedRwLockReadGuard for a component of the …","Makes a MappedRwLockWriteGuard for a component of the …","Makes a MappedRwLockReadGuard for a component of the …","Makes a MappedRwLockWriteGuard for a component of the …","Constructs a new Arc&lt;T&gt; returning an error if allocation …","Constructs a new Arc&lt;T A&gt; in the provided allocator …","Constructs a new Arc with uninitialized contents …","Constructs a new Arc with uninitialized contents in the …","Constructs a new Arc with uninitialized contents with the …","Constructs a new Arc with uninitialized contents with the …","Constructs a new Pin&lt;Arc&lt;T&gt;&gt; return an error if …","Constructs a new Pin&lt;Arc&lt;T A&gt;&gt; in the provided allocator …","Attempts to acquire this RwLock with shared read access.","Returns the inner value if the Arc has exactly one strong …","Attempts to lock this RwLock with exclusive write access.","If we have the only reference to T then unwrap it. …","Attempts to upgrade the Weak pointer to an Arc delaying …","Blocks the current thread until all threads have …","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification …","Waits on this condition variable for a notification …","Waits on this condition variable for a notification …","Blocks the current thread until this condition variable …","Gets the number of Weak pointers to this allocation.","Gets an approximation of the number of Weak pointers …","Locks this RwLock with exclusive write access blocking …","An AtomicBool initialized to false.","An AtomicIsize initialized to 0.","An AtomicUsize initialized to 0.","Has the effects of both Acquire and Release together: For …","When coupled with a load if the loaded value was written …","A boolean type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","A raw pointer type which can be safely shared between …","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","Atomic memory orderings","No ordering constraints only atomic operations.","When coupled with a store all previous operations become …","Like Acquire/Release/AcqRel (for load store and …","Returns a mutable pointer to the underlying bool.","Returns a mutable pointer to the underlying pointer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Stores a value into the bool if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the bool if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the bool if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","A compiler memory fence.","Creates an AtomicBool initialized to false.","Creates a null AtomicPtr&lt;T&gt;.","An atomic fence.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Adds to the current value returning the previous value.","Logical “and” with a boolean value.","Performs a bitwise “and” operation on the address of …","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Offsets the pointer’s address by adding val <em>bytes</em> …","Offsets the pointer’s address by subtracting val <em>bytes</em> …","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Logical “nand” with a boolean value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Logical “not” with a boolean value.","Logical “or” with a boolean value.","Performs a bitwise “or” operation on the address of …","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Offsets the pointer’s address by adding val (in units of …","Offsets the pointer’s address by subtracting val (in …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Subtracts from the current value returning the previous …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Fetches the value and applies a function to it that …","Logical “xor” with a boolean value.","Performs a bitwise “xor” operation on the address of …","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Converts a bool into an AtomicBool.","Returns the argument unchanged.","Converts a *mut T into an AtomicPtr&lt;T&gt;.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an i8 into an AtomicI8.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an u8 into an AtomicU8.","Converts an i16 into an AtomicI16.","Returns the argument unchanged.","Converts an u16 into an AtomicU16.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an i32 into an AtomicI32.","Converts an u32 into an AtomicU32.","Returns the argument unchanged.","Converts an i64 into an AtomicI64.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an u64 into an AtomicU64.","Returns the argument unchanged.","Converts an isize into an AtomicIsize.","Returns the argument unchanged.","Converts an usize into an AtomicUsize.","Get atomic access to a &amp;mut bool.","Get atomic access to a pointer.","Get atomic access to a &amp;mut i8.","Get atomic access to a &amp;mut u8.","Get atomic access to a &amp;mut i16.","Get atomic access to a &amp;mut u16.","Get atomic access to a &amp;mut i32.","Get atomic access to a &amp;mut u32.","Get atomic access to a &amp;mut i64.","Get atomic access to a &amp;mut u64.","Get atomic access to a &amp;mut isize.","Get atomic access to a &amp;mut usize.","Get atomic access to a &amp;mut [bool] slice.","Get atomic access to a slice of pointers.","Get atomic access to a &amp;mut [i8] slice.","Get atomic access to a &amp;mut [u8] slice.","Get atomic access to a &amp;mut [i16] slice.","Get atomic access to a &amp;mut [u16] slice.","Get atomic access to a &amp;mut [i32] slice.","Get atomic access to a &amp;mut [u32] slice.","Get atomic access to a &amp;mut [i64] slice.","Get atomic access to a &amp;mut [u64] slice.","Get atomic access to a &amp;mut [isize] slice.","Get atomic access to a &amp;mut [usize] slice.","Creates a new AtomicBool from a pointer.","Creates a new AtomicPtr from a pointer.","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Returns a mutable reference to the underlying bool.","Returns a mutable reference to the underlying pointer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Get non-atomic access to a &amp;mut [AtomicBool] slice.","Get non-atomic access to a &amp;mut [AtomicPtr] slice.","Get non-atomic access to a &amp;mut [AtomicI8] slice","Get non-atomic access to a &amp;mut [AtomicU8] slice","Get non-atomic access to a &amp;mut [AtomicI16] slice","Get non-atomic access to a &amp;mut [AtomicU16] slice","Get non-atomic access to a &amp;mut [AtomicI32] slice","Get non-atomic access to a &amp;mut [AtomicU32] slice","Get non-atomic access to a &amp;mut [AtomicI64] slice","Get non-atomic access to a &amp;mut [AtomicU64] slice","Get non-atomic access to a &amp;mut [AtomicIsize] slice","Get non-atomic access to a &amp;mut [AtomicUsize] slice","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Loads a value from the bool.","Loads a value from the pointer.","Loads a value from the atomic integer.","Loads a value from the atomic integer."],"4":["Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Creates a new AtomicBool.","Creates a new AtomicPtr.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Signals the processor that it is inside a busy-wait …","Stores a value into the bool.","Stores a value into the pointer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the bool returning the previous value.","Stores a value into the pointer returning the previous …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","Stores a value into the atomic integer returning the …","The <strong>channel</strong>’s sending half has become disconnected and …","The <strong>channel</strong>’s sending half has become disconnected and …","This sync_channel’s receiving half has disconnected so …","This <strong>channel</strong> is currently empty but the <strong>Sender</strong>(s) have …","The data could not be sent on the sync_channel because it …","An owning iterator over messages on a Receiver created by …","An iterator over messages on a Receiver created by iter.","The receiving half of Rust’s channel (or sync_channel) …","An error returned from the recv function on a Receiver.","This enumeration is the list of possible errors that made …","An error returned from the Sender::send or SyncSender::send","The sending-half of Rust’s asynchronous channel type.","The sending-half of Rust’s synchronous sync_channel type.","This <strong>channel</strong> is currently empty but the <strong>Sender</strong>(s) have …","An iterator that attempts to yield all pending values for …","This enumeration is the list of the possible reasons that …","This enumeration is the list of the possible error …","Creates a new asynchronous channel returning the …","Clone a sender to send to other threads.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a RecvError into a TryRecvError.","Returns the argument unchanged.","Converts a RecvError into a RecvTimeoutError.","Converts a SendError&lt;T&gt; into a TrySendError&lt;T&gt;.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns an iterator that will block waiting for messages …","Attempts to wait for a value on this receiver returning …","Attempts to wait for a value on this receiver returning …","Attempts to wait for a value on this receiver returning …","Attempts to send a value on this channel returning it …","Sends a value on this synchronous channel.","Creates a new synchronous bounded channel. All data sent …","Returns an iterator that will attempt to yield all pending …","Attempts to return a pending value on this receiver …","Attempts to send a value on this channel without blocking.","The context of an asynchronous task.","A Builder used to construct a Context instance with …","An analogous trait to Wake but used to construct a …","A LocalWaker is analogous to a Waker but it does not …","Represents that a value is not ready yet.","Indicates whether a value is available or if the current …","A RawWaker allows the implementor of a task executor to …","A virtual function pointer table (vtable) that specifies …","Represents that a value is immediately ready.","The implementation of waking a task on an executor.","A Waker is a handle for waking up a task by notifying its …","Get a reference to the underlying RawWaker.","Get a reference to the underlying RawWaker.","Builds the Context.","Assigns a clone of source to self unless …","Get the data pointer used to create this RawWaker.","Returns a reference to the extension data for the current …","This method is used to set the value for the extension …","Returns the argument unchanged.","Use a Wake-able type as a Waker.","Returns the argument unchanged.","Use a Wake-able type as a LocalWaker.","Returns the argument unchanged.","Moves the value into a Poll::Ready to make a Poll&lt;T&gt;.","Returns the argument unchanged.","Use a Wake-able type as a RawWaker.","Use a Wake-able type as a RawWaker.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a ContextBuilder from an existing Context.","Creates a new Waker from RawWaker.","Creates a new LocalWaker from RawWaker.","Create a new Context from a &amp;Waker.","Create a ContextBuilder from a Waker.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns true if the poll is a Pending value.","Returns true if the poll is a Poll::Ready value.","Returns a reference to the LocalWaker for the current task.","This method is used to set the value for the local waker …","Maps a Poll&lt;T&gt; to Poll&lt;U&gt; by applying a function to a …","Maps a Poll::Ready&lt;Option&lt;Result&lt;T E&gt;&gt;&gt; to …","Maps a Poll::Ready&lt;Result&lt;T E&gt;&gt; to …","Maps a Poll&lt;Option&lt;Result&lt;T E&gt;&gt;&gt; to …","Maps a Poll&lt;Result&lt;T E&gt;&gt; to Poll&lt;Result&lt;U E&gt;&gt; by …","Creates a new RawWaker from the provided data pointer and …","Creates a new RawWakerVTable from the provided clone wake","Returns a reference to a Waker that does nothing when used.","Creates a new LocalWaker that does nothing when wake is …","Extracts the successful type of a Poll&lt;T&gt;.","Get the vtable pointer used to create this RawWaker.","Wake this task.","Wake this task.","Wake up the task associated with this Waker.","Wake up the task associated with this LocalWaker.","Wake this task without consuming the waker.","Wake this task without consuming the local waker.","Wake up the task associated with this Waker without …","Wake up the task associated with this LocalWaker without …","Returns a reference to the Waker for the current task.","This method is used to set the value for the waker on …","Returns true if this Waker and another Waker would awake …","Returns true if this LocalWaker and another LocalWaker …","An error returned by LocalKey::try_with.","Thread factory which can be used in order to configure …","Contains the error value","An owned permission to join on a thread (block on its …","A thread local storage key which owns its contents.","Contains the success value","A specialized Result type for threads.","A scope to spawn scoped threads in.","An owned permission to join on a scoped thread (block on …","A handle to a thread.","A unique identifier for a running thread.","This returns a numeric identifier for the thread …","Returns an estimate of the default amount of parallelism a …","Gets a handle to the thread that invokes it.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a copy of the contained value.","Gets the thread’s unique identifier.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Checks if the associated thread has finished running its …","Checks if the associated thread has finished running its …","Waits for the associated thread to finish.","Waits for the associated thread to finish.","Names the thread-to-be. Currently the name is used for …","Gets the thread’s name.","Generates the base configuration for spawning a thread …","Determines whether the current thread is unwinding because …","Blocks unless or until the current thread’s token is …","Blocks unless or until the current thread’s token is …","Use park_timeout.","Replaces the contained value returning the old value.","Replaces the contained value returning the old value.","Create a scope for spawning scoped threads.","Sets or initializes the contained value.","Sets or initializes the contained value.","Puts the current thread to sleep for at least the …","Use sleep.","Puts the current thread to sleep until the specified …","Spawns a new thread returning a JoinHandle for it.","Spawns a new thread within a scope returning a …","Spawns a new thread by taking ownership of the Builder …","Spawns a new scoped thread using the settings set through …","Spawns a new thread without any lifetime restrictions by …","Sets the size of the stack (in bytes) for the new thread.","Takes the contained value leaving Default::default() in …","Takes the contained value leaving Default::default() in …","Extracts a handle to the underlying thread.","Extracts a handle to the underlying thread.","Acquires a reference to the value in this TLS key.","Atomically makes the handle’s token available if it is …","Acquires a reference to the value in this TLS key.","Acquires a reference to the contained value.","Acquires a mutable reference to the contained value.","Cooperatively gives up a timeslice to the OS scheduler.","A Duration type to represent a span of time typically …","A measurement of a monotonically nondecreasing clock. …","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","A measurement of the system clock useful for talking to …","An error returned from the duration_since and elapsed …","An error which can be returned when converting a …","An anchor in time which can be used to create new …","An anchor in time which can be used to create new …","A duration of zero time.","Computes the absolute difference between self and other.","Panics","Panics","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the number of milliseconds contained by this …","Returns the number of milliseconds contained by this …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this Duration …","Returns the number of seconds contained by this Duration …","Returns Some(t) where t is the time self + duration if t …","Returns Some(t) where t is the time self + duration if t …","Checked Duration addition. Computes self + other …","Checked Duration division. Computes self / other …","Returns the amount of time elapsed from another instant to …","Checked Duration multiplication. Computes self * other …","Returns Some(t) where t is the time self - duration if t …","Returns Some(t) where t is the time self - duration if t …","Checked Duration subtraction. Computes self - other …","Divide Duration by Duration and return f32.","Divide Duration by Duration and return f64.","Divide Duration by f32.","Divide Duration by f64.","Returns the positive duration which represents how far …","Returns the amount of time elapsed from another instant to …","Returns the amount of time elapsed from an earlier point …","Returns the amount of time elapsed since this instant.","Returns the difference from this system time to the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new Duration from the specified number of days.","Creates a new Duration from the specified number of hours.","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of whole …","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of …","Creates a new Duration from the specified number of weeks.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Returns true if this Duration spans no time.","Multiplies Duration by f32.","Multiplies Duration by f64.","Creates a new Duration from the specified number of whole …","Returns an instant corresponding to “now”.","Returns the system time corresponding to “now”.","Saturating Duration addition. Computes self + other …","Returns the amount of time elapsed from another instant to …","Saturating Duration multiplication. Computes self * other …","Saturating Duration subtraction. Computes self - other …","Returns the amount of time elapsed from another instant to …","Returns the fractional part of this Duration in whole …","Returns the fractional part of this Duration in whole …","Returns the fractional part of this Duration in …","The checked version of from_secs_f32.","The checked version of from_secs_f64.","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","The largest value that can be represented by this integer …","The smallest value that can be represented by this integer …","A draining iterator for Vec&lt;T&gt;.","An iterator which uses a closure to determine if an …","An iterator that moves out of a vector.","A splicing iterator for Vec.","A contiguous growable array type written as Vec&lt;T&gt; short …","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Moves all the elements of other into self leaving other …","Returns an unsafe mutable pointer to the vector’s …","Returns the remaining items of this iterator as a mutable …","Extracts a mutable slice of the entire vector.","Returns a raw pointer to the vector’s buffer or a …","Returns the remaining items of this iterator as a slice.","Returns the remaining items of this iterator as a slice.","Extracts a slice containing the entire vector.","Returns the total number of elements the vector can hold …","Clears the vector removing all values.","Overwrites the contents of self with a clone of the …","Removes consecutive repeated elements in the vector …","Removes all but the first of consecutive elements in the …","Removes all but the first of consecutive elements in the …","Creates an empty vec::IntoIter.","Creates an empty Vec&lt;T&gt;.","Removes the specified range from the vector in bulk …","Clones and appends all elements in a slice to the Vec.","Copies elements from src range to the end of the vector.","Creates an iterator which uses a closure to determine if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Allocate a Vec&lt;T&gt; and fill it by cloning s’s items.","Converts the given String to a vector Vec that holds …","Turn a VecDeque&lt;T&gt; into a Vec&lt;T&gt;.","Allocate a Vec&lt;T&gt; and fill it by cloning s’s items.","Converts a CString into a Vec&lt;u8&gt;.","Allocate a Vec&lt;T&gt; and fill it by cloning s’s items.","Converts a BinaryHeap&lt;T&gt; into a Vec&lt;T&gt;.","Convert a boxed slice into a vector by transferring …","Convert a clone-on-write slice into a vector.","Allocate a Vec&lt;T&gt; and move s’s items into it.","Allocate a Vec&lt;u8&gt; and fill it with a UTF-8 string.","Allocate a Vec&lt;T&gt; and fill it by cloning s’s items.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a Vec&lt;T&gt; directly from a pointer a length and a …","Creates a Vec&lt;T A&gt; directly from a pointer a length a …","Inserts an element at position index within the vector …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Converts the vector into Box&lt;[T]&gt;.","Takes a Vec&lt;[T; N]&gt; and flattens it into a Vec&lt;T&gt;.","Creates a consuming iterator that is one that moves each …","Decomposes a Vec&lt;T&gt; into its raw components: …","Decomposes a Vec&lt;T&gt; into its raw components: …","Returns true if the vector contains no elements.","Keep unyielded elements in the source Vec.","Consumes and leaks the Vec returning a mutable reference …","Returns the number of elements in the vector also …","Constructs a new empty Vec&lt;T&gt;.","Constructs a new empty Vec&lt;T A&gt;.","Removes the last element from a vector and returns it or …","Removes and returns the last element in a vector if the …","Appends an element to the back of a collection.","Appends an element if there is sufficient spare capacity …","Removes and returns the element at position index within …","Reserves capacity for at least additional more elements to …","Reserves the minimum capacity for at least additional more …","Resizes the Vec in-place so that len is equal to new_len.","Resizes the Vec in-place so that len is equal to new_len.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate …","Forces the length of the vector to new_len.","Shrinks the capacity of the vector with a lower bound.","Shrinks the capacity of the vector as much as possible.","Returns the remaining spare capacity of the vector as a …","Creates a splicing iterator that replaces the specified …","Returns vector content as a slice of T along with the …","Splits the collection into two at the given index.","Removes an element from the vector and returns it.","Shortens the vector keeping the first len elements and …","Tries to reserve capacity for at least additional more …","Tries to reserve the minimum capacity for at least …","Constructs a new empty Vec&lt;T&gt; with at least the specified …","Constructs a new empty Vec&lt;T A&gt; with at least the …","Constructs a new empty Vec&lt;T&gt; with at least the specified …","Constructs a new empty Vec&lt;T A&gt; with at least the …"]}],["test",{"0":["Support code for rustc’s built in unit-test and …","Whether should console output be colored or not","Doctests are created by the librustdoc manually so it’s …","Integration-style tests are expected to be in the tests …","JSON output","JUnit output","Run only ignored tests","Options for the test run defined by the caller (instead of …","Format of the test results output","Verbose output","Whether ignored test should be run or not","Whether test is expected to panic or not","Quiet output","Type of the test according to the Rust book conventions.","Unit-tests are expected to be in the src folder of the …","Tests for the sources that don’t follow the project …","Invoked when unit tests terminate. Returns Result::Err if …","Benchmarking module.","Stop at first failing test. May run a few more tests due …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","A simple console test runner. Runs provided tests …","A variant optimized for invocation with a static test …","A variant optimized for invocation with a static test …","Manager of the benchmarking runs.","An identity function that <em><strong>hints</strong></em> to the compiler to be …","Returns the argument unchanged.","Returns the argument unchanged.","Calls U::from(self).","Calls U::from(self).","Callback for benchmark functions to run in their body.","Trait that provides simple descriptive statistics on a …","Extracted collection of all the summary statistics of a …","Returns the argument unchanged.","Calls U::from(self).","Inter-quartile range: the difference between the 25th …","Maximum value of the samples.","Arithmetic mean (average) of the samples: sum divided by …","Median of the samples: value separating the lower half of …","Scaled median of the absolute deviations of each sample …","Median absolute deviation as a percent of the median. See …","Minimum value of the samples.","Construct a new summary of a sample set.","Percentile: the value below which pct percent of the …","Quartiles of the sample: three values that divide the …","Standard deviation: the square root of the sample variance.","Standard deviation as a percent of the mean value. See …","Sum of the samples.","Variance of the samples: bias-corrected mean of the …","Winsorize a set of samples replacing values above the …","Doctests are created by the librustdoc manually so it’s …","Runs the test in the current process and sends the result …","Integration-style tests are expected to be in the tests …","Run only ignored tests","Options for the test run defined by the caller (instead of …","Whether ignored test should be run or not","Whether test is expected to panic or not","Spawns a subprocess to run the test and sends the result …","The measured execution time of a unit test.","Structure with parameters for calculating test execution …","Type of the test according to the Rust book conventions.","Unit-tests are expected to be in the src folder of the …","Tests for the sources that don’t follow the project …","Denotes if the test critical execution time limit excess …","Stop at first failing test. May run a few more tests due …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Insert a named value (+/- noise) metric into the map. The …","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Calls U::from(self).","Parses command line arguments into test options. Returns …","Returns None for ignored test or tests that are just run …"]}]]`));
export default stdDescShards;